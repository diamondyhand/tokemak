/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ConvexFraxController,
  ConvexFraxControllerInterface,
} from "../ConvexFraxController";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_manager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_accessControl",
        type: "address",
      },
      {
        internalType: "address",
        name: "_addressRegistry",
        type: "address",
      },
      {
        internalType: "address",
        name: "_fraxVoterProxy",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "kekId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "secs",
        type: "uint256",
      },
    ],
    name: "StakeLocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "vault",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
    ],
    name: "VaultCreated",
    type: "event",
  },
  {
    inputs: [],
    name: "ADD_LIQUIDITY_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MISC_OPERATION_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "REMOVE_LIQUIDITY_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "VOTER_PROXY",
    outputs: [
      {
        internalType: "contract IFraxVoteProxy",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "accessControl",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "addressRegistry",
    outputs: [
      {
        internalType: "contract IAddressRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "minAmount",
            type: "uint256",
          },
        ],
        internalType: "struct ConvexFraxController.ExpectedReward[]",
        name: "expectedRewards",
        type: "tuple[]",
      },
    ],
    name: "claimRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "lpToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "staking",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "secs",
        type: "uint256",
      },
    ],
    name: "depositAndStakeLockedCurveLp",
    outputs: [
      {
        internalType: "bytes32",
        name: "kekId",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
    ],
    name: "getPoolInfo",
    outputs: [
      {
        internalType: "address",
        name: "implementation",
        type: "address",
      },
      {
        internalType: "address",
        name: "stakingAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "stakingToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "rewardsAddress",
        type: "address",
      },
      {
        internalType: "bool",
        name: "active",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "lockedStakesOf",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "kek_id",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "start_timestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "liquidity",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "ending_timestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lock_multiplier",
            type: "uint256",
          },
        ],
        internalType: "struct IFraxUnifiedFarm.LockedStake[]",
        name: "lockedStakes",
        type: "tuple[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "manager",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "kekId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minAmount",
        type: "uint256",
      },
    ],
    name: "withdrawLockedAndUnwrap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x610160604052604051620000139062000213565b60405190819003812060e0526200002a90620001ea565b60405190819003812061010052620000429062000231565b604051908190039020610120523480156200005c57600080fd5b5060405162002841380380620028418339810160408190526200007f916200018a565b8383836001600160a01b038316620000b45760405162461bcd60e51b8152600401620000ab906200025a565b60405180910390fd5b6001600160a01b038216620000dd5760405162461bcd60e51b8152600401620000ab906200025a565b6001600160a01b038116620001065760405162461bcd60e51b8152600401620000ab906200025a565b6001600160601b0319606093841b811660805291831b821660a05290911b1660c0526001600160a01b038116620001515760405162461bcd60e51b8152600401620000ab9062000283565b60601b6001600160601b0319166101405250620002c6915050565b80516001600160a01b03811681146200018457600080fd5b92915050565b60008060008060808587031215620001a0578384fd5b620001ac86866200016c565b9350620001bd86602087016200016c565b9250620001ce86604087016200016c565b9150620001df86606087016200016c565b905092959194509250565b7f52454d4f56455f4c49515549444954595f524f4c450000000000000000000000815260150190565b714144445f4c49515549444954595f524f4c4560701b815260120190565b7f4d4953435f4f5045524154494f4e5f524f4c4500000000000000000000000000815260130190565b6020808252600f908201526e494e56414c49445f4144445245535360881b604082015260600190565b60208082526023908201527f494e56414c49445f465241585f53595354454d5f424f4f535445525f4144445260408201526245535360e81b606082015260800190565b60805160601c60a05160601c60c05160601c60e05161010051610120516101405160601c6124e46200035d60003980611128528061155252508061026c52806109d15250806106ee52806109f55250806101b55280610ab8525080610b7e528061114c52508061023f528061061d52806106c15280610a8b5250806101e2528061066d52806109ad5280610a3752506124e46000f3fe608060405234801561001057600080fd5b50600436106100d45760003560e01c806361bea27f11610081578063c78b76531161005b578063c78b765314610190578063d4152629146101a3578063f3ad65f4146101ab576100d4565b806361bea27f146101605780637e841d541461016857806399eace0914610170576100d4565b80632f380b35116100b25780632f380b351461012157806337f670d814610145578063481c6a7514610158576100d4565b80630f967dd6146100d95780631245cafe146100f757806313007d551461010c575b600080fd5b6100e16101b3565b6040516100ee9190611eeb565b60405180910390f35b61010a610105366004611d6f565b6101d7565b005b61011461061b565b6040516100ee9190611e03565b61013461012f366004611cd7565b61063f565b6040516100ee959493929190611e31565b61010a610153366004611c71565b610662565b6101146109ab565b6100e16109cf565b6100e16109f3565b61018361017e366004611cef565b610a17565b6040516100ee9190611e7d565b6100e161019e366004611d1e565b610a2a565b610114611126565b61011461114a565b7f000000000000000000000000000000000000000000000000000000000000000081565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146102285760405162461bcd60e51b815260040161021f906121f8565b60405180910390fd5b604051632474521560e21b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906391d1485490610296907f0000000000000000000000000000000000000000000000000000000000000000903390600401611ef4565b60206040518083038186803b1580156102ae57600080fd5b505afa1580156102c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102e69190611c39565b6103025760405162461bcd60e51b815260040161021f90611fe3565b60006103108430600161116e565b90508161032f5760405162461bcd60e51b815260040161021f90611f3e565b8160608167ffffffffffffffff8111801561034957600080fd5b50604051908082528060200260200182016040528015610373578160200160208202803683370190505b50905060005b828110156104b157610389611a67565b86868381811061039557fe5b9050604002018036038101906103ab9190611c9c565b80519091506001600160a01b03166103d55760405162461bcd60e51b815260040161021f90611f75565b60008160200151116103f95760405162461bcd60e51b815260040161021f9061239f565b80516040517f70a082310000000000000000000000000000000000000000000000000000000081526001600160a01b03909116906370a0823190610441903090600401611e03565b60206040518083038186803b15801561045957600080fd5b505afa15801561046d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104919190611c59565b83838151811061049d57fe5b602090810291909101015250600101610379565b50826001600160a01b0316633d18b9126040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156104ed57600080fd5b505af1158015610501573d6000803e3d6000fd5b506000925050505b8281101561061257610519611a67565b86868381811061052557fe5b90506040020180360381019061053b9190611c9c565b905060006105e284848151811061054e57fe5b602002602001015183600001516001600160a01b03166370a08231306040518263ffffffff1660e01b81526004016105869190611e03565b60206040518083038186803b15801561059e57600080fd5b505afa1580156105b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105d69190611c59565b9063ffffffff6112c316565b905081602001518110156106085760405162461bcd60e51b815260040161021f9061201a565b5050600101610509565b50505050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000806000806000610650866112eb565b939a9299509097509550909350915050565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146106aa5760405162461bcd60e51b815260040161021f906121f8565b604051632474521560e21b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906391d1485490610718907f0000000000000000000000000000000000000000000000000000000000000000903390600401611ef4565b60206040518083038186803b15801561073057600080fd5b505afa158015610744573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107689190611c39565b6107845760405162461bcd60e51b815260040161021f906121c1565b60006107928330600161116e565b9050600061079f846112eb565b5050925050506000816001600160a01b0316634f39059c6040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156107e257600080fd5b505af11580156107f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061081a9190611aff565b9050610824611a7e565b61082f863089611421565b90506000826001600160a01b03166370a08231306040518263ffffffff1660e01b815260040161085f9190611e03565b60206040518083038186803b15801561087757600080fd5b505afa15801561088b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108af9190611c59565b6040517f4ab794a30000000000000000000000000000000000000000000000000000000081529091506001600160a01b03861690634ab794a3906108f7908b90600401611eeb565b600060405180830381600087803b15801561091157600080fd5b505af1158015610925573d6000803e3d6000fd5b50505050600061095b82856001600160a01b03166370a08231306040518263ffffffff1660e01b81526004016105869190611e03565b9050826040015181146109805760405162461bcd60e51b815260040161021f90612368565b868110156109a05760405162461bcd60e51b815260040161021f9061201a565b505050505050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b6060610a238383611487565b9392505050565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610a745760405162461bcd60e51b815260040161021f906121f8565b604051632474521560e21b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906391d1485490610ae2907f0000000000000000000000000000000000000000000000000000000000000000903390600401611ef4565b60206040518083038186803b158015610afa57600080fd5b505afa158015610b0e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b329190611c39565b610b4e5760405162461bcd60e51b815260040161021f90612153565b6040517feb6b26400000000000000000000000000000000000000000000000000000000081526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063eb6b264090610bb6908890600090600401611e64565b60206040518083038186803b158015610bce57600080fd5b505afa158015610be2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c069190611c39565b610c225760405162461bcd60e51b815260040161021f90612088565b6001600160a01b038416610c485760405162461bcd60e51b815260040161021f9061229d565b60008311610c685760405162461bcd60e51b815260040161021f90612331565b6000610c7261154d565b90506000816001600160a01b031663afcff50f6040518163ffffffff1660e01b8152600401602060405180830381600087803b158015610cb157600080fd5b505af1158015610cc5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ce99190611aff565b9050600080826001600160a01b0316631526fe278b6040518263ffffffff1660e01b8152600401610d1a9190611eeb565b60a060405180830381600087803b158015610d3457600080fd5b505af1158015610d48573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d6c9190611b1b565b505092509250506000816001600160a01b0316634f39059c6040518163ffffffff1660e01b8152600401602060405180830381600087803b158015610db057600080fd5b505af1158015610dc4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610de89190611aff565b9050806001600160a01b03168a6001600160a01b031614610e1b5760405162461bcd60e51b815260040161021f9061222f565b826001600160a01b0316896001600160a01b031614610e4c5760405162461bcd60e51b815260040161021f9061218a565b6000610e5a8c30600061116e565b90506001600160a01b038116610f45576040517f9abbdf4b0000000000000000000000000000000000000000000000000000000081526001600160a01b03871690639abbdf4b90610eaf908f90600401611eeb565b602060405180830381600087803b158015610ec957600080fd5b505af1158015610edd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f019190611aff565b9050806001600160a01b03167fa510df27d6e51efd91d3f55722bad1f26bf924a63e5dcee07c2ab4c3d4992dcc8d604051610f3c9190611eeb565b60405180910390a25b610f50818c8b6115e9565b6040517fd9f96e8d0000000000000000000000000000000000000000000000000000000081526000906001600160a01b0386169063d9f96e8d90610f98908590600401611e03565b60206040518083038186803b158015610fb057600080fd5b505afa158015610fc4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fe89190611c59565b6040517fa41ce7e90000000000000000000000000000000000000000000000000000000081529091506001600160a01b0383169063a41ce7e990611032908d908d906004016123d6565b602060405180830381600087803b15801561104c57600080fd5b505af1158015611060573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110849190611c59565b975060006110b882876001600160a01b031663d9f96e8d866040518263ffffffff1660e01b81526004016105869190611e03565b90508a81146110d95760405162461bcd60e51b815260040161021f9061201a565b887f11aaf697a4c183f1d9ce9d869290ea04202318c6c7875793053ade97eaad56678f8d8d60405161110d939291906123e4565b60405180910390a2505050505050505095945050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008061117961154d565b90506000816001600160a01b031663afcff50f6040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156111b857600080fd5b505af11580156111cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111f09190611aff565b6040517fbfff576f0000000000000000000000000000000000000000000000000000000081529091506001600160a01b0382169063bfff576f9061123a9089908990600401611ef4565b602060405180830381600087803b15801561125457600080fd5b505af1158015611268573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061128c9190611aff565b925083156112ba576001600160a01b0383166112ba5760405162461bcd60e51b815260040161021f90612051565b50509392505050565b6000828211156112e55760405162461bcd60e51b815260040161021f906120bf565b50900390565b6000806000806000806112fc61154d565b90506000816001600160a01b031663afcff50f6040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561133b57600080fd5b505af115801561134f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113739190611aff565b6040517f1526fe270000000000000000000000000000000000000000000000000000000081529091506001600160a01b03821690631526fe27906113bb908b90600401611eeb565b60a060405180830381600087803b1580156113d557600080fd5b505af11580156113e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061140d9190611b1b565b939c929b5090995097509095509350505050565b611429611a7e565b60606114358585611487565b905060005b81518110156112ba578382828151811061145057fe5b602002602001015160000151141561147f5781818151811061146e57fe5b602002602001015192505050610a23565b60010161143a565b606060006114978484600161116e565b905060006114a4856112eb565b50506040517f1e090f01000000000000000000000000000000000000000000000000000000008152919350506001600160a01b0383169150631e090f01906114f0908590600401611e03565b60006040518083038186803b15801561150857600080fd5b505afa15801561151c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526115449190810190611b93565b95945050505050565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663570ca7356040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156115ab57600080fd5b505af11580156115bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115e39190611aff565b92915050565b604051636eb1769f60e11b81526000906001600160a01b0384169063dd62ed3e9061161a9030908890600401611e17565b60206040518083038186803b15801561163257600080fd5b505afa158015611646573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061166a9190611c59565b9050801561168c5761168c6001600160a01b038416858363ffffffff6116ac16565b6116a66001600160a01b038416858463ffffffff6117db16565b50505050565b60006117568260405180606001604052806029815260200161248660299139604051636eb1769f60e11b81526001600160a01b0388169063dd62ed3e906116f99030908a90600401611e17565b60206040518083038186803b15801561171157600080fd5b505afa158015611725573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117499190611c59565b919063ffffffff61186b16565b90506116a68463095ea7b360e01b8584604051602401611777929190611e64565b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152611897565b600061175682856001600160a01b031663dd62ed3e30876040518363ffffffff1660e01b815260040161180f929190611e17565b60206040518083038186803b15801561182757600080fd5b505afa15801561183b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061185f9190611c59565b9063ffffffff61192b16565b6000818484111561188f5760405162461bcd60e51b815260040161021f9190611f0b565b505050900390565b60606118ec826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166119509092919063ffffffff16565b805190915015611926578080602001905181019061190a9190611c39565b6119265760405162461bcd60e51b815260040161021f906122d4565b505050565b600082820183811015610a235760405162461bcd60e51b815260040161021f90611fac565b606061195f8484600085611967565b949350505050565b6060824710156119895760405162461bcd60e51b815260040161021f906120f6565b61199285611a28565b6119ae5760405162461bcd60e51b815260040161021f90612266565b60006060866001600160a01b031685876040516119cb9190611de7565b60006040518083038185875af1925050503d8060008114611a08576040519150601f19603f3d011682016040523d82523d6000602084013e611a0d565b606091505b5091509150611a1d828286611a2e565b979650505050505050565b3b151590565b60608315611a3d575081610a23565b825115611a4d5782518084602001fd5b8160405162461bcd60e51b815260040161021f9190611f0b565b604080518082019091526000808252602082015290565b6040518060a0016040528060008019168152602001600081526020016000815260200160008152602001600081525090565b600060a08284031215611ac1578081fd5b611acb60a06123fa565b9050815181526020820151602082015260408201516040820152606082015160608201526080820151608082015292915050565b600060208284031215611b10578081fd5b8151610a238161246d565b600080600080600060a08688031215611b32578081fd5b8551611b3d8161246d565b6020870151909550611b4e8161246d565b6040870151909450611b5f8161246d565b6060870151909350611b708161246d565b60808701519092508015158114611b85578182fd5b809150509295509295909350565b60006020808385031215611ba5578182fd5b825167ffffffffffffffff811115611bbb578283fd5b80840185601f820112611bcc578384fd5b80519150611be1611bdc83612421565b6123fa565b8281528381019082850160a0808602850187018a1015611bff578788fd5b8794505b85851015611c2b57611c158a83611ab0565b8452600194909401939286019290810190611c03565b509098975050505050505050565b600060208284031215611c4a578081fd5b81518015158114610a23578182fd5b600060208284031215611c6a578081fd5b5051919050565b600080600060608486031215611c85578283fd5b505081359360208301359350604090920135919050565b600060408284031215611cad578081fd5b611cb760406123fa565b8235611cc28161246d565b81526020928301359281019290925250919050565b600060208284031215611ce8578081fd5b5035919050565b60008060408385031215611d01578182fd5b823591506020830135611d138161246d565b809150509250929050565b600080600080600060a08688031215611d35578081fd5b853594506020860135611d478161246d565b93506040860135611d578161246d565b94979396509394606081013594506080013592915050565b600080600060408486031215611d83578081fd5b83359250602084013567ffffffffffffffff80821115611da1578283fd5b81860187601f820112611db2578384fd5b8035925081831115611dc2578384fd5b876020604085028301011115611dd6578384fd5b949760209095019650909450505050565b60008251611df9818460208701612441565b9190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b039586168152938516602085015291841660408401529092166060820152901515608082015260a00190565b6001600160a01b03929092168252602082015260400190565b602080825282518282018190526000919060409081850190868401855b82811015611ede5781518051855286810151878601528581015186860152606080820151908601526080908101519085015260a09093019290850190600101611e9a565b5091979650505050505050565b90815260200190565b9182526001600160a01b0316602082015260400190565b6000602082528251806020840152611f2a816040850160208701612441565b601f01601f19169190910160400192915050565b60208082526018908201527f494e56414c49445f45585045435445445f524557415244530000000000000000604082015260600190565b6020808252601c908201527f494e56414c49445f5245574152445f544f4b454e5f4144445245535300000000604082015260600190565b6020808252601b908201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604082015260600190565b60208082526017908201527f4e4f545f4d4953435f4f5045524154494f4e5f524f4c45000000000000000000604082015260600190565b60208082526015908201527f42414c414e43455f4d5553545f494e4352454153450000000000000000000000604082015260600190565b60208082526010908201527f5641554c545f4e4f545f45584953545300000000000000000000000000000000604082015260600190565b60208082526010908201527f494e56414c49445f4c505f544f4b454e00000000000000000000000000000000604082015260600190565b6020808252601e908201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604082015260600190565b60208082526026908201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60408201527f722063616c6c0000000000000000000000000000000000000000000000000000606082015260800190565b60208082526016908201527f4e4f545f4144445f4c49515549444954595f524f4c4500000000000000000000604082015260600190565b60208082526018908201527f504f4f4c5f49445f5354414b494e475f4d49534d415443480000000000000000604082015260600190565b60208082526019908201527f4e4f545f52454d4f56455f4c49515549444954595f524f4c4500000000000000604082015260600190565b60208082526013908201527f4e4f545f4d414e414745525f4144445245535300000000000000000000000000604082015260600190565b60208082526019908201527f504f4f4c5f49445f4c505f544f4b454e5f4d49534d4154434800000000000000604082015260600190565b6020808252601d908201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604082015260600190565b60208082526017908201527f494e56414c49445f5354414b494e475f41444452455353000000000000000000604082015260600190565b6020808252602a908201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60408201527f6f74207375636365656400000000000000000000000000000000000000000000606082015260800190565b6020808252600e908201527f494e56414c49445f414d4f554e54000000000000000000000000000000000000604082015260600190565b60208082526016908201527f57495448445241574e5f414d545f4d49534d4154434800000000000000000000604082015260600190565b60208082526019908201527f494e56414c49445f4d494e5f5245574152445f414d4f554e5400000000000000604082015260600190565b918252602082015260400190565b9283526020830191909152604082015260600190565b60405181810167ffffffffffffffff8111828210171561241957600080fd5b604052919050565b600067ffffffffffffffff821115612437578081fd5b5060209081020190565b60005b8381101561245c578181015183820152602001612444565b838111156116a65750506000910152565b6001600160a01b038116811461248257600080fd5b5056fe5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa264697066735822122097dffc8fea99941ceac2e21626c13a3b10b744bacb2107d6237263986a45ebce64736f6c634300060b0033";

export class ConvexFraxController__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _manager: string,
    _accessControl: string,
    _addressRegistry: string,
    _fraxVoterProxy: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ConvexFraxController> {
    return super.deploy(
      _manager,
      _accessControl,
      _addressRegistry,
      _fraxVoterProxy,
      overrides || {}
    ) as Promise<ConvexFraxController>;
  }
  getDeployTransaction(
    _manager: string,
    _accessControl: string,
    _addressRegistry: string,
    _fraxVoterProxy: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _manager,
      _accessControl,
      _addressRegistry,
      _fraxVoterProxy,
      overrides || {}
    );
  }
  attach(address: string): ConvexFraxController {
    return super.attach(address) as ConvexFraxController;
  }
  connect(signer: Signer): ConvexFraxController__factory {
    return super.connect(signer) as ConvexFraxController__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ConvexFraxControllerInterface {
    return new utils.Interface(_abi) as ConvexFraxControllerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ConvexFraxController {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ConvexFraxController;
  }
}
