/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  CurveControllerPool3,
  CurveControllerPool3Interface,
} from "../CurveControllerPool3";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_manager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_accessControl",
        type: "address",
      },
      {
        internalType: "address",
        name: "_addressRegistry",
        type: "address",
      },
      {
        internalType: "contract IAddressProvider",
        name: "_curveAddressProvider",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ADD_LIQUIDITY_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MISC_OPERATION_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "N_COINS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "REMOVE_LIQUIDITY_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "accessControl",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "addressProvider",
    outputs: [
      {
        internalType: "contract IAddressProvider",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "addressRegistry",
    outputs: [
      {
        internalType: "contract IAddressRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "poolAddress",
        type: "address",
      },
      {
        internalType: "uint256[3]",
        name: "amounts",
        type: "uint256[3]",
      },
      {
        internalType: "uint256",
        name: "minMintAmount",
        type: "uint256",
      },
    ],
    name: "deploy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "manager",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "poolAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256[3]",
        name: "minAmounts",
        type: "uint256[3]",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "poolAddress",
        type: "address",
      },
      {
        internalType: "uint256[3]",
        name: "amounts",
        type: "uint256[3]",
      },
      {
        internalType: "uint256",
        name: "maxBurnAmount",
        type: "uint256",
      },
    ],
    name: "withdrawImbalance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "poolAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
      {
        internalType: "int128",
        name: "i",
        type: "int128",
      },
      {
        internalType: "uint256",
        name: "minAmount",
        type: "uint256",
      },
    ],
    name: "withdrawOneCoin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x61016060408190527fad02fbc13153ebd0c0ef004ff61ba31d9ce93d7998e6fc3a4a4a667ac0ae2a1660e0527f99a732c1592dacad61c17aa1d8c4a304ed8aa6966133090e2df7f7c3ec3c66f7610100527f4d4953435f4f5045524154494f4e5f524f4c450000000000000000000000000090527fb31eaee23a579dabb2a4effb45a79031addeff3990e6fc9284cc2ad257c588a1610120523480156100a457600080fd5b506040516200250f3803806200250f833981810160405260808110156100c957600080fd5b50805160208201516040830151606090930151919290918383836001600160a01b038316610130576040805162461bcd60e51b815260206004820152600f60248201526e494e56414c49445f4144445245535360881b604482015290519081900360640190fd5b6001600160a01b03821661017d576040805162461bcd60e51b815260206004820152600f60248201526e494e56414c49445f4144445245535360881b604482015290519081900360640190fd5b6001600160a01b0381166101ca576040805162461bcd60e51b815260206004820152600f60248201526e494e56414c49445f4144445245535360881b604482015290519081900360640190fd5b6001600160601b0319606093841b811660805291831b821660a05290911b1660c0526001600160a01b038116610247576040805162461bcd60e51b815260206004820152601e60248201527f494e56414c49445f43555256455f414444524553535f50524f56494445520000604482015290519081900360640190fd5b6001600160601b031960609190911b166101405250505060805160601c60a05160601c60c05160601c60e05161010051610120516101405160601c612206620003096000398061068452806119165250806110a85250806103445280610d7652806110cc528061117152508061027b528061072952508061090e52806116245280611a4452508061029f528061037a528061075f5280610dac52806111a75250806102cc52806106b15280610cd15280610cfe52806110f952506122066000f3fe608060405234801561001057600080fd5b50600436106100d45760003560e01c8063481c6a75116100815780637e841d541161005b5780637e841d541461022e578063cb1fe37514610236578063f3ad65f414610271576100d4565b8063481c6a75146101bd5780635ab0e6da146101c557806361bea27f14610226576100d4565b806329357750116100b2578063293577501461017c5780632954018c14610184578063376ed3b01461018c576100d4565b80630f967dd6146100d957806313007d55146100f357806316ebf00814610117575b600080fd5b6100e1610279565b60408051918252519081900360200190f35b6100fb61029d565b604080516001600160a01b039092168252519081900360200190f35b61017a600480360360a081101561012d57600080fd5b60408051606081810183526001600160a01b0385351694602081013594810193909260a0840192909184019060039083908390808284376000920191909152509194506102c19350505050565b005b6100e161067d565b6100fb610682565b61017a600480360360a08110156101a257600080fd5b506001600160a01b03813516906020810190608001356106a6565b6100fb610ccf565b61017a600480360360a08110156101db57600080fd5b6040805160608181019092526001600160a01b03843516939283019291608083019190602084019060039083908390808284376000920191909152509194505090359150610cf39050565b6100e16110a6565b6100e16110ca565b61017a6004803603608081101561024c57600080fd5b506001600160a01b03813516906020810135906040810135600f0b90606001356110ee565b6100fb611622565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610334576040805162461bcd60e51b81526020600482015260136024820152724e4f545f4d414e414745525f4144445245535360681b604482015290519081900360640190fd5b60408051632474521560e21b81527f0000000000000000000000000000000000000000000000000000000000000000600482015233602482015290516001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016916391d14854916044808301926020929190829003018186803b1580156103c057600080fd5b505afa1580156103d4573d6000803e3d6000fd5b505050506040513d60208110156103ea57600080fd5b505161043d576040805162461bcd60e51b815260206004820152601960248201527f4e4f545f52454d4f56455f4c49515549444954595f524f4c4500000000000000604482015290519081900360640190fd5b60006104498484611646565b604080516370a0823160e01b815230600482015290519192506000916001600160a01b038416916370a08231916024808301926020929190829003018186803b15801561049557600080fd5b505afa1580156104a9573d6000803e3d6000fd5b505050506040513d60208110156104bf57600080fd5b505190506104cb612139565b6104d48661167f565b6040517fecb586a5000000000000000000000000000000000000000000000000000000008152600481018781529192506001600160a01b0388169163ecb586a5918891889160240182606080838360005b8381101561053d578181015183820152602001610525565b5050505090500192505050600060405180830381600087803b15801561056257600080fd5b505af1158015610576573d6000803e3d6000fd5b5050604080516370a0823160e01b81523060048201529051600093506001600160a01b03871692506370a0823191602480820192602092909190829003018186803b1580156105c457600080fd5b505afa1580156105d8573d6000803e3d6000fd5b505050506040513d60208110156105ee57600080fd5b505190506105fa612139565b6106038861167f565b90506106108382886117a3565b81610621858963ffffffff61185816565b14610673576040805162461bcd60e51b815260206004820152601560248201527f4c505f544f4b454e5f414d545f4d49534d415443480000000000000000000000604482015290519081900360640190fd5b5050505050505050565b600381565b7f000000000000000000000000000000000000000000000000000000000000000081565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610719576040805162461bcd60e51b81526020600482015260136024820152724e4f545f4d414e414745525f4144445245535360681b604482015290519081900360640190fd5b60408051632474521560e21b81527f0000000000000000000000000000000000000000000000000000000000000000600482015233602482015290516001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016916391d14854916044808301926020929190829003018186803b1580156107a557600080fd5b505afa1580156107b9573d6000803e3d6000fd5b505050506040513d60208110156107cf57600080fd5b5051610822576040805162461bcd60e51b815260206004820152601660248201527f4e4f545f4144445f4c49515549444954595f524f4c4500000000000000000000604482015290519081900360640190fd5b600061082d846118b5565b9050600360005b81811015610ad757600085826003811061084a57fe5b60200201351115610acf576000866001600160a01b031663c6610657836040518263ffffffff1660e01b815260040180828152602001915050602060405180830381600087803b15801561089d57600080fd5b505af11580156108b1573d6000803e3d6000fd5b505050506040513d60208110156108c757600080fd5b5051604080517feb6b26400000000000000000000000000000000000000000000000000000000081526001600160a01b0380841660048301526000602483015291519293507f00000000000000000000000000000000000000000000000000000000000000009091169163eb6b264091604480820192602092909190829003018186803b15801561095757600080fd5b505afa15801561096b573d6000803e3d6000fd5b505050506040513d602081101561098157600080fd5b50516109d4576040805162461bcd60e51b815260206004820152600c60248201527f494e56414c49445f434f494e0000000000000000000000000000000000000000604482015290519081900360640190fd5b604080516370a0823160e01b815230600482015290516000916001600160a01b038416916370a0823191602480820192602092909190829003018186803b158015610a1e57600080fd5b505afa158015610a32573d6000803e3d6000fd5b505050506040513d6020811015610a4857600080fd5b50519050868360038110610a5857fe5b6020020135811015610ab1576040805162461bcd60e51b815260206004820152601460248201527f494e53554646494349454e545f42414c414e4345000000000000000000000000604482015290519081900360640190fd5b610acc8289898660038110610ac257fe5b6020020135611b3e565b50505b600101610834565b50604080516370a0823160e01b815230600482015290516000916001600160a01b038516916370a0823191602480820192602092909190829003018186803b158015610b2257600080fd5b505afa158015610b36573d6000803e3d6000fd5b505050506040513d6020811015610b4c57600080fd5b50516040517f4515cef30000000000000000000000000000000000000000000000000000000081529091506001600160a01b03871690634515cef390879087906004018083606080828437600081840152601f19601f82011690508083019250505082815260200192505050600060405180830381600087803b158015610bd257600080fd5b505af1158015610be6573d6000803e3d6000fd5b5050604080516370a0823160e01b81523060048201529051600093506001600160a01b03871692506370a0823191602480820192602092909190829003018186803b158015610c3457600080fd5b505afa158015610c48573d6000803e3d6000fd5b505050506040513d6020811015610c5e57600080fd5b5051905084610c73828463ffffffff61185816565b1015610cc6576040805162461bcd60e51b815260206004820152600e60248201527f4c505f414d545f544f4f5f4c4f57000000000000000000000000000000000000604482015290519081900360640190fd5b50505050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610d66576040805162461bcd60e51b81526020600482015260136024820152724e4f545f4d414e414745525f4144445245535360681b604482015290519081900360640190fd5b60408051632474521560e21b81527f0000000000000000000000000000000000000000000000000000000000000000600482015233602482015290516001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016916391d14854916044808301926020929190829003018186803b158015610df257600080fd5b505afa158015610e06573d6000803e3d6000fd5b505050506040513d6020811015610e1c57600080fd5b5051610e6f576040805162461bcd60e51b815260206004820152601960248201527f4e4f545f52454d4f56455f4c49515549444954595f524f4c4500000000000000604482015290519081900360640190fd5b6000610e7b8483611646565b604080516370a0823160e01b815230600482015290519192506000916001600160a01b038416916370a08231916024808301926020929190829003018186803b158015610ec757600080fd5b505afa158015610edb573d6000803e3d6000fd5b505050506040513d6020811015610ef157600080fd5b50519050610efd612139565b610f068661167f565b6040517f9fdaea0c0000000000000000000000000000000000000000000000000000000081529091506001600160a01b03871690639fdaea0c90879087906004018083606080838360005b83811015610f69578181015183820152602001610f51565b5050505090500182815260200192505050600060405180830381600087803b158015610f9457600080fd5b505af1158015610fa8573d6000803e3d6000fd5b5050604080516370a0823160e01b81523060048201529051600093506001600160a01b03871692506370a0823191602480820192602092909190829003018186803b158015610ff657600080fd5b505afa15801561100a573d6000803e3d6000fd5b505050506040513d602081101561102057600080fd5b5051905061102c612139565b6110358861167f565b90506110428382896117a3565b85611053858463ffffffff61185816565b1115610673576040805162461bcd60e51b815260206004820152601060248201527f4c505f434f53545f544f4f5f4849474800000000000000000000000000000000604482015290519081900360640190fd5b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614611161576040805162461bcd60e51b81526020600482015260136024820152724e4f545f4d414e414745525f4144445245535360681b604482015290519081900360640190fd5b60408051632474521560e21b81527f0000000000000000000000000000000000000000000000000000000000000000600482015233602482015290516001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016916391d14854916044808301926020929190829003018186803b1580156111ed57600080fd5b505afa158015611201573d6000803e3d6000fd5b505050506040513d602081101561121757600080fd5b505161126a576040805162461bcd60e51b815260206004820152601960248201527f4e4f545f52454d4f56455f4c49515549444954595f524f4c4500000000000000604482015290519081900360640190fd5b60006112768585611646565b90506000856001600160a01b031663c661065785600f0b6040518263ffffffff1660e01b815260040180828152602001915050602060405180830381600087803b1580156112c357600080fd5b505af11580156112d7573d6000803e3d6000fd5b505050506040513d60208110156112ed57600080fd5b5051604080516370a0823160e01b815230600482015290519192506000916001600160a01b038516916370a08231916024808301926020929190829003018186803b15801561133b57600080fd5b505afa15801561134f573d6000803e3d6000fd5b505050506040513d602081101561136557600080fd5b5051604080516370a0823160e01b815230600482015290519192506000916001600160a01b038516916370a08231916024808301926020929190829003018186803b1580156113b357600080fd5b505afa1580156113c7573d6000803e3d6000fd5b505050506040513d60208110156113dd57600080fd5b5051604080517f1a4d01d2000000000000000000000000000000000000000000000000000000008152600481018a9052600f89810b900b60248201526044810188905290519192506001600160a01b038a1691631a4d01d29160648082019260009290919082900301818387803b15801561145757600080fd5b505af115801561146b573d6000803e3d6000fd5b5050604080516370a0823160e01b81523060048201529051600093506001600160a01b03881692506370a0823191602480820192602092909190829003018186803b1580156114b957600080fd5b505afa1580156114cd573d6000803e3d6000fd5b505050506040513d60208110156114e357600080fd5b5051604080516370a0823160e01b815230600482015290519192506000916001600160a01b038716916370a08231916024808301926020929190829003018186803b15801561153157600080fd5b505afa158015611545573d6000803e3d6000fd5b505050506040513d602081101561155b57600080fd5b505190508083106115b3576040805162461bcd60e51b815260206004820152601560248201527f42414c414e43455f4d5553545f494e4352454153450000000000000000000000604482015290519081900360640190fd5b816115c4858b63ffffffff61185816565b14611616576040805162461bcd60e51b815260206004820152601560248201527f4c505f544f4b454e5f414d545f4d49534d415443480000000000000000000000604482015290519081900360640190fd5b50505050505050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b600080611652846118b5565b9050836001600160a01b0316816001600160a01b03161461167857611678818585611b3e565b9392505050565b611687612139565b60005b600381101561179d576000836001600160a01b031663c6610657836040518263ffffffff1660e01b815260040180828152602001915050602060405180830381600087803b1580156116db57600080fd5b505af11580156116ef573d6000803e3d6000fd5b505050506040513d602081101561170557600080fd5b5051604080516370a0823160e01b815230600482015290519192506000916001600160a01b038416916370a08231916024808301926020929190829003018186803b15801561175357600080fd5b505afa158015611767573d6000803e3d6000fd5b505050506040513d602081101561177d57600080fd5b505190508084846003811061178e57fe5b6020020152505060010161168a565b50919050565b60005b60038110156118525760008282600381106117bd57fe5b60200201519050806117f68684600381106117d457fe5b60200201518685600381106117e557fe5b60200201519063ffffffff61185816565b1015611849576040805162461bcd60e51b815260206004820152601660248201527f494e56414c49445f42414c414e43455f4348414e474500000000000000000000604482015290519081900360640190fd5b506001016117a6565b50505050565b6000828211156118af576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b60006001600160a01b038216611912576040805162461bcd60e51b815260206004820152601460248201527f494e56414c49445f504f4f4c5f41444452455353000000000000000000000000604482015290519081900360640190fd5b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a262904b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561196d57600080fd5b505afa158015611981573d6000803e3d6000fd5b505050506040513d602081101561199757600080fd5b5051604080517f379510490000000000000000000000000000000000000000000000000000000081526001600160a01b03868116600483015291519293506000929184169163379510499160248082019260209290919082900301818787803b158015611a0357600080fd5b505af1158015611a17573d6000803e3d6000fd5b505050506040513d6020811015611a2d57600080fd5b505190506001600160a01b038116611a425750825b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663eb6b26408260006040518363ffffffff1660e01b815260040180836001600160a01b03166001600160a01b031681526020018281526020019250505060206040518083038186803b158015611ac157600080fd5b505afa158015611ad5573d6000803e3d6000fd5b505050506040513d6020811015611aeb57600080fd5b5051611678576040805162461bcd60e51b815260206004820152601060248201527f494e56414c49445f4c505f544f4b454e00000000000000000000000000000000604482015290519081900360640190fd5b60408051636eb1769f60e11b81523060048201526001600160a01b038481166024830152915160009286169163dd62ed3e916044808301926020929190829003018186803b158015611b8f57600080fd5b505afa158015611ba3573d6000803e3d6000fd5b505050506040513d6020811015611bb957600080fd5b505190508015611bdd57611bdd6001600160a01b038516848363ffffffff611bf716565b6118526001600160a01b038516848463ffffffff611d2216565b6000611c9f826040518060600160405280602981526020016121586029913960408051636eb1769f60e11b81523060048201526001600160a01b03888116602483015291519189169163dd62ed3e91604480820192602092909190829003018186803b158015611c6657600080fd5b505afa158015611c7a573d6000803e3d6000fd5b505050506040513d6020811015611c9057600080fd5b5051919063ffffffff611db316565b604080516001600160a01b038616602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f095ea7b300000000000000000000000000000000000000000000000000000000179052909150611852908590611e4a565b60408051636eb1769f60e11b81523060048201526001600160a01b0384811660248301529151600092611c9f9285929188169163dd62ed3e91604480820192602092909190829003018186803b158015611d7b57600080fd5b505afa158015611d8f573d6000803e3d6000fd5b505050506040513d6020811015611da557600080fd5b50519063ffffffff611f0016565b60008184841115611e425760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611e07578181015183820152602001611def565b50505050905090810190601f168015611e345780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6060611e9f826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611f5a9092919063ffffffff16565b805190915015611efb57808060200190516020811015611ebe57600080fd5b5051611efb5760405162461bcd60e51b815260040180806020018281038252602a8152602001806121a7602a913960400191505060405180910390fd5b505050565b600082820183811015611678576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b6060611f698484600085611f71565b949350505050565b606082471015611fb25760405162461bcd60e51b81526004018080602001828103825260268152602001806121816026913960400191505060405180910390fd5b611fbb856120cd565b61200c576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b60006060866001600160a01b031685876040518082805190602001908083835b6020831061204b5780518252601f19909201916020918201910161202c565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d80600081146120ad576040519150601f19603f3d011682016040523d82523d6000602084013e6120b2565b606091505b50915091506120c28282866120d3565b979650505050505050565b3b151590565b606083156120e2575081611678565b8251156120f25782518084602001fd5b60405162461bcd60e51b8152602060048201818152845160248401528451859391928392604401919085019080838360008315611e07578181015183820152602001611def565b6040518060600160405280600390602082028036833750919291505056fe5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a2646970667358221220892402cb6c17c189dbfb15d5c3201ca40e8bede318bf5b9ee97a6b192666be6c64736f6c634300060b0033";

export class CurveControllerPool3__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _manager: string,
    _accessControl: string,
    _addressRegistry: string,
    _curveAddressProvider: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CurveControllerPool3> {
    return super.deploy(
      _manager,
      _accessControl,
      _addressRegistry,
      _curveAddressProvider,
      overrides || {}
    ) as Promise<CurveControllerPool3>;
  }
  getDeployTransaction(
    _manager: string,
    _accessControl: string,
    _addressRegistry: string,
    _curveAddressProvider: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _manager,
      _accessControl,
      _addressRegistry,
      _curveAddressProvider,
      overrides || {}
    );
  }
  attach(address: string): CurveControllerPool3 {
    return super.attach(address) as CurveControllerPool3;
  }
  connect(signer: Signer): CurveControllerPool3__factory {
    return super.connect(signer) as CurveControllerPool3__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CurveControllerPool3Interface {
    return new utils.Interface(_abi) as CurveControllerPool3Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CurveControllerPool3 {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as CurveControllerPool3;
  }
}
