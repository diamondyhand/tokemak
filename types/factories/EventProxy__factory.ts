/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { EventProxy, EventProxyInterface } from "../EventProxy";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "destination",
        type: "address",
      },
    ],
    name: "DestinationRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "destination",
        type: "address",
      },
    ],
    name: "DestinationUnregistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "eventType",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "destination",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "EventSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "eventType",
            type: "bytes32",
          },
          {
            internalType: "address[]",
            name: "destinations",
            type: "address[]",
          },
        ],
        indexed: false,
        internalType: "struct IEventProxy.DestinationsBySenderAndEventType[]",
        name: "",
        type: "tuple[]",
      },
    ],
    name: "RegisterDestinations",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "allowed",
        type: "bool",
      },
    ],
    name: "SenderRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "allowed",
        type: "bool",
      },
    ],
    name: "SenderRegistrationChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "name",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "gateway",
        type: "address",
      },
    ],
    name: "SetGateway",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "l2Endpoint",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "eventType",
        type: "bytes32",
      },
    ],
    name: "UnregisterDestination",
    type: "event",
  },
  {
    inputs: [],
    name: "STATE_SENDER",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "destinations",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "eventType",
        type: "bytes32",
      },
    ],
    name: "getRegisteredDestinations",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "stateSender",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "lastProcessedStateId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "stateId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "rootMessageSender",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "processMessageFromRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "eventType",
            type: "bytes32",
          },
          {
            internalType: "address[]",
            name: "destinations",
            type: "address[]",
          },
        ],
        internalType: "struct IEventProxy.DestinationsBySenderAndEventType[]",
        name: "destinationsBySenderAndEventType",
        type: "tuple[]",
      },
    ],
    name: "registerDestinations",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "registeredSenders",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_allowed",
        type: "bool",
      },
    ],
    name: "setSenderRegistration",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "_l2Endpoint",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_eventType",
        type: "bytes32",
      },
    ],
    name: "unregisterDestination",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611e29806100206000396000f3fe608060405234801561001057600080fd5b50600436106100df5760003560e01c80638da5cb5b1161008c578063c4d66de811610066578063c4d66de8146101ab578063d21fbca0146101be578063dcc8255d146101d3578063f2fde38b146101db576100df565b80638da5cb5b1461017d5780639a7c4b7114610185578063ba7c930b14610198576100df565b80635a13abd9116100bd5780635a13abd914610142578063715018a614610162578063790d3a1b1461016a576100df565b806309faa42d146100e45780632c39d0b9146100f95780634a68e92d14610122575b600080fd5b6100f76100f236600461167c565b6101ee565b005b61010c610107366004611621565b610565565b60405161011991906119d5565b60405180910390f35b61013561013036600461158b565b6105fe565b6040516101199190611a8a565b61015561015036600461164a565b610613565b604051610119919061191b565b6100f7610665565b6100f76101783660046115ac565b61077c565b610155610a69565b6100f7610193366004611801565b610a85565b6100f76101a63660046115e7565b610d7a565b6100f76101b936600461158b565b610efc565b6101c66110ae565b6040516101199190611d2c565b6101556110b4565b6100f76101e936600461158b565b6110d0565b6101f6611272565b73ffffffffffffffffffffffffffffffffffffffff16610214610a69565b73ffffffffffffffffffffffffffffffffffffffff161461029657604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b60005b815181101561052a5760008282815181106102b057fe5b60200260200101519050600073ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff16141561032e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161032590611be2565b60405180910390fd5b6020810151610369576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161032590611cbe565b6040810151516103a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161032590611ae0565b805173ffffffffffffffffffffffffffffffffffffffff16600090815260686020908152604080832082850151845290915281206103e291611535565b60005b81604001515181101561052057600073ffffffffffffffffffffffffffffffffffffffff168260400151828151811061041a57fe5b602002602001015173ffffffffffffffffffffffffffffffffffffffff161415610470576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161032590611c50565b815173ffffffffffffffffffffffffffffffffffffffff16600090815260686020908152604080832082860151845290915290819020908301518051839081106104b657fe5b60209081029190910181015182546001808201855560009485529290932090920180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff90931692909217909155016103e5565b5050600101610299565b507fe604b4e31e08b089d9229e9973328eb9c42c7296d4aa972675914720a32326188160405161055a91906119e8565b60405180910390a150565b73ffffffffffffffffffffffffffffffffffffffff821660009081526068602090815260408083208484528252918290208054835181840281018401909452808452606093928301828280156105f157602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff1681526001909101906020018083116105c6575b5050505050905092915050565b60666020526000908152604090205460ff1681565b6068602052826000526040600020602052816000526040600020818154811061063b57600080fd5b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff16925083915050565b61066d611272565b73ffffffffffffffffffffffffffffffffffffffff1661068b610a69565b73ffffffffffffffffffffffffffffffffffffffff161461070d57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b60335460405160009173ffffffffffffffffffffffffffffffffffffffff16907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3603380547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055565b610784611272565b73ffffffffffffffffffffffffffffffffffffffff166107a2610a69565b73ffffffffffffffffffffffffffffffffffffffff161461082457604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b73ffffffffffffffffffffffffffffffffffffffff8316600090815260686020908152604080832084845290915281209061ffff905b82548110156108be578473ffffffffffffffffffffffffffffffffffffffff1683828154811061088657fe5b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff1614156108b6578091506108be565b60010161085a565b5061ffff81106108fa576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161032590611bab565b805b82547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff018110156109c35782816001018154811061093657fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1683828154811061096d57fe5b600091825260209091200180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff929092169190911790556001016108fc565b50818054806109ce57fe5b60008281526020902081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90810180547fffffffffffffffffffffffff00000000000000000000000000000000000000001690550190556040517f786d3d1f5158c61853341b5dd0011d749ce9d5618c52874c32921170c6982a7490610a5a9087908790879061193c565b60405180910390a15050505050565b60335473ffffffffffffffffffffffffffffffffffffffff1690565b60655473ffffffffffffffffffffffffffffffffffffffff163314610ad6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161032590611c87565b6067548411610b11576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161032590611cf5565b73ffffffffffffffffffffffffffffffffffffffff831660009081526066602052604090205460ff16610b70576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161032590611b74565b606784905580610bac576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161032590611c19565b6000610bbb6020828486611d77565b810190610bc891906117e9565b905080610c01576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161032590611cbe565b73ffffffffffffffffffffffffffffffffffffffff84166000908152606860209081526040808320848452825280832080548251818502810185019093528083529192909190830182828015610c8d57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610c62575b5050505050905060005b8151811015610d71576000828281518110610cae57fe5b602002602001015190508073ffffffffffffffffffffffffffffffffffffffff1663a3851c95888689896040518563ffffffff1660e01b8152600401610cf79493929190611995565b600060405180830381600087803b158015610d1157600080fd5b505af1158015610d25573d6000803e3d6000fd5b505050507f0fe89019817f63ee7249ee3d71c789fa752a3852542ddfa0d7b43a9bb8cc92268488838989604051610d60959493929190611a95565b60405180910390a150600101610c97565b50505050505050565b610d82611272565b73ffffffffffffffffffffffffffffffffffffffff16610da0610a69565b73ffffffffffffffffffffffffffffffffffffffff1614610e2257604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b73ffffffffffffffffffffffffffffffffffffffff8216610e6f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161032590611b3d565b73ffffffffffffffffffffffffffffffffffffffff82166000908152606660205260409081902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016831515179055517f21504171be6ce9fb0ba3325254bfd2e3a4d84719bb0ca17d6bd0f4df409c21ae90610ef0908490849061196d565b60405180910390a15050565b600054610100900460ff1680610f155750610f15611276565b80610f23575060005460ff16155b610f78576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180611dc6602e913960400191505060405180910390fd5b600054610100900460ff16158015610fde57600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff909116610100171660011790555b73ffffffffffffffffffffffffffffffffffffffff821661102b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161032590611b3d565b611033611287565b61103b61139b565b606580547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff841617905580156110aa57600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff1690555b5050565b60675481565b60655473ffffffffffffffffffffffffffffffffffffffff1681565b6110d8611272565b73ffffffffffffffffffffffffffffffffffffffff166110f6610a69565b73ffffffffffffffffffffffffffffffffffffffff161461117857604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b73ffffffffffffffffffffffffffffffffffffffff81166111e4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180611da06026913960400191505060405180910390fd5b60335460405173ffffffffffffffffffffffffffffffffffffffff8084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3603380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b3390565b60006112813061152b565b15905090565b600054610100900460ff16806112a057506112a0611276565b806112ae575060005460ff16155b611303576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180611dc6602e913960400191505060405180910390fd5b600054610100900460ff1615801561136957600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff909116610100171660011790555b801561139857600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff1690555b50565b600054610100900460ff16806113b457506113b4611276565b806113c2575060005460ff16155b611417576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180611dc6602e913960400191505060405180910390fd5b600054610100900460ff1615801561147d57600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff909116610100171660011790555b6000611487611272565b603380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff8316908117909155604051919250906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350801561139857600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff16905550565b803b15155b919050565b508054600082559060005260206000209081019061139891905b80821115611563576000815560010161154f565b5090565b803573ffffffffffffffffffffffffffffffffffffffff8116811461153057600080fd5b60006020828403121561159c578081fd5b6115a582611567565b9392505050565b6000806000606084860312156115c0578182fd5b6115c984611567565b92506115d760208501611567565b9150604084013590509250925092565b600080604083850312156115f9578182fd5b61160283611567565b915060208301358015158114611616578182fd5b809150509250929050565b60008060408385031215611633578182fd5b61163c83611567565b946020939093013593505050565b60008060006060848603121561165e578283fd5b61166784611567565b95602085013595506040909401359392505050565b6000602080838503121561168e578182fd5b67ffffffffffffffff80843511156116a4578283fd5b8335840185601f8201126116b6578384fd5b6116c86116c38235611d59565b611d35565b8135815283810190848301865b84358110156117db578135850160607fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0828d03011215611713578889fd5b60405160608101818110898211171561172857fe5b604052611736828a01611567565b8152604082013589820152606082013588811115611752578a8bfd5b8083019250508b603f83011261176657898afd5b888201356117766116c382611d59565b808282528b82019150604085018f8d8e8f8702890101011115611797578d8efd5b8d95505b838610156117c0576117ac81611567565b835260019590950194918c01918c0161179b565b506040840152505085525092860192908601906001016116d5565b509098975050505050505050565b6000602082840312156117fa578081fd5b5035919050565b60008060008060608587031215611816578081fd5b8435935061182660208601611567565b9250604085013567ffffffffffffffff80821115611842578283fd5b818701915087601f830112611855578283fd5b813581811115611863578384fd5b886020828501011115611874578384fd5b95989497505060200194505050565b6000815180845260208085019450808401835b838110156118c857815173ffffffffffffffffffffffffffffffffffffffff1687529582019590820190600101611896565b509495945050505050565b600082845282826020860137806020848601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f85011685010190509392505050565b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b73ffffffffffffffffffffffffffffffffffffffff9384168152919092166020820152604081019190915260600190565b73ffffffffffffffffffffffffffffffffffffffff9290921682521515602082015260400190565b600073ffffffffffffffffffffffffffffffffffffffff86168252846020830152606060408301526119cb6060830184866118d3565b9695505050505050565b6000602082526115a56020830184611883565b60208082528251828201819052600091906040908185019080840286018301878501865b838110156117db578883037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc00185528151805173ffffffffffffffffffffffffffffffffffffffff16845287810151888501528601516060878501819052611a7681860183611883565b968901969450505090860190600101611a0c565b901515815260200190565b600086825273ffffffffffffffffffffffffffffffffffffffff808716602084015280861660408401525060806060830152611ad56080830184866118d3565b979650505050505050565b60208082526025908201527f4d5553545f535045434946595f41545f4c454153545f4f4e455f44455354494e60408201527f4154494f4e000000000000000000000000000000000000000000000000000000606082015260800190565b6020808252600f908201527f494e56414c49445f414444524553530000000000000000000000000000000000604082015260600190565b60208082526013908201527f494e56414c49445f524f4f545f53454e44455200000000000000000000000000604082015260600190565b6020808252601a908201527f44455354494e4154494f4e5f444f45535f4e4f545f4558495354000000000000604082015260600190565b60208082526016908201527f494e56414c49445f53454e4445525f4144445245535300000000000000000000604082015260600190565b60208082526007908201527f4e4f5f4441544100000000000000000000000000000000000000000000000000604082015260600190565b6020808252601b908201527f494e56414c49445f4c325f454e44504f494e545f414444524553530000000000604082015260600190565b60208082526010908201527f4e4f545f53544154455f53454e44455200000000000000000000000000000000604082015260600190565b60208082526012908201527f494e56414c49445f4556454e545f545950450000000000000000000000000000604082015260600190565b60208082526017908201527f4556454e545f414c52454144595f50524f434553534544000000000000000000604082015260600190565b90815260200190565b60405181810167ffffffffffffffff81118282101715611d5157fe5b604052919050565b600067ffffffffffffffff821115611d6d57fe5b5060209081020190565b60008085851115611d86578182fd5b83861115611d92578182fd5b505082019391909203915056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564a2646970667358221220dbaf2f667127df390b4700842752da2e8f571a5ab4086782e759dbf4451ecfc064736f6c63430007060033";

export class EventProxy__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<EventProxy> {
    return super.deploy(overrides || {}) as Promise<EventProxy>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): EventProxy {
    return super.attach(address) as EventProxy;
  }
  connect(signer: Signer): EventProxy__factory {
    return super.connect(signer) as EventProxy__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EventProxyInterface {
    return new utils.Interface(_abi) as EventProxyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EventProxy {
    return new Contract(address, _abi, signerOrProvider) as EventProxy;
  }
}
