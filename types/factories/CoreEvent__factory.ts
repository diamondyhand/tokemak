/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { CoreEvent, CoreEventInterface } from "../CoreEvent";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "treasury",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "maxUserLimit",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "systemFinalized",
            type: "bool",
          },
        ],
        internalType: "struct ICoreEvent.SupportedTokenData[]",
        name: "tokensToSupport",
        type: "tuple[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "transferredToFarm",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "refunded",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct ICoreEvent.FinalizedAccountData[]",
        name: "data",
        type: "tuple[]",
      },
    ],
    name: "AssetsFinalized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "depositor",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct ICoreEvent.TokenData[]",
        name: "tokenInfo",
        type: "tuple[]",
      },
    ],
    name: "Deposited",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "startingBlock",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "blockDuration",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct ICoreEvent.DurationInfo",
        name: "duration",
        type: "tuple",
      },
    ],
    name: "DurationIncreased",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "startingBlock",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "blockDuration",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct ICoreEvent.DurationInfo",
        name: "duration",
        type: "tuple",
      },
    ],
    name: "DurationSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokeNumerator",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tokeDenominator",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "overNumerator",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "overDenominator",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "pool",
            type: "address",
          },
        ],
        indexed: false,
        internalType: "struct ICoreEvent.RateData[]",
        name: "ratesData",
        type: "tuple[]",
      },
    ],
    name: "RatesPublished",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address[]",
        name: "tokens",
        type: "address[]",
      },
    ],
    name: "SetNoSwap",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "maxUserLimit",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "systemFinalized",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct ICoreEvent.SupportedTokenData[]",
        name: "tokenData",
        type: "tuple[]",
      },
    ],
    name: "SupportedTokensAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "treasury",
        type: "address",
      },
    ],
    name: "TreasurySet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct ICoreEvent.TokenData[]",
        name: "tokens",
        type: "tuple[]",
      },
    ],
    name: "TreasuryTransfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "enabled",
            type: "bool",
          },
          {
            internalType: "bytes32",
            name: "root",
            type: "bytes32",
          },
        ],
        indexed: false,
        internalType: "struct ICoreEvent.WhitelistSettings",
        name: "settings",
        type: "tuple",
      },
    ],
    name: "WhitelistConfigured",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "withdrawer",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct ICoreEvent.TokenData[]",
        name: "tokenInfo",
        type: "tuple[]",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "accountData",
    outputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "depositedBalance",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "finalized",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "maxUserLimit",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "systemFinalized",
            type: "bool",
          },
        ],
        internalType: "struct ICoreEvent.SupportedTokenData[]",
        name: "tokensToSupport",
        type: "tuple[]",
      },
    ],
    name: "addSupportedTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "enabled",
            type: "bool",
          },
          {
            internalType: "bytes32",
            name: "root",
            type: "bytes32",
          },
        ],
        internalType: "struct ICoreEvent.WhitelistSettings",
        name: "settings",
        type: "tuple",
      },
    ],
    name: "configureWhitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct ICoreEvent.TokenData[]",
        name: "tokenData",
        type: "tuple[]",
      },
      {
        internalType: "bytes32[]",
        name: "proof",
        type: "bytes32[]",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "durationInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "startingBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "blockDuration",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "bool",
            name: "sendToFarming",
            type: "bool",
          },
        ],
        internalType: "struct ICoreEvent.TokenFarming[]",
        name: "tokens",
        type: "tuple[]",
      },
    ],
    name: "finalize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getAccountData",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "depositedBalance",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "finalized",
            type: "bool",
          },
        ],
        internalType: "struct ICoreEvent.AccountData[]",
        name: "data",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "getRateAdjustedAmounts",
    outputs: [
      {
        internalType: "uint256",
        name: "effectiveAmt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "ineffectiveAmt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "actualReceived",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRates",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokeNumerator",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tokeDenominator",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "overNumerator",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "overDenominator",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "pool",
            type: "address",
          },
        ],
        internalType: "struct ICoreEvent.RateData[]",
        name: "rates",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSupportedTokens",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "maxUserLimit",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "systemFinalized",
            type: "bool",
          },
        ],
        internalType: "struct ICoreEvent.SupportedTokenData[]",
        name: "supportedTokensArray",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_blockDuration",
        type: "uint256",
      },
    ],
    name: "increaseDuration",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_blockDuration",
        type: "uint256",
      },
    ],
    name: "setDuration",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "tokens",
        type: "address[]",
      },
    ],
    name: "setNoSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokeNumerator",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tokeDenominator",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "overNumerator",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "overDenominator",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "pool",
            type: "address",
          },
        ],
        internalType: "struct ICoreEvent.RateData[]",
        name: "rates",
        type: "tuple[]",
      },
    ],
    name: "setRates",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stage1Locked",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "supportedTokens",
    outputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "maxUserLimit",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "systemFinalized",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "tokenRates",
    outputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokeNumerator",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokeDenominator",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "overNumerator",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "overDenominator",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "tokens",
        type: "address[]",
      },
    ],
    name: "transferToTreasury",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "treasuryAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "whitelistSettings",
    outputs: [
      {
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
      {
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct ICoreEvent.TokenData[]",
        name: "tokenData",
        type: "tuple[]",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b5060405162003f0a38038062003f0a833981016040819052620000349162000486565b6000620000496001600160e01b03620000c116565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3506001600160601b0319606083901b16608052620000b9816001600160e01b03620000c516565b5050620006fa565b3390565b620000d86001600160e01b03620000c116565b6001600160a01b0316620000f46001600160e01b036200034f16565b6001600160a01b031614620001265760405162461bcd60e51b81526004016200011d9062000624565b60405180910390fd5b60008151116200014a5760405162461bcd60e51b81526004016200011d9062000659565b60005b815181101562000312576200018a8282815181106200016857fe5b60200260200101516000015160036200035e60201b62001edf1790919060201c565b15620001aa5760405162461bcd60e51b81526004016200011d90620005fb565b60006001600160a01b0316828281518110620001c257fe5b6020026020010151600001516001600160a01b03161415620001f85760405162461bcd60e51b81526004016200011d90620005d5565b8181815181106200020557fe5b60200260200101516040015115620002315760405162461bcd60e51b81526004016200011d906200067c565b620002648282815181106200024257fe5b60200260200101516000015160036200038760201b62001efd1790919060201c565b620002835760405162461bcd60e51b81526004016200011d90620005b3565b8181815181106200029057fe5b602002602001015160056000848481518110620002a957fe5b602090810291909101810151516001600160a01b039081168352828201939093526040918201600020845181546001600160a01b03191694169390931783558301516001808401919091559201516002909101805460ff1916911515919091179055016200014d565b507f3c3d1ede356c1ad3a7a641f3a648bd9f823278d8daa760bf9dd5b304b2a2f682816040516200034491906200054d565b60405180910390a150565b6000546001600160a01b031690565b60006200037e836001600160a01b0384166001600160e01b03620003a716565b90505b92915050565b60006200037e836001600160a01b0384166001600160e01b03620003bf16565b60009081526001919091016020526040902054151590565b6000620003d683836001600160e01b03620003a716565b6200040e5750815460018181018455600084815260208082209093018490558454848252828601909352604090209190915562000381565b50600062000381565b80516001600160a01b03811681146200038157600080fd5b60006060828403121562000441578081fd5b6200044d6060620006b3565b90506200045b838362000417565b815260208201516020820152604082015180151581146200047b57600080fd5b604082015292915050565b6000806040838503121562000499578182fd5b620004a5848462000417565b602084810151919350906001600160401b03811115620004c3578283fd5b80850186601f820112620004d5578384fd5b80519150620004ee620004e883620006da565b620006b3565b828152838101908285016060808602850187018b10156200050d578788fd5b8794505b858510156200053d57620005268b836200042f565b845260019490940193928601929081019062000511565b5096999098509650505050505050565b602080825282518282018190526000919060409081850190868401855b82811015620005a657815180516001600160a01b031685528681015187860152850151151585850152606090930192908501906001016200056a565b5091979650505050505050565b60208082526008908201526710511117d190525360c21b604082015260600190565b6020808252600c908201526b5a45524f5f4144445245535360a01b604082015260600190565b6020808252600f908201526e222aa82624a1a0aa22afaa27a5a2a760891b604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252600990820152684e4f5f544f4b454e5360b81b604082015260600190565b60208082526017908201527f46494e414c495a45445f4d5553545f42455f46414c5345000000000000000000604082015260600190565b6040518181016001600160401b0381118282101715620006d257600080fd5b604052919050565b60006001600160401b03821115620006f0578081fd5b5060209081020190565b60805160601c6137ed6200071d6000398061101d528061162d52506137ed6000f3fe608060405234801561001057600080fd5b50600436106101985760003560e01c8063980f49f4116100e3578063d3c7c2c71161008c578063f242475011610066578063f24247501461036c578063f2fde38b1461037f578063f6be71d11461039257610198565b8063d3c7c2c714610331578063ecdbb2b314610346578063ed15b7f51461035957610198565b8063b8eb115e116100bd578063b8eb115e14610303578063c5f956af14610316578063ca72e5ae1461031e57610198565b8063980f49f4146102c55780639accab55146102db578063ad5bda3b146102f057610198565b806362200b1611610145578063715018a61161011f578063715018a614610283578063864031251461028b5780638da5cb5b146102b057610198565b806362200b161461024a57806366e9ac241461025d57806368c4ac261461027057610198565b806354f8a6481161017657806354f8a648146101f35780635d78650e146102085780636154041a1461022857610198565b806322dd25a21461019d5780633683f4e9146101bc578063410c9aa0146101de575b600080fd5b6101a56103a5565b6040516101b39291906129e0565b60405180910390f35b6101cf6101ca36600461297c565b6103ae565b6040516101b393929190613708565b6101e66104b2565b6040516101b39190612ddd565b6102066102013660046127d0565b6104bb565b005b61021b61021636600461262e565b6109e9565b6040516101b39190612bf0565b61023b610236366004612649565b610b0c565b6040516101b393929190612b47565b610206610258366004612804565b610b45565b61020661026b36600461267d565b610d97565b61023b61027e36600461262e565b611086565b6102066110b4565b61029e61029936600461262e565b61113d565b6040516101b396959493929190612b6a565b6102b861117d565b6040516101b39190612a0a565b6102cd61118c565b6040516101b3929190612de8565b6102e361119b565b6040516101b39190612ccc565b6102066102fe3660046126bd565b6112ad565b61020661031136600461294c565b611548565b6102b861162b565b61020661032c366004612911565b61164f565b6103396116d9565b6040516101b39190612d50565b6102066103543660046127d0565b6117c6565b61020661036736600461267d565b6119ad565b61020661037a36600461272a565b611b51565b61020661038d36600461262e565b611d87565b6102066103a036600461294c565b611e47565b60015460025482565b60008060006103bb612495565b506001600160a01b038085166000908152600760209081526040808320815160c08101835281548616815260018201549381019390935260028101549183019190915260038101546060830181905260048201546080840181905260059092015490941660a08301529092610448919061043c908a9063ffffffff611f1216565b9063ffffffff611f4c16565b9050600061047f836080015161043c61047286606001518760800151611f7e90919063ffffffff16565b8b9063ffffffff611f1216565b905060006104a2846020015161043c866040015186611f1290919063ffffffff16565b9299919850919650945050505050565b600a5460ff1681565b6104c3611fa6565b6104e85760405162461bcd60e51b81526004016104df90613131565b60405180910390fd5b806105055760405162461bcd60e51b81526004016104df90613420565b8060608167ffffffffffffffff8111801561051f57600080fd5b5060405190808252806020026020018201604052801561055957816020015b6105466124dd565b81526020019060019003908161053e5790505b50905060005b828110156109a9573685858381811061057457fe5b33600090815260066020908152604080832093029490940194509290915082906105a09085018561262e565b6001600160a01b031681526020810191909152604001600020600281015490915060ff16156105e15760405162461bcd60e51b81526004016104df90613457565b60006105f0602084018461262e565b6001600160a01b031614156106175760405162461bcd60e51b81526004016104df9061320d565b60056000610628602085018561262e565b6001600160a01b0316815260208101919091526040016000206002015460ff166106645760405162461bcd60e51b81526004016104df90612ff8565b60008160010154116106885760405162461bcd60e51b81526004016104df90612f53565b600060078161069a602086018661262e565b6001600160a01b03168152602081019190915260400160009081206001810154909250156106e65760018301546000906106db906101ca602088018861262e565b5092506106ed915050565b5060018201545b6000811161070d5760405162461bcd60e51b81526004016104df90613357565b60028301805460ff1916600117905561072c604085016020860161286d565b156109285760058201546001600160a01b031661075b5760405162461bcd60e51b81526004016104df90612ebf565b600061076a602086018661262e565b60058401546040517fdd62ed3e0000000000000000000000000000000000000000000000000000000081526001600160a01b039283169263dd62ed3e926107b992309290911690600401612b09565b60206040518083038186803b1580156107d157600080fd5b505afa1580156107e5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108099190612964565b905081811015610858576005830154610858906001600160a01b0316610835848463ffffffff611f7e16565b610842602089018961262e565b6001600160a01b0316919063ffffffff611fc516565b60058301546040517f2f4f21e20000000000000000000000000000000000000000000000000000000081526001600160a01b0390911690632f4f21e2906108a59033908690600401612af0565b600060405180830381600087803b1580156108bf57600080fd5b505af11580156108d3573d6000803e3d6000fd5b5050604080516060810190915291508190506108f2602088018861262e565b6001600160a01b03168152602001838152602001600081525087878151811061091757fe5b60200260200101819052505061099a565b610950338261093a602088018861262e565b6001600160a01b0316919063ffffffff6120e016565b604080516060810190915280610969602087018761262e565b6001600160a01b03168152602001600081526020018281525086868151811061098e57fe5b60200260200101819052505b5050505080600101905061055f565b507fdfe47708c06a6afb96b78beea1143f421d4b0e2a4e6c68899345b7e867c8332033826040516109db929190612a1e565b60405180910390a150505050565b606060006109f76003612104565b90508067ffffffffffffffff81118015610a1057600080fd5b50604051908082528060200260200182016040528015610a4a57816020015b610a37612507565b815260200190600190039081610a2f5790505b50915060005b81811015610b05576000610a6b60038363ffffffff61210f16565b6001600160a01b03808716600090815260066020908152604080832084861684528252918290208251606081018452815490941684526001810154918401919091526002015460ff16151590820152855191925090859084908110610acc57fe5b602002602001018190525080848381518110610ae457fe5b60209081029190910101516001600160a01b03909116905250600101610a50565b5050919050565b60066020908152600092835260408084209091529082529020805460018201546002909201546001600160a01b03909116919060ff1683565b600154610b645760405162461bcd60e51b81526004016104df90613533565b610b6c611fa6565b15610b895760405162461bcd60e51b81526004016104df9061327b565b82610ba65760405162461bcd60e51b81526004016104df90613420565b60085460ff1615610c1057610bf43360086001015484848080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525061211b92505050565b610c105760405162461bcd60e51b81526004016104df906136a3565b60005b83811015610d63576000858583818110610c2957fe5b90506040020160200135905060008111610c555760405162461bcd60e51b81526004016104df90613244565b6000868684818110610c6357fe5b610c79926020604090920201908101915061262e565b9050610c8c60038263ffffffff611edf16565b610ca85760405162461bcd60e51b81526004016104df90613635565b3360009081526006602090815260408083206001600160a01b0385168452825280832060059092529091206001908101549082015483929190610cf1908663ffffffff61215d16565b1115610d0f5760405162461bcd60e51b81526004016104df9061348e565b6001810154610d24908563ffffffff61215d16565b600182015580546001600160a01b0319166001600160a01b03848116919091178255610d54908316333087612182565b50505050806001019050610c13565b507f076499987eab3494bc3d8c4a299fc40c64149278091219256abd90087b1197c63385856040516109db93929190612a8c565b610d9f6121a3565b6001600160a01b0316610db061117d565b6001600160a01b031614610dd65760405162461bcd60e51b81526004016104df906133eb565b610dde611fa6565b610dfa5760405162461bcd60e51b81526004016104df90613131565b8060608167ffffffffffffffff81118015610e1457600080fd5b50604051908082528060200260200182016040528015610e4e57816020015b610e3b612527565b815260200190600190039081610e335790505b50905060005b82811015611056576000858583818110610e6a57fe5b9050602002016020810190610e7f919061262e565b6001600160a01b038116600090815260076020526040902060010154909150610eba5760405162461bcd60e51b81526004016104df9061302f565b6001600160a01b03811660009081526005602052604090206002015460ff1615610ef65760405162461bcd60e51b81526004016104df90613457565b6040517f70a082310000000000000000000000000000000000000000000000000000000081526000906001600160a01b038316906370a0823190610f3e903090600401612a0a565b60206040518083038186803b158015610f5657600080fd5b505afa158015610f6a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f8e9190612964565b90506000610f9c82846103ae565b5050905082858581518110610fad57fe5b6020026020010151600001906001600160a01b031690816001600160a01b03168152505080858581518110610fde57fe5b6020908102919091018101518101919091526001600160a01b038416600081815260059092526040909120600201805460ff19166001179055611048907f00000000000000000000000000000000000000000000000000000000000000008363ffffffff6120e016565b505050806001019050610e54565b507fd3a9a54f42cff4716bd20029772986d2943700c640107b8d69cc68b4bc9ce7e1816040516109db9190612d92565b6005602052600090815260409020805460018201546002909201546001600160a01b03909116919060ff1683565b6110bc6121a3565b6001600160a01b03166110cd61117d565b6001600160a01b0316146110f35760405162461bcd60e51b81526004016104df906133eb565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6007602052600090815260409020805460018201546002830154600384015460048501546005909501546001600160a01b03948516959394929391921686565b6000546001600160a01b031690565b60085460095460ff9091169082565b606060006111a96003612104565b90508067ffffffffffffffff811180156111c257600080fd5b506040519080825280602002602001820160405280156111fc57816020015b6111e9612495565b8152602001906001900390816111e15790505b50915060005b818110156112a857600061121d60038363ffffffff61210f16565b6001600160a01b03808216600090815260076020908152604091829020825160c081018452815485168152600182015492810192909252600281015492820192909252600382015460608201526004820154608082015260059091015490911660a082015285519192509085908490811061129457fe5b602090810291909101015250600101611202565b505090565b6112b56121a3565b6001600160a01b03166112c661117d565b6001600160a01b0316146112ec5760405162461bcd60e51b81526004016104df906133eb565b6112f4611fa6565b6113105760405162461bcd60e51b81526004016104df90613131565b8060005b818110156114fb57611324612495565b84848381811061133057fe5b905060c0020180360381019061134691906128a5565b805190915061135d9060039063ffffffff611edf16565b6113795760405162461bcd60e51b81526004016104df90612e88565b80516001600160a01b031660009081526005602052604090206002015460ff16156113b65760405162461bcd60e51b81526004016104df90613457565b6020810151156114a15760008160400151116113e45760405162461bcd60e51b81526004016104df906131d6565b60008160600151116114085760405162461bcd60e51b81526004016104df9061319f565b600081608001511161142c5760405162461bcd60e51b81526004016104df906134fc565b80516001600160a01b03908116600090815260076020908152604091829020845181549085166001600160a01b0319918216178255918501516001820155918401516002830155606084015160038301556080840151600483015560a0840151600590920180549290931691161790556114f2565b80516001600160a01b0316600090815260076020526040812080546001600160a01b031990811682556001820183905560028201839055600382018390556004820192909255600501805490911690555b50600101611314565b50600a805460ff191660011790556040517f9bcf878c3626695a00588e19cde11e6f706815a1e182a516b57c80afb8387ba29061153b9085908590612c3e565b60405180910390a1505050565b6115506121a3565b6001600160a01b031661156161117d565b6001600160a01b0316146115875760405162461bcd60e51b81526004016104df906133eb565b6001546115a65760405162461bcd60e51b81526004016104df90613533565b60025481116115c75760405162461bcd60e51b81526004016104df90613320565b600a5460ff16156115ea5760405162461bcd60e51b81526004016104df906132b2565b60028190556040517f40159d9fe46d8660c7921f8ad9686bb8b9bfe80fec665c64a1cfd29287d1fa3590611620906001906136da565b60405180910390a150565b7f000000000000000000000000000000000000000000000000000000000000000081565b6116576121a3565b6001600160a01b031661166861117d565b6001600160a01b03161461168e5760405162461bcd60e51b81526004016104df906133eb565b80516008805460ff191691151591909117905560208101516009556040517f2cebd0cd952630971231c56fc3fa47c6f10b160cdf17c8956d6376a9d60d519a906116209083906136ef565b606060006116e76003612104565b90508067ffffffffffffffff8111801561170057600080fd5b5060405190808252806020026020018201604052801561173a57816020015b611727612507565b81526020019060019003908161171f5790505b50915060005b818110156112a8576005600061175d60038463ffffffff61210f16565b6001600160a01b039081168252602080830193909352604091820160002082516060810184528154909216825260018101549382019390935260029092015460ff1615159082015283518490839081106117b357fe5b6020908102919091010152600101611740565b6117ce611fa6565b156117eb5760405162461bcd60e51b81526004016104df9061327b565b806118085760405162461bcd60e51b81526004016104df90613420565b60005b8181101561196d57600083838381811061182157fe5b9050604002016020013590506000811161184d5760405162461bcd60e51b81526004016104df90612fc1565b600084848481811061185b57fe5b611871926020604090920201908101915061262e565b3360009081526006602090815260408083206001600160a01b0380861685529252909120805492935083929091166118bb5760405162461bcd60e51b81526004016104df9061320d565b80600101548411156118df5760405162461bcd60e51b81526004016104df90612f53565b60018101546118f4908563ffffffff611f7e16565b60018201819055611944573360009081526006602090815260408083206001600160a01b0387168452909152812080546001600160a01b03191681556001810191909155600201805460ff191690555b61195e6001600160a01b038316338663ffffffff6120e016565b5050505080600101905061180b565b507f24bf1342a94f3d5d9486da52d331862041fa6028e3669db9a7f61580d597a6d43383836040516119a193929190612a8c565b60405180910390a15050565b6119b56121a3565b6001600160a01b03166119c661117d565b6001600160a01b0316146119ec5760405162461bcd60e51b81526004016104df906133eb565b6119f4611fa6565b611a105760405162461bcd60e51b81526004016104df90613131565b8060005b81811015611b11576000848483818110611a2a57fe5b9050602002016020810190611a3f919061262e565b9050611a5260038263ffffffff611edf16565b611a6e5760405162461bcd60e51b81526004016104df90612e88565b6001600160a01b03811660009081526007602052604090206001015415611aa75760405162461bcd60e51b81526004016104df9061356a565b6001600160a01b03811660009081526005602052604090206002015460ff1615611ae35760405162461bcd60e51b81526004016104df90613457565b6001600160a01b03166000908152600560205260409020600201805460ff1916600190811790915501611a14565b50600a805460ff191660011790556040517f63b8fba4d3c7bbcd7544e14ba7e1aba673b33be18d87a643f7221a14687d76499061153b9085908590612ba2565b611b596121a3565b6001600160a01b0316611b6a61117d565b6001600160a01b031614611b905760405162461bcd60e51b81526004016104df906133eb565b6000815111611bb15760405162461bcd60e51b81526004016104df90613420565b60005b8151811015611d5757611be8828281518110611bcc57fe5b6020026020010151600001516003611edf90919063ffffffff16565b15611c055760405162461bcd60e51b81526004016104df906132e9565b60006001600160a01b0316828281518110611c1c57fe5b6020026020010151600001516001600160a01b03161415611c4f5760405162461bcd60e51b81526004016104df9061320d565b818181518110611c5b57fe5b60200260200101516040015115611c845760405162461bcd60e51b81526004016104df906134c5565b611caf828281518110611c9357fe5b6020026020010151600001516003611efd90919063ffffffff16565b611ccb5760405162461bcd60e51b81526004016104df90613066565b818181518110611cd757fe5b602002602001015160056000848481518110611cef57fe5b602090810291909101810151516001600160a01b039081168352828201939093526040918201600020845181546001600160a01b03191694169390931783558301516001808401919091559201516002909101805460ff191691151591909117905501611bb4565b507f3c3d1ede356c1ad3a7a641f3a648bd9f823278d8daa760bf9dd5b304b2a2f682816040516116209190612d50565b611d8f6121a3565b6001600160a01b0316611da061117d565b6001600160a01b031614611dc65760405162461bcd60e51b81526004016104df906133eb565b6001600160a01b038116611dec5760405162461bcd60e51b81526004016104df90612ef6565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b611e4f6121a3565b6001600160a01b0316611e6061117d565b6001600160a01b031614611e865760405162461bcd60e51b81526004016104df906133eb565b60015415611ea65760405162461bcd60e51b81526004016104df9061366c565b43600190815560028290556040517f596c687599ee3d63e3e9f3e249318bd82824987b2f736f837baeb849c5687a4991611620916136da565b6000611ef4836001600160a01b0384166121a7565b90505b92915050565b6000611ef4836001600160a01b0384166121bf565b600082611f2157506000611ef7565b82820282848281611f2e57fe5b0414611ef45760405162461bcd60e51b81526004016104df9061338e565b6000808211611f6d5760405162461bcd60e51b81526004016104df90613168565b818381611f7657fe5b049392505050565b600082821115611fa05760405162461bcd60e51b81526004016104df9061309d565b50900390565b60015460009015801590611fc05750600154600254014310155b905090565b600061205582856001600160a01b031663dd62ed3e30876040518363ffffffff1660e01b8152600401611ff9929190612b09565b60206040518083038186803b15801561201157600080fd5b505afa158015612025573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120499190612964565b9063ffffffff61215d16565b90506120da8463095ea7b360e01b8584604051602401612076929190612af0565b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152612209565b50505050565b6120ff8363a9059cbb60e01b8484604051602401612076929190612af0565b505050565b6000611ef782612298565b6000611ef4838361229c565b6000808460405160200161212f91906129c3565b6040516020818303038152906040528051906020012090506121528385836122e1565b9150505b9392505050565b600082820183811015611ef45760405162461bcd60e51b81526004016104df90612f8a565b6120da846323b872dd60e01b85858560405160240161207693929190612b23565b3390565b60009081526001919091016020526040902054151590565b60006121cb83836121a7565b61220157508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155611ef7565b506000611ef7565b606061225e826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661237e9092919063ffffffff16565b8051909150156120ff578080602001905181019061227c9190612889565b6120ff5760405162461bcd60e51b81526004016104df906135d8565b5490565b815460009082106122bf5760405162461bcd60e51b81526004016104df90612e2b565b8260000182815481106122ce57fe5b9060005260206000200154905092915050565b600081815b85518110156123735760008682815181106122fd57fe5b6020026020010151905080831161233e5782816040516020016123219291906129e0565b60405160208183030381529060405280519060200120925061236a565b80836040516020016123519291906129e0565b6040516020818303038152906040528051906020012092505b506001016122e6565b509092149392505050565b606061238d8484600085612395565b949350505050565b6060824710156123b75760405162461bcd60e51b81526004016104df906130d4565b6123c085612456565b6123dc5760405162461bcd60e51b81526004016104df906135a1565b60006060866001600160a01b031685876040516123f991906129ee565b60006040518083038185875af1925050503d8060008114612436576040519150601f19603f3d011682016040523d82523d6000602084013e61243b565b606091505b509150915061244b82828661245c565b979650505050505050565b3b151590565b6060831561246b575081612156565b82511561247b5782518084602001fd5b8160405162461bcd60e51b81526004016104df9190612df8565b6040518060c0016040528060006001600160a01b031681526020016000815260200160008152602001600081526020016000815260200160006001600160a01b031681525090565b604051806060016040528060006001600160a01b0316815260200160008152602001600081525090565b604080516060810182526000808252602082018190529181019190915290565b604080518082019091526000808252602082015290565b80356001600160a01b0381168114611ef757600080fd5b60008083601f840112612566578182fd5b50813567ffffffffffffffff81111561257d578182fd5b602083019150836020808302850101111561259757600080fd5b9250929050565b60008083601f8401126125af578182fd5b50813567ffffffffffffffff8111156125c6578182fd5b60208301915083602060408302850101111561259757600080fd5b6000606082840312156125f2578081fd5b6125fc606061371e565b9050813561260981613791565b8152602082810135908201526040820135612623816137a9565b604082015292915050565b60006020828403121561263f578081fd5b611ef4838361253e565b6000806040838503121561265b578081fd5b612665848461253e565b9150612674846020850161253e565b90509250929050565b6000806020838503121561268f578182fd5b823567ffffffffffffffff8111156126a5578283fd5b6126b185828601612555565b90969095509350505050565b600080602083850312156126cf578182fd5b823567ffffffffffffffff808211156126e6578384fd5b81850186601f8201126126f7578485fd5b8035925081831115612707578485fd5b86602060c08502830101111561271b578485fd5b60200196919550909350505050565b6000602080838503121561273c578182fd5b823567ffffffffffffffff811115612752578283fd5b80840185601f820112612763578384fd5b8035915061277861277383613745565b61371e565b828152838101908285016060808602850187018a1015612796578788fd5b8794505b858510156127c2576127ac8a836125e1565b845260019490940193928601929081019061279a565b509098975050505050505050565b600080602083850312156127e2578182fd5b823567ffffffffffffffff8111156127f8578283fd5b6126b18582860161259e565b60008060008060408587031215612819578182fd5b843567ffffffffffffffff80821115612830578384fd5b61283c8883890161259e565b90965094506020870135915080821115612854578384fd5b5061286187828801612555565b95989497509550505050565b60006020828403121561287e578081fd5b8135611ef4816137a9565b60006020828403121561289a578081fd5b8151611ef4816137a9565b600060c082840312156128b6578081fd5b6128c060c061371e565b82356128cb81613791565b808252506020830135602082015260408301356040820152606083013560608201526080830135608082015260a083013561290581613791565b60a08201529392505050565b600060408284031215612922578081fd5b61292c604061371e565b8235612937816137a9565b81526020928301359281019290925250919050565b60006020828403121561295d578081fd5b5035919050565b600060208284031215612975578081fd5b5051919050565b6000806040838503121561298e578182fd5b82359150612674846020850161253e565b80516001600160a01b03168252602080820151908301526040908101511515910152565b60609190911b6bffffffffffffffffffffffff1916815260140190565b918252602082015260400190565b60008251612a00818460208701613765565b9190910192915050565b6001600160a01b0391909116815260200190565b600060408083016001600160a01b03808716855260208381870152828751808552606094508488019150828901875b82811015612a7c5781518051871685528581015186860152880151888501529286019290840190600101612a4d565b50919a9950505050505050505050565b6001600160a01b03848116825260406020808401829052838201859052600092869160608601855b88811015612ae25782850184612aca828861253e565b16835235838301529385019390850190600101612ab4565b509998505050505050505050565b6001600160a01b03929092168252602082015260400190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b0393909316835260208301919091521515604082015260600190565b6001600160a01b039687168152602081019590955260408501939093526060840191909152608083015290911660a082015260c00190565b60208082528181018390526000908460408401835b86811015612be5578383016001600160a01b03612bd4828661253e565b168352925090830190600101612bb7565b509695505050505050565b6020808252825182820181905260009190848201906040850190845b81811015612c3257612c1f83855161299f565b9284019260609290920191600101612c0c565b50909695505050505050565b6020808252818101839052600090604080840186845b87811015612cbf578482016001600160a01b0380612c72838661253e565b1685529035868501528285013585850152606080840135908501526080808401359085015260a09081840135612ca781613791565b169084015260c0928301929190910190600101612c54565b5090979650505050505050565b602080825282518282018190526000919060409081850190868401855b82811015612d4357815180516001600160a01b03908116865287820151888701528682015187870152606080830151908701526080808301519087015260a091820151169085015260c09093019290850190600101612ce9565b5091979650505050505050565b6020808252825182820181905260009190848201906040850190845b81811015612c3257612d7f83855161299f565b9284019260609290920191600101612d6c565b602080825282518282018190526000919060409081850190868401855b82811015612d4357815180516001600160a01b03168552860151868501529284019290850190600101612daf565b901515815260200190565b9115158252602082015260400190565b6000602082528251806020840152612e17816040850160208701613765565b601f01601f19169190910160400192915050565b60208082526022908201527f456e756d657261626c655365743a20696e646578206f7574206f6620626f756e60408201527f6473000000000000000000000000000000000000000000000000000000000000606082015260800190565b60208082526013908201527f554e535550504f525445445f4144445245535300000000000000000000000000604082015260600190565b6020808252600a908201527f4e4f5f4641524d494e4700000000000000000000000000000000000000000000604082015260600190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201527f6464726573730000000000000000000000000000000000000000000000000000606082015260800190565b60208082526012908201527f494e53554646494349454e545f46554e44530000000000000000000000000000604082015260600190565b6020808252601b908201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604082015260600190565b6020808252600c908201527f5a45524f5f42414c414e43450000000000000000000000000000000000000000604082015260600190565b60208082526014908201527f4e4f545f53595354454d5f46494e414c495a4544000000000000000000000000604082015260600190565b6020808252600d908201527f4e4f5f535741505f544f4b454e00000000000000000000000000000000000000604082015260600190565b60208082526008908201527f4144445f4641494c000000000000000000000000000000000000000000000000604082015260600190565b6020808252601e908201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604082015260600190565b60208082526026908201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60408201527f722063616c6c0000000000000000000000000000000000000000000000000000606082015260800190565b60208082526009908201527f544f4f5f4541524c590000000000000000000000000000000000000000000000604082015260600190565b6020808252601a908201527f536166654d6174683a206469766973696f6e206279207a65726f000000000000604082015260600190565b60208082526016908201527f494e56414c49445f4f5645525f4e554d455241544f5200000000000000000000604082015260600190565b60208082526018908201527f494e56414c49445f544f4b455f44454e4f4d494e41544f520000000000000000604082015260600190565b6020808252600c908201527f5a45524f5f414444524553530000000000000000000000000000000000000000604082015260600190565b60208082526009908201527f305f42414c414e43450000000000000000000000000000000000000000000000604082015260600190565b6020808252600c908201527f52415445535f4c4f434b45440000000000000000000000000000000000000000604082015260600190565b6020808252600d908201527f5354414745315f4c4f434b454400000000000000000000000000000000000000604082015260600190565b6020808252600f908201527f4455504c49434154455f544f4b454e0000000000000000000000000000000000604082015260600190565b6020808252600d908201527f494e4352454153455f4f4e4c5900000000000000000000000000000000000000604082015260600190565b6020808252600f908201527f4e4f5448494e475f544f5f4d4f56450000000000000000000000000000000000604082015260600190565b60208082526021908201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f60408201527f7700000000000000000000000000000000000000000000000000000000000000606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526009908201527f4e4f5f544f4b454e530000000000000000000000000000000000000000000000604082015260600190565b60208082526011908201527f414c52454144595f46494e414c495a4544000000000000000000000000000000604082015260600190565b6020808252600a908201527f4f5645525f4c494d495400000000000000000000000000000000000000000000604082015260600190565b60208082526017908201527f46494e414c495a45445f4d5553545f42455f46414c5345000000000000000000604082015260600190565b60208082526018908201527f494e56414c49445f4f5645525f44454e4f4d494e41544f520000000000000000604082015260600190565b6020808252600b908201527f4e4f545f53544152544544000000000000000000000000000000000000000000604082015260600190565b60208082526013908201527f414c52454144595f5345545f544f5f5357415000000000000000000000000000604082015260600190565b6020808252601d908201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604082015260600190565b6020808252602a908201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60408201527f6f74207375636365656400000000000000000000000000000000000000000000606082015260800190565b6020808252600d908201527f4e4f545f535550504f5254454400000000000000000000000000000000000000604082015260600190565b6020808252600f908201527f414c52454144595f535441525445440000000000000000000000000000000000604082015260600190565b6020808252600d908201527f50524f4f465f494e56414c494400000000000000000000000000000000000000604082015260600190565b81548152600190910154602082015260400190565b8151151581526020918201519181019190915260400190565b9283526020830191909152604082015260600190565b60405181810167ffffffffffffffff8111828210171561373d57600080fd5b604052919050565b600067ffffffffffffffff82111561375b578081fd5b5060209081020190565b60005b83811015613780578181015183820152602001613768565b838111156120da5750506000910152565b6001600160a01b03811681146137a657600080fd5b50565b80151581146137a657600080fdfea264697066735822122046c69c593464b92668b2f94b424d5638ed764457d031681215de9aca1063413664736f6c634300060b0033";

export class CoreEvent__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    treasury: string,
    tokensToSupport: {
      token: string;
      maxUserLimit: BigNumberish;
      systemFinalized: boolean;
    }[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CoreEvent> {
    return super.deploy(
      treasury,
      tokensToSupport,
      overrides || {}
    ) as Promise<CoreEvent>;
  }
  getDeployTransaction(
    treasury: string,
    tokensToSupport: {
      token: string;
      maxUserLimit: BigNumberish;
      systemFinalized: boolean;
    }[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      treasury,
      tokensToSupport,
      overrides || {}
    );
  }
  attach(address: string): CoreEvent {
    return super.attach(address) as CoreEvent;
  }
  connect(signer: Signer): CoreEvent__factory {
    return super.connect(signer) as CoreEvent__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CoreEventInterface {
    return new utils.Interface(_abi) as CoreEventInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CoreEvent {
    return new Contract(address, _abi, signerOrProvider) as CoreEvent;
  }
}
