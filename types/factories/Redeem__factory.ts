/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Redeem, RedeemInterface } from "../Redeem";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_fromToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_toToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_stakingContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_expirationBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_stakingSchedule",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "convert",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "expirationBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fromToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "recoupRemaining",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stakingContract",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stakingSchedule",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "toToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6101206040523480156200001257600080fd5b50604051620014d4380380620014d4833981810160405260a08110156200003857600080fd5b5080516020820151604083015160608401516080909401519293919290919060006200006c6001600160e01b036200020016565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3506001600160a01b03851662000106576040805162461bcd60e51b815260206004820152601160248201527024a72b20a624a22fa32927a6aa27a5a2a760791b604482015290519081900360640190fd5b6001600160a01b03841662000154576040805162461bcd60e51b815260206004820152600f60248201526e24a72b20a624a22faa27aa27a5a2a760891b604482015290519081900360640190fd5b6001600160a01b038316620001a2576040805162461bcd60e51b815260206004820152600f60248201526e494e56414c49445f5354414b494e4760881b604482015290519081900360640190fd5b606085811b6001600160601b031990811660805285821b811660a0529084901b1660c05260e0829052610100819052620001f56001600160a01b0385168460001962000204602090811b6200081f17901c565b505050505062000632565b3390565b8015806200028e575060408051636eb1769f60e11b81523060048201526001600160a01b03848116602483015291519185169163dd62ed3e91604480820192602092909190829003018186803b1580156200025e57600080fd5b505afa15801562000273573d6000803e3d6000fd5b505050506040513d60208110156200028a57600080fd5b5051155b620002cb5760405162461bcd60e51b81526004018080602001828103825260368152602001806200149e6036913960400191505060405180910390fd5b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b0390811663095ea7b360e01b17909152620003239185916200032816565b505050565b606062000384826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316620003e460201b6200097e179092919060201c565b8051909150156200032357808060200190516020811015620003a557600080fd5b5051620003235760405162461bcd60e51b815260040180806020018281038252602a81526020018062001474602a913960400191505060405180910390fd5b6060620003fe84846000856001600160e01b036200040816565b90505b9392505050565b6060824710156200044b5760405162461bcd60e51b81526004018080602001828103825260268152602001806200144e6026913960400191505060405180910390fd5b6200045f856001600160e01b036200058216565b620004b1576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b60006060866001600160a01b031685876040518082805190602001908083835b60208310620004f25780518252601f199092019160209182019101620004d1565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d806000811462000556576040519150601f19603f3d011682016040523d82523d6000602084013e6200055b565b606091505b509092509050620005778282866001600160e01b036200058816565b979650505050505050565b3b151590565b606083156200059957508162000401565b825115620005aa5782518084602001fd5b8160405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015620005f6578181015183820152602001620005dc565b50505050905090810190601f168015620006245780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b60805160601c60a05160601c60c05160601c60e05161010051610db06200069e6000398061046452806104fa5250806101ab52806106d7525080610494528061051e525080610187528061076d52806107ef52508061016352806102ca52806103d15250610db06000f3fe608060405234801561001057600080fd5b50600436106100be5760003560e01c806391bbdcc711610076578063ee99205c1161005b578063ee99205c1461012b578063f2fde38b14610133578063f5c2c60214610159576100be565b806391bbdcc71461011b578063cadad37c14610123576100be565b80636d417064116100a75780636d417064146100ef578063715018a6146101095780638da5cb5b14610113576100be565b806332a46857146100c35780633c930575146100e7575b600080fd5b6100cb610161565b604080516001600160a01b039092168252519081900360200190f35b6100cb610185565b6100f76101a9565b60408051918252519081900360200190f35b6101116101cd565b005b6100cb610298565b6101116102a7565b6100f76104f8565b6100cb61051c565b6101116004803603602081101561014957600080fd5b50356001600160a01b0316610540565b610111610661565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b6101d5610997565b6001600160a01b03166101e6610298565b6001600160a01b031614610241576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a36000805473ffffffffffffffffffffffffffffffffffffffff19169055565b6000546001600160a01b031690565b604080516370a0823160e01b815233600482015290516000916001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016916370a0823191602480820192602092909190829003018186803b15801561031157600080fd5b505afa158015610325573d6000803e3d6000fd5b505050506040513d602081101561033b57600080fd5b5051905080610391576040805162461bcd60e51b815260206004820152601460248201527f494e53554646494349454e545f42414c414e4345000000000000000000000000604482015290519081900360640190fd5b604080517f79cc67900000000000000000000000000000000000000000000000000000000081523360048201526024810183905290516001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016916379cc679091604480830192600092919082900301818387803b15801561041857600080fd5b505af115801561042c573d6000803e3d6000fd5b5050604080517f4cf5fbf5000000000000000000000000000000000000000000000000000000008152336004820152602481018590527f0000000000000000000000000000000000000000000000000000000000000000604482015290516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169350634cf5fbf59250606480830192600092919082900301818387803b1580156104dd57600080fd5b505af11580156104f1573d6000803e3d6000fd5b5050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b610548610997565b6001600160a01b0316610559610298565b6001600160a01b0316146105b4576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b0381166105f95760405162461bcd60e51b8152600401808060200182810382526026815260200180610ccf6026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b610669610997565b6001600160a01b031661067a610298565b6001600160a01b0316146106d5576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b7f000000000000000000000000000000000000000000000000000000000000000043101561074a576040805162461bcd60e51b815260206004820152601560248201527f45585049524154494f4e5f4e4f545f5041535345440000000000000000000000604482015290519081900360640190fd5b604080516370a0823160e01b815230600482015290516000916001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016916370a0823191602480820192602092909190829003018186803b1580156107b457600080fd5b505afa1580156107c8573d6000803e3d6000fd5b505050506040513d60208110156107de57600080fd5b5051905061081c6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016338363ffffffff61099b16565b50565b8015806108be5750604080517fdd62ed3e0000000000000000000000000000000000000000000000000000000081523060048201526001600160a01b03848116602483015291519185169163dd62ed3e91604480820192602092909190829003018186803b15801561089057600080fd5b505afa1580156108a4573d6000803e3d6000fd5b505050506040513d60208110156108ba57600080fd5b5051155b6108f95760405162461bcd60e51b8152600401808060200182810382526036815260200180610d456036913960400191505060405180910390fd5b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f095ea7b300000000000000000000000000000000000000000000000000000000179052610979908490610a17565b505050565b606061098d8484600085610ac8565b90505b9392505050565b3390565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb000000000000000000000000000000000000000000000000000000001790526109799084905b6060610a6c826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661097e9092919063ffffffff16565b80519091501561097957808060200190516020811015610a8b57600080fd5b50516109795760405162461bcd60e51b815260040180806020018281038252602a815260200180610d1b602a913960400191505060405180910390fd5b606082471015610b095760405162461bcd60e51b8152600401808060200182810382526026815260200180610cf56026913960400191505060405180910390fd5b610b1285610c24565b610b63576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b60006060866001600160a01b031685876040518082805190602001908083835b60208310610ba25780518252601f199092019160209182019101610b83565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114610c04576040519150601f19603f3d011682016040523d82523d6000602084013e610c09565b606091505b5091509150610c19828286610c2a565b979650505050505050565b3b151590565b60608315610c39575081610990565b825115610c495782518084602001fd5b8160405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610c93578181015183820152602001610c7b565b50505050905090810190601f168015610cc05780820380516001836020036101000a031916815260200191505b509250505060405180910390fdfe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565645361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365a2646970667358221220b3ef3f25814ff9f7faf4a58f7cb111e5abbb03d9aeb9f51a8dfa046e313373c464736f6c634300060b0033416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565645361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365";

export class Redeem__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _fromToken: string,
    _toToken: string,
    _stakingContract: string,
    _expirationBlock: BigNumberish,
    _stakingSchedule: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Redeem> {
    return super.deploy(
      _fromToken,
      _toToken,
      _stakingContract,
      _expirationBlock,
      _stakingSchedule,
      overrides || {}
    ) as Promise<Redeem>;
  }
  getDeployTransaction(
    _fromToken: string,
    _toToken: string,
    _stakingContract: string,
    _expirationBlock: BigNumberish,
    _stakingSchedule: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _fromToken,
      _toToken,
      _stakingContract,
      _expirationBlock,
      _stakingSchedule,
      overrides || {}
    );
  }
  attach(address: string): Redeem {
    return super.attach(address) as Redeem;
  }
  connect(signer: Signer): Redeem__factory {
    return super.connect(signer) as Redeem__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RedeemInterface {
    return new utils.Interface(_abi) as RedeemInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Redeem {
    return new Contract(address, _abi, signerOrProvider) as Redeem;
  }
}
