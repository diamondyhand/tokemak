/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ERC1271WalletMock,
  ERC1271WalletMockInterface,
} from "../ERC1271WalletMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "originalOwner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "isValidSignature",
    outputs: [
      {
        internalType: "bytes4",
        name: "magicValue",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161088f38038061088f8339818101604052602081101561003357600080fd5b505160006100486001600160e01b0361009816565b600080546001600160a01b0319166001600160a01b03831690811782556040519293509160008051602061086f833981519152908290a350610092816001600160e01b0361009c16565b506101bf565b3390565b6100ad6001600160e01b0361009816565b6001600160a01b03166100c76001600160e01b036101b016565b6001600160a01b031614610122576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b0381166101675760405162461bcd60e51b81526004018080602001828103825260268152602001806108496026913960400191505060405180910390fd5b600080546040516001600160a01b038085169392169160008051602061086f83398151915291a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031690565b61067b806101ce6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80631626ba7e14610051578063715018a6146101335780638da5cb5b1461013d578063f2fde38b14610161575b600080fd5b6100fe6004803603604081101561006757600080fd5b8135919081019060408101602082013564010000000081111561008957600080fd5b82018360208201111561009b57600080fd5b803590602001918460018302840111640100000000831117156100bd57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610187945050505050565b604080517fffffffff000000000000000000000000000000000000000000000000000000009092168252519081900360200190f35b61013b6101e2565b005b6101456102ad565b604080516001600160a01b039092168252519081900360200190f35b61013b6004803603602081101561017757600080fd5b50356001600160a01b03166102bc565b60006101916102ad565b6001600160a01b03166101a484846103dd565b6001600160a01b0316146101b95760006101db565b7f1626ba7e000000000000000000000000000000000000000000000000000000005b9392505050565b6101ea61045d565b6001600160a01b03166101fb6102ad565b6001600160a01b031614610256576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a36000805473ffffffffffffffffffffffffffffffffffffffff19169055565b6000546001600160a01b031690565b6102c461045d565b6001600160a01b03166102d56102ad565b6001600160a01b031614610330576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b0381166103755760405162461bcd60e51b81526004018080602001828103825260268152602001806105dc6026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b60008151604114610435576040805162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015290519081900360640190fd5b60208201516040830151606084015160001a61045386828585610461565b9695505050505050565b3390565b60007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08211156104c25760405162461bcd60e51b81526004018080602001828103825260228152602001806106026022913960400191505060405180910390fd5b8360ff16601b14806104d757508360ff16601c145b6105125760405162461bcd60e51b81526004018080602001828103825260228152602001806106246022913960400191505060405180910390fd5b604080516000808252602080830180855289905260ff88168385015260608301879052608083018690529251909260019260a080820193601f1981019281900390910190855afa15801561056a573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166105d2576040805162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015290519081900360640190fd5b9594505050505056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737345434453413a20696e76616c6964207369676e6174757265202773272076616c756545434453413a20696e76616c6964207369676e6174757265202776272076616c7565a2646970667358221220d38ffbc9a2477aa2c8b9ef4d8f02ff5dc776b4121ed05aeb4ff4edb76946da2964736f6c634300060b00334f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573738be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0";

export class ERC1271WalletMock__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    originalOwner: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC1271WalletMock> {
    return super.deploy(
      originalOwner,
      overrides || {}
    ) as Promise<ERC1271WalletMock>;
  }
  getDeployTransaction(
    originalOwner: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(originalOwner, overrides || {});
  }
  attach(address: string): ERC1271WalletMock {
    return super.attach(address) as ERC1271WalletMock;
  }
  connect(signer: Signer): ERC1271WalletMock__factory {
    return super.connect(signer) as ERC1271WalletMock__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1271WalletMockInterface {
    return new utils.Interface(_abi) as ERC1271WalletMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC1271WalletMock {
    return new Contract(address, _abi, signerOrProvider) as ERC1271WalletMock;
  }
}
