/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type {
  IFraxUnifiedFarm,
  IFraxUnifiedFarmInterface,
} from "../IFraxUnifiedFarm";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "lockedLiquidityOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "lockedStakesOf",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "kek_id",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "start_timestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "liquidity",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "ending_timestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lock_multiplier",
            type: "uint256",
          },
        ],
        internalType: "struct IFraxUnifiedFarm.LockedStake[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

export class IFraxUnifiedFarm__factory {
  static readonly abi = _abi;
  static createInterface(): IFraxUnifiedFarmInterface {
    return new utils.Interface(_abi) as IFraxUnifiedFarmInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IFraxUnifiedFarm {
    return new Contract(address, _abi, signerOrProvider) as IFraxUnifiedFarm;
  }
}
