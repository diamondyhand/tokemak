/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
  BaseContract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "ethers";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";
import type { TypedEventFilter, TypedEvent, TypedListener } from "./common";

interface ICurveFactoryInterface extends ethers.utils.Interface {
  functions: {
    "accept_transfer_ownership()": FunctionFragment;
    "add_base_pool(address,address,uint256,address[10])": FunctionFragment;
    "admin()": FunctionFragment;
    "base_pool_count()": FunctionFragment;
    "base_pool_list(uint256)": FunctionFragment;
    "batch_set_pool_asset_type(address[32],uint256[32])": FunctionFragment;
    "commit_transfer_ownership(address)": FunctionFragment;
    "convert_metapool_fees()": FunctionFragment;
    "deploy_gauge(address)": FunctionFragment;
    "deploy_metapool(address,string,string,address,uint256,uint256,uint256)": FunctionFragment;
    "deploy_plain_pool(string,string,address[4],uint256,uint256,uint256,uint256)": FunctionFragment;
    "fee_receiver()": FunctionFragment;
    "find_pool_for_coins(address,address,uint256)": FunctionFragment;
    "future_admin()": FunctionFragment;
    "gauge_implementation()": FunctionFragment;
    "get_A(address)": FunctionFragment;
    "get_admin_balances(address)": FunctionFragment;
    "get_balances(address)": FunctionFragment;
    "get_base_pool(address)": FunctionFragment;
    "get_coin_indices(address,address,address)": FunctionFragment;
    "get_coins(address)": FunctionFragment;
    "get_decimals(address)": FunctionFragment;
    "get_fee_receiver(address)": FunctionFragment;
    "get_fees(address)": FunctionFragment;
    "get_gauge(address)": FunctionFragment;
    "get_implementation_address(address)": FunctionFragment;
    "get_meta_n_coins(address)": FunctionFragment;
    "get_metapool_rates(address)": FunctionFragment;
    "get_n_coins(address)": FunctionFragment;
    "get_pool_asset_type(address)": FunctionFragment;
    "get_underlying_balances(address)": FunctionFragment;
    "get_underlying_coins(address)": FunctionFragment;
    "get_underlying_decimals(address)": FunctionFragment;
    "is_meta(address)": FunctionFragment;
    "manager()": FunctionFragment;
    "metapool_implementations(address)": FunctionFragment;
    "plain_implementations(uint256,uint256)": FunctionFragment;
    "pool_count()": FunctionFragment;
    "pool_list(uint256)": FunctionFragment;
    "set_fee_receiver(address,address)": FunctionFragment;
    "set_gauge(address,address)": FunctionFragment;
    "set_gauge_implementation(address)": FunctionFragment;
    "set_manager(address)": FunctionFragment;
    "set_metapool_implementations(address,address[10])": FunctionFragment;
    "set_plain_implementations(uint256,address[10])": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "accept_transfer_ownership",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "add_base_pool",
    values: [
      string,
      string,
      BigNumberish,
      [
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string
      ]
    ]
  ): string;
  encodeFunctionData(functionFragment: "admin", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "base_pool_count",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "base_pool_list",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "batch_set_pool_asset_type",
    values: [
      [
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string
      ],
      [
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish
      ]
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "commit_transfer_ownership",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "convert_metapool_fees",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "deploy_gauge",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "deploy_metapool",
    values: [
      string,
      string,
      string,
      string,
      BigNumberish,
      BigNumberish,
      BigNumberish
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "deploy_plain_pool",
    values: [
      string,
      string,
      [string, string, string, string],
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "fee_receiver",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "find_pool_for_coins",
    values: [string, string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "future_admin",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "gauge_implementation",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "get_A", values: [string]): string;
  encodeFunctionData(
    functionFragment: "get_admin_balances",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "get_balances",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "get_base_pool",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "get_coin_indices",
    values: [string, string, string]
  ): string;
  encodeFunctionData(functionFragment: "get_coins", values: [string]): string;
  encodeFunctionData(
    functionFragment: "get_decimals",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "get_fee_receiver",
    values: [string]
  ): string;
  encodeFunctionData(functionFragment: "get_fees", values: [string]): string;
  encodeFunctionData(functionFragment: "get_gauge", values: [string]): string;
  encodeFunctionData(
    functionFragment: "get_implementation_address",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "get_meta_n_coins",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "get_metapool_rates",
    values: [string]
  ): string;
  encodeFunctionData(functionFragment: "get_n_coins", values: [string]): string;
  encodeFunctionData(
    functionFragment: "get_pool_asset_type",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "get_underlying_balances",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "get_underlying_coins",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "get_underlying_decimals",
    values: [string]
  ): string;
  encodeFunctionData(functionFragment: "is_meta", values: [string]): string;
  encodeFunctionData(functionFragment: "manager", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "metapool_implementations",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "plain_implementations",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "pool_count",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "pool_list",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "set_fee_receiver",
    values: [string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "set_gauge",
    values: [string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "set_gauge_implementation",
    values: [string]
  ): string;
  encodeFunctionData(functionFragment: "set_manager", values: [string]): string;
  encodeFunctionData(
    functionFragment: "set_metapool_implementations",
    values: [
      string,
      [
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string
      ]
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "set_plain_implementations",
    values: [
      BigNumberish,
      [
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string
      ]
    ]
  ): string;

  decodeFunctionResult(
    functionFragment: "accept_transfer_ownership",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "add_base_pool",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "admin", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "base_pool_count",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "base_pool_list",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "batch_set_pool_asset_type",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "commit_transfer_ownership",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "convert_metapool_fees",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "deploy_gauge",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "deploy_metapool",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "deploy_plain_pool",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "fee_receiver",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "find_pool_for_coins",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "future_admin",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "gauge_implementation",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "get_A", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "get_admin_balances",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "get_balances",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "get_base_pool",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "get_coin_indices",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "get_coins", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "get_decimals",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "get_fee_receiver",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "get_fees", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "get_gauge", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "get_implementation_address",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "get_meta_n_coins",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "get_metapool_rates",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "get_n_coins",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "get_pool_asset_type",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "get_underlying_balances",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "get_underlying_coins",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "get_underlying_decimals",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "is_meta", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "manager", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "metapool_implementations",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "plain_implementations",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "pool_count", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "pool_list", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "set_fee_receiver",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "set_gauge", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "set_gauge_implementation",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "set_manager",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "set_metapool_implementations",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "set_plain_implementations",
    data: BytesLike
  ): Result;

  events: {};
}

export class ICurveFactory extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  listeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter?: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): Array<TypedListener<EventArgsArray, EventArgsObject>>;
  off<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  on<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  once<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeListener<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeAllListeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): this;

  listeners(eventName?: string): Array<Listener>;
  off(eventName: string, listener: Listener): this;
  on(eventName: string, listener: Listener): this;
  once(eventName: string, listener: Listener): this;
  removeListener(eventName: string, listener: Listener): this;
  removeAllListeners(eventName?: string): this;

  queryFilter<EventArgsArray extends Array<any>, EventArgsObject>(
    event: TypedEventFilter<EventArgsArray, EventArgsObject>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEvent<EventArgsArray & EventArgsObject>>>;

  interface: ICurveFactoryInterface;

  functions: {
    accept_transfer_ownership(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    add_base_pool(
      _base_pool: string,
      _fee_receiver: string,
      _asset_type: BigNumberish,
      _implementations: [
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string
      ],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    admin(overrides?: CallOverrides): Promise<[string]>;

    base_pool_count(overrides?: CallOverrides): Promise<[BigNumber]>;

    base_pool_list(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;

    batch_set_pool_asset_type(
      _pools: [
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string
      ],
      _asset_types: [
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish
      ],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    commit_transfer_ownership(
      _addr: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    convert_metapool_fees(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    deploy_gauge(
      _pool: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "deploy_metapool(address,string,string,address,uint256,uint256,uint256)"(
      _base_pool: string,
      _name: string,
      _symbol: string,
      _coin: string,
      _A: BigNumberish,
      _fee: BigNumberish,
      _implementation_idx: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "deploy_metapool(address,string,string,address,uint256,uint256)"(
      _base_pool: string,
      _name: string,
      _symbol: string,
      _coin: string,
      _A: BigNumberish,
      _fee: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "deploy_plain_pool(string,string,address[4],uint256,uint256,uint256,uint256)"(
      _name: string,
      _symbol: string,
      _coins: [string, string, string, string],
      _A: BigNumberish,
      _fee: BigNumberish,
      _asset_type: BigNumberish,
      _implementation_idx: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "deploy_plain_pool(string,string,address[4],uint256,uint256,uint256)"(
      _name: string,
      _symbol: string,
      _coins: [string, string, string, string],
      _A: BigNumberish,
      _fee: BigNumberish,
      _asset_type: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "deploy_plain_pool(string,string,address[4],uint256,uint256)"(
      _name: string,
      _symbol: string,
      _coins: [string, string, string, string],
      _A: BigNumberish,
      _fee: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    fee_receiver(overrides?: CallOverrides): Promise<[string]>;

    "find_pool_for_coins(address,address,uint256)"(
      _from: string,
      _to: string,
      i: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;

    "find_pool_for_coins(address,address)"(
      _from: string,
      _to: string,
      overrides?: CallOverrides
    ): Promise<[string]>;

    future_admin(overrides?: CallOverrides): Promise<[string]>;

    gauge_implementation(overrides?: CallOverrides): Promise<[string]>;

    get_A(_pool: string, overrides?: CallOverrides): Promise<[BigNumber]>;

    get_admin_balances(
      _pool: string,
      overrides?: CallOverrides
    ): Promise<[[BigNumber, BigNumber, BigNumber, BigNumber]]>;

    get_balances(
      _pool: string,
      overrides?: CallOverrides
    ): Promise<[[BigNumber, BigNumber, BigNumber, BigNumber]]>;

    get_base_pool(_pool: string, overrides?: CallOverrides): Promise<[string]>;

    get_coin_indices(
      _pool: string,
      _from: string,
      _to: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber, BigNumber, boolean]>;

    get_coins(
      _pool: string,
      overrides?: CallOverrides
    ): Promise<[[string, string, string, string]]>;

    get_decimals(
      _pool: string,
      overrides?: CallOverrides
    ): Promise<[[BigNumber, BigNumber, BigNumber, BigNumber]]>;

    get_fee_receiver(
      _pool: string,
      overrides?: CallOverrides
    ): Promise<[string]>;

    get_fees(
      _pool: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber, BigNumber]>;

    get_gauge(_pool: string, overrides?: CallOverrides): Promise<[string]>;

    get_implementation_address(
      _pool: string,
      overrides?: CallOverrides
    ): Promise<[string]>;

    get_meta_n_coins(
      _pool: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber, BigNumber]>;

    get_metapool_rates(
      _pool: string,
      overrides?: CallOverrides
    ): Promise<[[BigNumber, BigNumber]]>;

    get_n_coins(_pool: string, overrides?: CallOverrides): Promise<[BigNumber]>;

    get_pool_asset_type(
      _pool: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    get_underlying_balances(
      _pool: string,
      overrides?: CallOverrides
    ): Promise<
      [
        [
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber
        ]
      ]
    >;

    get_underlying_coins(
      _pool: string,
      overrides?: CallOverrides
    ): Promise<
      [[string, string, string, string, string, string, string, string]]
    >;

    get_underlying_decimals(
      _pool: string,
      overrides?: CallOverrides
    ): Promise<
      [
        [
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber
        ]
      ]
    >;

    is_meta(_pool: string, overrides?: CallOverrides): Promise<[boolean]>;

    manager(overrides?: CallOverrides): Promise<[string]>;

    metapool_implementations(
      _base_pool: string,
      overrides?: CallOverrides
    ): Promise<
      [
        [
          string,
          string,
          string,
          string,
          string,
          string,
          string,
          string,
          string,
          string
        ]
      ]
    >;

    plain_implementations(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;

    pool_count(overrides?: CallOverrides): Promise<[BigNumber]>;

    pool_list(arg0: BigNumberish, overrides?: CallOverrides): Promise<[string]>;

    set_fee_receiver(
      _base_pool: string,
      _fee_receiver: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    set_gauge(
      _pool: string,
      _gauge: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    set_gauge_implementation(
      _gauge_implementation: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    set_manager(
      _manager: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    set_metapool_implementations(
      _base_pool: string,
      _implementations: [
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string
      ],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    set_plain_implementations(
      _n_coins: BigNumberish,
      _implementations: [
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string
      ],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;
  };

  accept_transfer_ownership(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  add_base_pool(
    _base_pool: string,
    _fee_receiver: string,
    _asset_type: BigNumberish,
    _implementations: [
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string
    ],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  admin(overrides?: CallOverrides): Promise<string>;

  base_pool_count(overrides?: CallOverrides): Promise<BigNumber>;

  base_pool_list(
    arg0: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  batch_set_pool_asset_type(
    _pools: [
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string
    ],
    _asset_types: [
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish
    ],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  commit_transfer_ownership(
    _addr: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  convert_metapool_fees(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  deploy_gauge(
    _pool: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "deploy_metapool(address,string,string,address,uint256,uint256,uint256)"(
    _base_pool: string,
    _name: string,
    _symbol: string,
    _coin: string,
    _A: BigNumberish,
    _fee: BigNumberish,
    _implementation_idx: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "deploy_metapool(address,string,string,address,uint256,uint256)"(
    _base_pool: string,
    _name: string,
    _symbol: string,
    _coin: string,
    _A: BigNumberish,
    _fee: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "deploy_plain_pool(string,string,address[4],uint256,uint256,uint256,uint256)"(
    _name: string,
    _symbol: string,
    _coins: [string, string, string, string],
    _A: BigNumberish,
    _fee: BigNumberish,
    _asset_type: BigNumberish,
    _implementation_idx: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "deploy_plain_pool(string,string,address[4],uint256,uint256,uint256)"(
    _name: string,
    _symbol: string,
    _coins: [string, string, string, string],
    _A: BigNumberish,
    _fee: BigNumberish,
    _asset_type: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "deploy_plain_pool(string,string,address[4],uint256,uint256)"(
    _name: string,
    _symbol: string,
    _coins: [string, string, string, string],
    _A: BigNumberish,
    _fee: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  fee_receiver(overrides?: CallOverrides): Promise<string>;

  "find_pool_for_coins(address,address,uint256)"(
    _from: string,
    _to: string,
    i: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  "find_pool_for_coins(address,address)"(
    _from: string,
    _to: string,
    overrides?: CallOverrides
  ): Promise<string>;

  future_admin(overrides?: CallOverrides): Promise<string>;

  gauge_implementation(overrides?: CallOverrides): Promise<string>;

  get_A(_pool: string, overrides?: CallOverrides): Promise<BigNumber>;

  get_admin_balances(
    _pool: string,
    overrides?: CallOverrides
  ): Promise<[BigNumber, BigNumber, BigNumber, BigNumber]>;

  get_balances(
    _pool: string,
    overrides?: CallOverrides
  ): Promise<[BigNumber, BigNumber, BigNumber, BigNumber]>;

  get_base_pool(_pool: string, overrides?: CallOverrides): Promise<string>;

  get_coin_indices(
    _pool: string,
    _from: string,
    _to: string,
    overrides?: CallOverrides
  ): Promise<[BigNumber, BigNumber, boolean]>;

  get_coins(
    _pool: string,
    overrides?: CallOverrides
  ): Promise<[string, string, string, string]>;

  get_decimals(
    _pool: string,
    overrides?: CallOverrides
  ): Promise<[BigNumber, BigNumber, BigNumber, BigNumber]>;

  get_fee_receiver(_pool: string, overrides?: CallOverrides): Promise<string>;

  get_fees(
    _pool: string,
    overrides?: CallOverrides
  ): Promise<[BigNumber, BigNumber]>;

  get_gauge(_pool: string, overrides?: CallOverrides): Promise<string>;

  get_implementation_address(
    _pool: string,
    overrides?: CallOverrides
  ): Promise<string>;

  get_meta_n_coins(
    _pool: string,
    overrides?: CallOverrides
  ): Promise<[BigNumber, BigNumber]>;

  get_metapool_rates(
    _pool: string,
    overrides?: CallOverrides
  ): Promise<[BigNumber, BigNumber]>;

  get_n_coins(_pool: string, overrides?: CallOverrides): Promise<BigNumber>;

  get_pool_asset_type(
    _pool: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  get_underlying_balances(
    _pool: string,
    overrides?: CallOverrides
  ): Promise<
    [
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber
    ]
  >;

  get_underlying_coins(
    _pool: string,
    overrides?: CallOverrides
  ): Promise<[string, string, string, string, string, string, string, string]>;

  get_underlying_decimals(
    _pool: string,
    overrides?: CallOverrides
  ): Promise<
    [
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber
    ]
  >;

  is_meta(_pool: string, overrides?: CallOverrides): Promise<boolean>;

  manager(overrides?: CallOverrides): Promise<string>;

  metapool_implementations(
    _base_pool: string,
    overrides?: CallOverrides
  ): Promise<
    [
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string
    ]
  >;

  plain_implementations(
    arg0: BigNumberish,
    arg1: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  pool_count(overrides?: CallOverrides): Promise<BigNumber>;

  pool_list(arg0: BigNumberish, overrides?: CallOverrides): Promise<string>;

  set_fee_receiver(
    _base_pool: string,
    _fee_receiver: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  set_gauge(
    _pool: string,
    _gauge: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  set_gauge_implementation(
    _gauge_implementation: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  set_manager(
    _manager: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  set_metapool_implementations(
    _base_pool: string,
    _implementations: [
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string
    ],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  set_plain_implementations(
    _n_coins: BigNumberish,
    _implementations: [
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string
    ],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  callStatic: {
    accept_transfer_ownership(overrides?: CallOverrides): Promise<void>;

    add_base_pool(
      _base_pool: string,
      _fee_receiver: string,
      _asset_type: BigNumberish,
      _implementations: [
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string
      ],
      overrides?: CallOverrides
    ): Promise<void>;

    admin(overrides?: CallOverrides): Promise<string>;

    base_pool_count(overrides?: CallOverrides): Promise<BigNumber>;

    base_pool_list(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    batch_set_pool_asset_type(
      _pools: [
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string
      ],
      _asset_types: [
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish
      ],
      overrides?: CallOverrides
    ): Promise<void>;

    commit_transfer_ownership(
      _addr: string,
      overrides?: CallOverrides
    ): Promise<void>;

    convert_metapool_fees(overrides?: CallOverrides): Promise<boolean>;

    deploy_gauge(_pool: string, overrides?: CallOverrides): Promise<string>;

    "deploy_metapool(address,string,string,address,uint256,uint256,uint256)"(
      _base_pool: string,
      _name: string,
      _symbol: string,
      _coin: string,
      _A: BigNumberish,
      _fee: BigNumberish,
      _implementation_idx: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    "deploy_metapool(address,string,string,address,uint256,uint256)"(
      _base_pool: string,
      _name: string,
      _symbol: string,
      _coin: string,
      _A: BigNumberish,
      _fee: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    "deploy_plain_pool(string,string,address[4],uint256,uint256,uint256,uint256)"(
      _name: string,
      _symbol: string,
      _coins: [string, string, string, string],
      _A: BigNumberish,
      _fee: BigNumberish,
      _asset_type: BigNumberish,
      _implementation_idx: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    "deploy_plain_pool(string,string,address[4],uint256,uint256,uint256)"(
      _name: string,
      _symbol: string,
      _coins: [string, string, string, string],
      _A: BigNumberish,
      _fee: BigNumberish,
      _asset_type: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    "deploy_plain_pool(string,string,address[4],uint256,uint256)"(
      _name: string,
      _symbol: string,
      _coins: [string, string, string, string],
      _A: BigNumberish,
      _fee: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    fee_receiver(overrides?: CallOverrides): Promise<string>;

    "find_pool_for_coins(address,address,uint256)"(
      _from: string,
      _to: string,
      i: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    "find_pool_for_coins(address,address)"(
      _from: string,
      _to: string,
      overrides?: CallOverrides
    ): Promise<string>;

    future_admin(overrides?: CallOverrides): Promise<string>;

    gauge_implementation(overrides?: CallOverrides): Promise<string>;

    get_A(_pool: string, overrides?: CallOverrides): Promise<BigNumber>;

    get_admin_balances(
      _pool: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber, BigNumber, BigNumber, BigNumber]>;

    get_balances(
      _pool: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber, BigNumber, BigNumber, BigNumber]>;

    get_base_pool(_pool: string, overrides?: CallOverrides): Promise<string>;

    get_coin_indices(
      _pool: string,
      _from: string,
      _to: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber, BigNumber, boolean]>;

    get_coins(
      _pool: string,
      overrides?: CallOverrides
    ): Promise<[string, string, string, string]>;

    get_decimals(
      _pool: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber, BigNumber, BigNumber, BigNumber]>;

    get_fee_receiver(_pool: string, overrides?: CallOverrides): Promise<string>;

    get_fees(
      _pool: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber, BigNumber]>;

    get_gauge(_pool: string, overrides?: CallOverrides): Promise<string>;

    get_implementation_address(
      _pool: string,
      overrides?: CallOverrides
    ): Promise<string>;

    get_meta_n_coins(
      _pool: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber, BigNumber]>;

    get_metapool_rates(
      _pool: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber, BigNumber]>;

    get_n_coins(_pool: string, overrides?: CallOverrides): Promise<BigNumber>;

    get_pool_asset_type(
      _pool: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    get_underlying_balances(
      _pool: string,
      overrides?: CallOverrides
    ): Promise<
      [
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber
      ]
    >;

    get_underlying_coins(
      _pool: string,
      overrides?: CallOverrides
    ): Promise<
      [string, string, string, string, string, string, string, string]
    >;

    get_underlying_decimals(
      _pool: string,
      overrides?: CallOverrides
    ): Promise<
      [
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber
      ]
    >;

    is_meta(_pool: string, overrides?: CallOverrides): Promise<boolean>;

    manager(overrides?: CallOverrides): Promise<string>;

    metapool_implementations(
      _base_pool: string,
      overrides?: CallOverrides
    ): Promise<
      [
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string
      ]
    >;

    plain_implementations(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    pool_count(overrides?: CallOverrides): Promise<BigNumber>;

    pool_list(arg0: BigNumberish, overrides?: CallOverrides): Promise<string>;

    set_fee_receiver(
      _base_pool: string,
      _fee_receiver: string,
      overrides?: CallOverrides
    ): Promise<void>;

    set_gauge(
      _pool: string,
      _gauge: string,
      overrides?: CallOverrides
    ): Promise<void>;

    set_gauge_implementation(
      _gauge_implementation: string,
      overrides?: CallOverrides
    ): Promise<void>;

    set_manager(_manager: string, overrides?: CallOverrides): Promise<void>;

    set_metapool_implementations(
      _base_pool: string,
      _implementations: [
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string
      ],
      overrides?: CallOverrides
    ): Promise<void>;

    set_plain_implementations(
      _n_coins: BigNumberish,
      _implementations: [
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string
      ],
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {};

  estimateGas: {
    accept_transfer_ownership(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    add_base_pool(
      _base_pool: string,
      _fee_receiver: string,
      _asset_type: BigNumberish,
      _implementations: [
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string
      ],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    admin(overrides?: CallOverrides): Promise<BigNumber>;

    base_pool_count(overrides?: CallOverrides): Promise<BigNumber>;

    base_pool_list(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    batch_set_pool_asset_type(
      _pools: [
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string
      ],
      _asset_types: [
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish
      ],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    commit_transfer_ownership(
      _addr: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    convert_metapool_fees(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    deploy_gauge(
      _pool: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "deploy_metapool(address,string,string,address,uint256,uint256,uint256)"(
      _base_pool: string,
      _name: string,
      _symbol: string,
      _coin: string,
      _A: BigNumberish,
      _fee: BigNumberish,
      _implementation_idx: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "deploy_metapool(address,string,string,address,uint256,uint256)"(
      _base_pool: string,
      _name: string,
      _symbol: string,
      _coin: string,
      _A: BigNumberish,
      _fee: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "deploy_plain_pool(string,string,address[4],uint256,uint256,uint256,uint256)"(
      _name: string,
      _symbol: string,
      _coins: [string, string, string, string],
      _A: BigNumberish,
      _fee: BigNumberish,
      _asset_type: BigNumberish,
      _implementation_idx: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "deploy_plain_pool(string,string,address[4],uint256,uint256,uint256)"(
      _name: string,
      _symbol: string,
      _coins: [string, string, string, string],
      _A: BigNumberish,
      _fee: BigNumberish,
      _asset_type: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "deploy_plain_pool(string,string,address[4],uint256,uint256)"(
      _name: string,
      _symbol: string,
      _coins: [string, string, string, string],
      _A: BigNumberish,
      _fee: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    fee_receiver(overrides?: CallOverrides): Promise<BigNumber>;

    "find_pool_for_coins(address,address,uint256)"(
      _from: string,
      _to: string,
      i: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "find_pool_for_coins(address,address)"(
      _from: string,
      _to: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    future_admin(overrides?: CallOverrides): Promise<BigNumber>;

    gauge_implementation(overrides?: CallOverrides): Promise<BigNumber>;

    get_A(_pool: string, overrides?: CallOverrides): Promise<BigNumber>;

    get_admin_balances(
      _pool: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    get_balances(_pool: string, overrides?: CallOverrides): Promise<BigNumber>;

    get_base_pool(_pool: string, overrides?: CallOverrides): Promise<BigNumber>;

    get_coin_indices(
      _pool: string,
      _from: string,
      _to: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    get_coins(_pool: string, overrides?: CallOverrides): Promise<BigNumber>;

    get_decimals(_pool: string, overrides?: CallOverrides): Promise<BigNumber>;

    get_fee_receiver(
      _pool: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    get_fees(_pool: string, overrides?: CallOverrides): Promise<BigNumber>;

    get_gauge(_pool: string, overrides?: CallOverrides): Promise<BigNumber>;

    get_implementation_address(
      _pool: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    get_meta_n_coins(
      _pool: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    get_metapool_rates(
      _pool: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    get_n_coins(_pool: string, overrides?: CallOverrides): Promise<BigNumber>;

    get_pool_asset_type(
      _pool: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    get_underlying_balances(
      _pool: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    get_underlying_coins(
      _pool: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    get_underlying_decimals(
      _pool: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    is_meta(_pool: string, overrides?: CallOverrides): Promise<BigNumber>;

    manager(overrides?: CallOverrides): Promise<BigNumber>;

    metapool_implementations(
      _base_pool: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    plain_implementations(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    pool_count(overrides?: CallOverrides): Promise<BigNumber>;

    pool_list(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    set_fee_receiver(
      _base_pool: string,
      _fee_receiver: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    set_gauge(
      _pool: string,
      _gauge: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    set_gauge_implementation(
      _gauge_implementation: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    set_manager(
      _manager: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    set_metapool_implementations(
      _base_pool: string,
      _implementations: [
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string
      ],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    set_plain_implementations(
      _n_coins: BigNumberish,
      _implementations: [
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string
      ],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    accept_transfer_ownership(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    add_base_pool(
      _base_pool: string,
      _fee_receiver: string,
      _asset_type: BigNumberish,
      _implementations: [
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string
      ],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    admin(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    base_pool_count(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    base_pool_list(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    batch_set_pool_asset_type(
      _pools: [
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string
      ],
      _asset_types: [
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish
      ],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    commit_transfer_ownership(
      _addr: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    convert_metapool_fees(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    deploy_gauge(
      _pool: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "deploy_metapool(address,string,string,address,uint256,uint256,uint256)"(
      _base_pool: string,
      _name: string,
      _symbol: string,
      _coin: string,
      _A: BigNumberish,
      _fee: BigNumberish,
      _implementation_idx: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "deploy_metapool(address,string,string,address,uint256,uint256)"(
      _base_pool: string,
      _name: string,
      _symbol: string,
      _coin: string,
      _A: BigNumberish,
      _fee: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "deploy_plain_pool(string,string,address[4],uint256,uint256,uint256,uint256)"(
      _name: string,
      _symbol: string,
      _coins: [string, string, string, string],
      _A: BigNumberish,
      _fee: BigNumberish,
      _asset_type: BigNumberish,
      _implementation_idx: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "deploy_plain_pool(string,string,address[4],uint256,uint256,uint256)"(
      _name: string,
      _symbol: string,
      _coins: [string, string, string, string],
      _A: BigNumberish,
      _fee: BigNumberish,
      _asset_type: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "deploy_plain_pool(string,string,address[4],uint256,uint256)"(
      _name: string,
      _symbol: string,
      _coins: [string, string, string, string],
      _A: BigNumberish,
      _fee: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    fee_receiver(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "find_pool_for_coins(address,address,uint256)"(
      _from: string,
      _to: string,
      i: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "find_pool_for_coins(address,address)"(
      _from: string,
      _to: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    future_admin(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    gauge_implementation(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    get_A(
      _pool: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    get_admin_balances(
      _pool: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    get_balances(
      _pool: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    get_base_pool(
      _pool: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    get_coin_indices(
      _pool: string,
      _from: string,
      _to: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    get_coins(
      _pool: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    get_decimals(
      _pool: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    get_fee_receiver(
      _pool: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    get_fees(
      _pool: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    get_gauge(
      _pool: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    get_implementation_address(
      _pool: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    get_meta_n_coins(
      _pool: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    get_metapool_rates(
      _pool: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    get_n_coins(
      _pool: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    get_pool_asset_type(
      _pool: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    get_underlying_balances(
      _pool: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    get_underlying_coins(
      _pool: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    get_underlying_decimals(
      _pool: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    is_meta(
      _pool: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    manager(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    metapool_implementations(
      _base_pool: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    plain_implementations(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    pool_count(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    pool_list(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    set_fee_receiver(
      _base_pool: string,
      _fee_receiver: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    set_gauge(
      _pool: string,
      _gauge: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    set_gauge_implementation(
      _gauge_implementation: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    set_manager(
      _manager: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    set_metapool_implementations(
      _base_pool: string,
      _implementations: [
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string
      ],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    set_plain_implementations(
      _n_coins: BigNumberish,
      _implementations: [
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string
      ],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;
  };
}
