/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { DefiRound, DefiRoundInterface } from "../DefiRound";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_WETH",
        type: "address",
      },
      {
        internalType: "address",
        name: "_treasury",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_maxTotalValue",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "claimer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "assetsMoved",
        type: "uint256",
      },
    ],
    name: "AssetsFinalized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "depositor",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct IDefiRound.TokenData",
        name: "tokenInfo",
        type: "tuple",
      },
    ],
    name: "Deposited",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountTransferred",
        type: "uint256",
      },
    ],
    name: "GenesisTransfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "numerator",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "denominator",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct IDefiRound.RateData[]",
        name: "ratesData",
        type: "tuple[]",
      },
    ],
    name: "RatesPublished",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "address",
            name: "oracle",
            type: "address",
          },
          {
            internalType: "address",
            name: "genesis",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "maxLimit",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct IDefiRound.SupportedTokenData[]",
        name: "tokenData",
        type: "tuple[]",
      },
    ],
    name: "SupportedTokensAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct IDefiRound.TokenData[]",
        name: "tokens",
        type: "tuple[]",
      },
    ],
    name: "TreasuryTransfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "enabled",
            type: "bool",
          },
          {
            internalType: "bytes32",
            name: "root",
            type: "bytes32",
          },
        ],
        indexed: false,
        internalType: "struct IDefiRound.WhitelistSettings",
        name: "settings",
        type: "tuple",
      },
    ],
    name: "WhitelistConfigured",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "withdrawer",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct IDefiRound.TokenData",
        name: "tokenInfo",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "asETH",
        type: "bool",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [],
    name: "WETH",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "accountBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "address",
            name: "oracle",
            type: "address",
          },
          {
            internalType: "address",
            name: "genesis",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "maxLimit",
            type: "uint256",
          },
        ],
        internalType: "struct IDefiRound.SupportedTokenData[]",
        name: "tokensToSupport",
        type: "tuple[]",
      },
    ],
    name: "addSupportedTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "enabled",
            type: "bool",
          },
          {
            internalType: "bytes32",
            name: "root",
            type: "bytes32",
          },
        ],
        internalType: "struct IDefiRound.WhitelistSettings",
        name: "settings",
        type: "tuple",
      },
    ],
    name: "configureWhitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "currentStage",
    outputs: [
      {
        internalType: "enum IDefiRound.STAGES",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct IDefiRound.TokenData",
        name: "tokenInfo",
        type: "tuple",
      },
      {
        internalType: "bytes32[]",
        name: "proof",
        type: "bytes32[]",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "depositToGenesis",
        type: "bool",
      },
    ],
    name: "finalizeAssets",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getAccountData",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "initialDeposit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "currentBalance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "effectiveAmt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "ineffectiveAmt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "actualTokeReceived",
            type: "uint256",
          },
        ],
        internalType: "struct IDefiRound.AccountDataDetails[]",
        name: "data",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "tokens",
        type: "address[]",
      },
    ],
    name: "getGenesisPools",
    outputs: [
      {
        internalType: "address[]",
        name: "genesisAddresses",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMaxTotalValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "getRateAdjustedAmounts",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "tokens",
        type: "address[]",
      },
    ],
    name: "getRates",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "numerator",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "denominator",
            type: "uint256",
          },
        ],
        internalType: "struct IDefiRound.RateData[]",
        name: "rates",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSupportedTokens",
    outputs: [
      {
        internalType: "address[]",
        name: "tokens",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "tokens",
        type: "address[]",
      },
    ],
    name: "getTokenOracles",
    outputs: [
      {
        internalType: "address[]",
        name: "oracleAddresses",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastLookExpiration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "overSubscriptionRate",
    outputs: [
      {
        internalType: "uint256",
        name: "overNumerator",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "overDenominator",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "numerator",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "denominator",
            type: "uint256",
          },
        ],
        internalType: "struct IDefiRound.RateData[]",
        name: "ratesData",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "overNumerator",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "overDenominator",
            type: "uint256",
          },
        ],
        internalType: "struct IDefiRound.OversubscriptionRate",
        name: "oversubRate",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "lastLookDuration",
        type: "uint256",
      },
    ],
    name: "publishRates",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "transferToTreasury",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "treasury",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "whitelistSettings",
    outputs: [
      {
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
      {
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct IDefiRound.TokenData",
        name: "tokenInfo",
        type: "tuple",
      },
      {
        internalType: "bool",
        name: "asETH",
        type: "bool",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60e0604052600019600e553480156200001757600080fd5b5060405162003cae38038062003cae8339810160408190526200003a9162000167565b60006200004f6001600160e01b036200014516565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3506001600160a01b038316620000cb5760405162461bcd60e51b8152600401620000c290620001a9565b60405180910390fd5b6001600160a01b038216620000f45760405162461bcd60e51b8152600401620000c290620001cf565b60008111620001175760405162461bcd60e51b8152600401620000c290620001f9565b6001600160601b0319606093841b81166080529190921b1660a052600b805460ff1916905560c05262000223565b3390565b80516001600160a01b03811681146200016157600080fd5b92915050565b6000806000606084860312156200017c578283fd5b62000188858562000149565b925062000199856020860162000149565b9150604084015190509250925092565b6020808252600c908201526b0929cac82989288beae8aa8960a31b604082015260600190565b60208082526010908201526f494e56414c49445f545245415355525960801b604082015260600190565b60208082526010908201526f1253959053125117d350561513d5105360821b604082015260600190565b60805160601c60a05160601c60c051613a306200027e6000398061084b52806111ac525080610d81528061109e5250806101b5528061061b528061068052806107eb52806114ca528061164752806116a85250613a306000f3fe6080604052600436106101a55760003560e01c80638da5cb5b116100e1578063d294cb0f1161008a578063e4dc2aa411610064578063e4dc2aa414610497578063ef02c87e146104b7578063f2fde38b146104d7578063fcd472c2146104f7576101e1565b8063d294cb0f1461044d578063d3c7c2c71461046d578063d4c3eea014610482576101e1565b8063b72d6298116100bb578063b72d6298146103e0578063c41e850114610400578063ca72e5ae1461042d576101e1565b80638da5cb5b14610393578063980f49f4146103a8578063ad5c4648146103cb576101e1565b806361d027b31161014e5780636ff86162116101285780636ff8616214610334578063715018a6146103495780637745d9a61461035e5780637cd5c2c514610373576101e1565b806361d027b3146102c3578063646dca4f146102e557806367bd79a214610307576101e1565b80633d2406741161017f5780633d240674146102515780635bf5d54c146102745780635d78650e14610296576101e1565b806329b50260146101e65780633683f4e9146101f957806338ca827514610231576101e1565b366101e157336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146101df57600080fd5b005b600080fd5b6101df6101f4366004612a1e565b610517565b34801561020557600080fd5b50610219610214366004612b7c565b6108c7565b6040516102289392919061394b565b60405180910390f35b34801561023d57600080fd5b506101df61024c36600461283c565b6108e3565b34801561025d57600080fd5b50610266610b83565b604051610228929190612c69565b34801561028057600080fd5b50610289610b8c565b6040516102289190612fa1565b3480156102a257600080fd5b506102b66102b13660046127b5565b610b95565b6040516102289190612d98565b3480156102cf57600080fd5b506102d8610d7f565b6040516102289190612c96565b3480156102f157600080fd5b506102fa610da3565b6040516102289190613942565b34801561031357600080fd5b506103276103223660046127d0565b610da9565b6040516102289190612e79565b34801561034057600080fd5b506101df610e9c565b34801561035557600080fd5b506101df611121565b34801561036a57600080fd5b506102fa6111aa565b34801561037f57600080fd5b506101df61038e366004612942565b6111ce565b34801561039f57600080fd5b506102d86114aa565b3480156103b457600080fd5b506103bd6114b9565b604051610228929190612f91565b3480156103d757600080fd5b506102d86114c8565b3480156103ec57600080fd5b506101df6103fb366004612acc565b6114ec565b34801561040c57600080fd5b5061042061041b3660046127d0565b611774565b6040516102289190612d4b565b34801561043957600080fd5b506101df610448366004612b3e565b611889565b34801561045957600080fd5b506102fa6104683660046127b5565b61191e565b34801561047957600080fd5b50610420611965565b34801561048e57600080fd5b506102fa611a06565b3480156104a357600080fd5b506102fa6104b23660046127b5565b611a15565b3480156104c357600080fd5b506104206104d23660046127d0565b611a27565b3480156104e357600080fd5b506101df6104f23660046127b5565b611b09565b34801561050357600080fd5b506101df6105123660046128e4565b611bc9565b6000600b5460ff16600281111561052a57fe5b146105505760405162461bcd60e51b81526004016105479061325a565b60405180910390fd5b600f5460ff16156105735760405162461bcd60e51b8152600401610547906130b3565b600c5460ff16156105aa5761058e33600c6001015483611d26565b6105aa5760405162461bcd60e51b8152600401610547906138f2565b6105b26126c6565b6105c136849003840184612b03565b80516020820151919250906105dd60078363ffffffff611d6616565b6105f95760405162461bcd60e51b8152600401610547906137b9565b600081116106195760405162461bcd60e51b815260040161054790613884565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b031614801561065a5750600034115b156106f75734811461067e5760405162461bcd60e51b8152600401610547906130ea565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d0e30db0826040518263ffffffff1660e01b81526004016000604051808303818588803b1580156106d957600080fd5b505af11580156106ed573d6000803e3d6000fd5b5050505050610715565b34156107155760405162461bcd60e51b815260040161054790613501565b33600090815260046020526040902080546001600160a01b031661074d5780546001600160a01b0319166001600160a01b0384161781555b80546001600160a01b038481169116146107795760405162461bcd60e51b81526004016105479061384d565b600181015461078e908363ffffffff611d8416565b600182015560028101546107a8908363ffffffff611d8416565b600282018190556001600160a01b03841660009081526006602052604090206003015410156107e95760405162461bcd60e51b81526004016105479061335c565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316836001600160a01b031614801561082a5750600034115b610849576108496001600160a01b03841633308563ffffffff611da916565b7f0000000000000000000000000000000000000000000000000000000000000000610872611e34565b111561088657600f805460ff191660011790555b7fd662a533cf12023fe15a80ae716d3a2f8835338d8143c35e821d7999c647f45a33876040516108b7929190612ce8565b60405180910390a1505050505050565b60008060006108d68585611f0c565b9250925092509250925092565b6108eb61201a565b6001600160a01b03166108fc6114aa565b6001600160a01b0316146109225760405162461bcd60e51b81526004016105479061363a565b6000600b5460ff16600281111561093557fe5b146109525760405162461bcd60e51b815260040161054790613538565b600081116109725760405162461bcd60e51b81526004016105479061374b565b60008260200151116109965760405162461bcd60e51b8152600401610547906136dd565b81516109b45760405162461bcd60e51b815260040161054790613427565b8260005b81811015610aee576109c86126dd565b8686838181106109d457fe5b9050606002018036038101906109ea919061297a565b90506000816020015111610a105760405162461bcd60e51b815260040161054790613427565b6000816040015111610a345760405162461bcd60e51b8152600401610547906136dd565b80516001600160a01b039081166000908152600560205260409020541615610a6e5760405162461bcd60e51b815260040161054790613714565b8051610a829060099063ffffffff61201e16565b610a9e5760405162461bcd60e51b815260040161054790613291565b80516001600160a01b03908116600090815260056020908152604091829020845181546001600160a01b0319169416939093178355830151600180840191909155920151600290910155016109b8565b50610af96007612033565b610b036009612033565b14610b205760405162461bcd60e51b8152600401610547906136a6565b600b805460ff19166001908117909155438301600e558351905560208301516002556040517f6facc2a144ccf2312601c44688580913a2bd0fc0ab75655cc496a34d54c4e6ec90610b749087908790612e17565b60405180910390a15050505050565b60015460025482565b600b5460ff1681565b60606000610ba36007612033565b90508067ffffffffffffffff81118015610bbc57600080fd5b50604051908082528060200260200182016040528015610bf657816020015b610be3612707565b815260200190600190039081610bdb5790505b50915060005b81811015610d78576000610c1760078363ffffffff61203e16565b9050610c216126dd565b506001600160a01b03808616600090815260046020908152604091829020825160608101845281549094168452600180820154928501929092526002015491830191909152600b5460ff166002811115610c7757fe5b10158015610c8e575080516001600160a01b031615155b15610d15576000806000610ca6846040015186611f0c565b925092509250610cb4612707565b6040518060c00160405280876001600160a01b03168152602001866020015181526020018660400151815260200185815260200184815260200183815250905080898881518110610d0157fe5b602002602001018190525050505050610d6e565b6040518060c00160405280836001600160a01b03168152602001826020015181526020018260400151815260200160008152602001600081526020016000815250858481518110610d6257fe5b60200260200101819052505b5050600101610bfc565b5050919050565b7f000000000000000000000000000000000000000000000000000000000000000081565b600e5481565b6060818067ffffffffffffffff81118015610dc357600080fd5b50604051908082528060200260200182016040528015610dfd57816020015b610dea6126dd565b815260200190600190039081610de25790505b50915060005b81811015610e945760056000868684818110610e1b57fe5b9050602002016020810190610e3091906127b5565b6001600160a01b0390811682526020808301939093526040918201600020825160608101845281549092168252600181015493820193909352600290920154908201528351849083908110610e8157fe5b6020908102919091010152600101610e03565b505092915050565b610ea461201a565b6001600160a01b0316610eb56114aa565b6001600160a01b031614610edb5760405162461bcd60e51b81526004016105479061363a565b610ee361204a565b610eff5760405162461bcd60e51b815260040161054790612fe8565b6001600b5460ff166002811115610f1257fe5b14610f2f5760405162461bcd60e51b8152600401610547906138bb565b6000610f3b6007612033565b905060608167ffffffffffffffff81118015610f5657600080fd5b50604051908082528060200260200182016040528015610f9057816020015b610f7d6126c6565b815260200190600190039081610f755790505b50905060005b828110156110d7576000610fb160078363ffffffff61203e16565b90506000816001600160a01b03166370a08231306040518263ffffffff1660e01b8152600401610fe19190612c96565b60206040518083038186803b158015610ff957600080fd5b505afa15801561100d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110319190612b64565b9050600061103f8284611f0c565b505090508285858151811061105057fe5b6020026020010151600001906001600160a01b031690816001600160a01b0316815250508085858151811061108157fe5b60209081029190910181015101526110c96001600160a01b0384167f00000000000000000000000000000000000000000000000000000000000000008363ffffffff61205316565b505050806001019050610f96565b50600b805460ff191660021790556040517fd3a9a54f42cff4716bd20029772986d2943700c640107b8d69cc68b4bc9ce7e190611115908390612f46565b60405180910390a15050565b61112961201a565b6001600160a01b031661113a6114aa565b6001600160a01b0316146111605760405162461bcd60e51b81526004016105479061363a565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b7f000000000000000000000000000000000000000000000000000000000000000090565b6002600b5460ff1660028111156111e157fe5b146111fe5760405162461bcd60e51b81526004016105479061366f565b33600090815260046020526040902080546001600160a01b0316806112355760405162461bcd60e51b81526004016105479061345e565b6000611245836002015483611f0c565b50915050600081116112695760405162461bcd60e51b81526004016105479061356f565b6000600280850182815533835260046020526040909220855481546001600160a01b0319166001600160a01b0391909116178155600180870154908201559154910155831561144f576001600160a01b038083166000818152600660205260408082206002015490517fdd62ed3e00000000000000000000000000000000000000000000000000000000815293169290919063dd62ed3e906113119030908690600401612caa565b60206040518083038186803b15801561132957600080fd5b505afa15801561133d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113619190612b64565b905082811015611396576113968261137f858463ffffffff61207716565b6001600160a01b038716919063ffffffff61209f16565b6040517f2f4f21e20000000000000000000000000000000000000000000000000000000081526001600160a01b03831690632f4f21e2906113dd9033908790600401612d32565b600060405180830381600087803b1580156113f757600080fd5b505af115801561140b573d6000803e3d6000fd5b505050507f383794b9aafb90cacbb335ce5f4aa561c5825661912b31885636a3f1655a85e23384604051611440929190612d32565b60405180910390a15050611469565b6114696001600160a01b038316338363ffffffff61205316565b7f4d864ec082f3b5482c5fdcdcdd02a1c3c38ebd4e3944f441014c43678436186c33838360405161149c93929190612cc4565b60405180910390a150505050565b6000546001600160a01b031690565b600c54600d5460ff9091169082565b7f000000000000000000000000000000000000000000000000000000000000000081565b6001600b5460ff1660028111156114ff57fe5b1461151c5760405162461bcd60e51b8152600401610547906131b5565b61152461204a565b156115415760405162461bcd60e51b8152600401610547906131ec565b6115496126c6565b61155836849003840184612b03565b805160208201519192509061157460078363ffffffff611d6616565b6115905760405162461bcd60e51b8152600401610547906137b9565b600081116115b05760405162461bcd60e51b815260040161054790613884565b33600090815260046020526040902080546001600160a01b038481169116146115eb5760405162461bcd60e51b815260040161054790613223565b6002810154611600908363ffffffff61207716565b6002808301918255336000908152600460205260409020835481546001600160a01b0319166001600160a01b039182161782556001808601549083015592549101558381167f00000000000000000000000000000000000000000000000000000000000000009091161480156116735750845b15611727576040517f2e1a7d4d0000000000000000000000000000000000000000000000000000000081526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690632e1a7d4d906116dd908590600401613942565b600060405180830381600087803b1580156116f757600080fd5b505af115801561170b573d6000803e3d6000fd5b50611722925033915084905063ffffffff61215016565b611741565b6117416001600160a01b038416338463ffffffff61205316565b7fe44a37f0b4279b34d1afdaec22c63af159757929558ced7b82ca6552deccc1e43387876040516108b793929190612d05565b6060818067ffffffffffffffff8111801561178e57600080fd5b506040519080825280602002602001820160405280156117b8578160200160208202803683370190505b50915060005b81811015610e94576117f88585838181106117d557fe5b90506020020160208101906117ea91906127b5565b60079063ffffffff611d6616565b6118145760405162461bcd60e51b815260040161054790613603565b6006600086868481811061182457fe5b905060200201602081019061183991906127b5565b6001600160a01b039081168252602082019290925260400160002060010154845191169084908390811061186957fe5b6001600160a01b03909216602092830291909101909101526001016117be565b61189161201a565b6001600160a01b03166118a26114aa565b6001600160a01b0316146118c85760405162461bcd60e51b81526004016105479061363a565b8051600c805460ff19169115159190911790556020810151600d556040517f2cebd0cd952630971231c56fc3fa47c6f10b160cdf17c8956d6376a9d60d519a90611913908390613929565b60405180910390a150565b6001600160a01b038082166000908152600460205260408120600281015490549192909161195e916119519116836121ec565b839063ffffffff611d8416565b9392505050565b606060006119736007612033565b90508067ffffffffffffffff8111801561198c57600080fd5b506040519080825280602002602001820160405280156119b6578160200160208202803683370190505b50915060005b81811015611a01576119d560078263ffffffff61203e16565b8382815181106119e157fe5b6001600160a01b03909216602092830291909101909101526001016119bc565b505090565b6000611a10611e34565b905090565b60036020526000908152604090205481565b6060818067ffffffffffffffff81118015611a4157600080fd5b50604051908082528060200260200182016040528015611a6b578160200160208202803683370190505b50915060005b81811015610e9457611a888585838181106117d557fe5b611aa45760405162461bcd60e51b815260040161054790613603565b60066000611ab960078463ffffffff61203e16565b6001600160a01b0390811682526020820192909252604001600020600201548451911690849083908110611ae957fe5b6001600160a01b0390921660209283029190910190910152600101611a71565b611b1161201a565b6001600160a01b0316611b226114aa565b6001600160a01b031614611b485760405162461bcd60e51b81526004016105479061363a565b6001600160a01b038116611b6e5760405162461bcd60e51b815260040161054790613121565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b611bd161201a565b6001600160a01b0316611be26114aa565b6001600160a01b031614611c085760405162461bcd60e51b81526004016105479061363a565b8060005b81811015611ce757611c1c612746565b848483818110611c2857fe5b905060800201803603810190611c3e91906129bf565b8051909150611c559060079063ffffffff61201e16565b611c715760405162461bcd60e51b815260040161054790613291565b80516001600160a01b03908116600090815260066020908152604091829020845181549085166001600160a01b0319918216178255918501516001808301805492871692851692909217909155928501516002820180549190951692169190911790925560609092015160039091015501611c0c565b507f33f1b24b298d587fb4ebebe7a62493afe5b887fd273df28a24581a323a63f6a38383604051611d19929190612ece565b60405180910390a1505050565b60008084604051602001611d3a9190612c4c565b604051602081830303815290604052805190602001209050611d5d838583612346565b95945050505050565b6000611d7b836001600160a01b0384166123e3565b90505b92915050565b600082820183811015611d7b5760405162461bcd60e51b81526004016105479061317e565b611e2e846323b872dd60e01b858585604051602401611dca93929190612cc4565b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff00000000000000000000000000000000000000000000000000000000909316929092179091526123fb565b50505050565b600080611e416007612033565b905060005b81811015611a01576000611e6160078363ffffffff61203e16565b90506000816001600160a01b03166370a08231306040518263ffffffff1660e01b8152600401611e919190612c96565b60206040518083038186803b158015611ea957600080fd5b505afa158015611ebd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ee19190612b64565b9050611efd611ef083836121ec565b869063ffffffff611d8416565b94505050806001019050611e46565b600080806001600b5460ff166002811115611f2357fe5b1015611f415760405162461bcd60e51b81526004016105479061307c565b611f496126dd565b506001600160a01b0380851660009081526005602090815260408083208151606081018352815490951685526001808201549386019390935260029081015491850191909152549054611fb49190611fa8908a9063ffffffff61248a16565b9063ffffffff6124c416565b600254600154919250600091611fe79190611fa890611fda90839063ffffffff61207716565b8b9063ffffffff61248a16565b9050600061200a8460200151611fa886604001518661248a90919063ffffffff16565b9299919850919650945050505050565b3390565b6000611d7b836001600160a01b0384166124f6565b6000611d7e82612540565b6000611d7b8383612544565b600e5443101590565b6120728363a9059cbb60e01b8484604051602401611dca929190612d32565b505050565b6000828211156120995760405162461bcd60e51b8152600401610547906132c8565b50900390565b600061212f82856001600160a01b031663dd62ed3e30876040518363ffffffff1660e01b81526004016120d3929190612caa565b60206040518083038186803b1580156120eb57600080fd5b505afa1580156120ff573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121239190612b64565b9063ffffffff611d8416565b9050611e2e8463095ea7b360e01b8584604051602401611dca929190612d32565b804710156121705760405162461bcd60e51b815260040161054790613393565b6000826001600160a01b03168260405161218990612c93565b60006040518083038185875af1925050503d80600081146121c6576040519150601f19603f3d011682016040523d82523d6000602084013e6121cb565b606091505b50509050806120725760405162461bcd60e51b8152600401610547906132ff565b600080836001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561222857600080fd5b505afa15801561223c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122609190612bf9565b6001600160a01b038086166000908152600660205260408082206001015481517ffeaf968c000000000000000000000000000000000000000000000000000000008152915160ff9590951695509193919092169163feaf968c9160048083019260a0929190829003018186803b1580156122d957600080fd5b505afa1580156122ed573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123119190612ba8565b505050915050600061232282612589565b905061233c600a84900a611fa8878463ffffffff61248a16565b9695505050505050565b600081815b85518110156123d857600086828151811061236257fe5b602002602001015190508083116123a3578281604051602001612386929190612c69565b6040516020818303038152906040528051906020012092506123cf565b80836040516020016123b6929190612c69565b6040516020818303038152906040528051906020012092505b5060010161234b565b509092149392505050565b60009081526001919091016020526040902054151590565b6060612450826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166125af9092919063ffffffff16565b805190915015612072578080602001905181019061246e919061295e565b6120725760405162461bcd60e51b8152600401610547906137f0565b60008261249957506000611d7e565b828202828482816124a657fe5b0414611d7b5760405162461bcd60e51b8152600401610547906135a6565b60008082116124e55760405162461bcd60e51b815260040161054790613495565b8183816124ee57fe5b049392505050565b600061250283836123e3565b61253857508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155611d7e565b506000611d7e565b5490565b815460009082106125675760405162461bcd60e51b81526004016105479061301f565b82600001828154811061257657fe5b9060005260206000200154905092915050565b6000808212156125ab5760405162461bcd60e51b8152600401610547906134cc565b5090565b60606125be84846000856125c6565b949350505050565b6060824710156125e85760405162461bcd60e51b8152600401610547906133ca565b6125f185612687565b61260d5760405162461bcd60e51b815260040161054790613782565b60006060866001600160a01b0316858760405161262a9190612c77565b60006040518083038185875af1925050503d8060008114612667576040519150601f19603f3d011682016040523d82523d6000602084013e61266c565b606091505b509150915061267c82828661268d565b979650505050505050565b3b151590565b6060831561269c57508161195e565b8251156126ac5782518084602001fd5b8160405162461bcd60e51b81526004016105479190612fb5565b604080518082019091526000808252602082015290565b604051806060016040528060006001600160a01b0316815260200160008152602001600081525090565b6040518060c0016040528060006001600160a01b0316815260200160008152602001600081526020016000815260200160008152602001600081525090565b60408051608081018252600080825260208201819052918101829052606081019190915290565b80356001600160a01b0381168114611d7e57600080fd5b600060408284031215612795578081fd5b50919050565b805169ffffffffffffffffffff81168114611d7e57600080fd5b6000602082840312156127c6578081fd5b611d7b838361276d565b600080602083850312156127e2578081fd5b823567ffffffffffffffff808211156127f9578283fd5b81850186601f82011261280a578384fd5b803592508183111561281a578384fd5b866020808502830101111561282d578384fd5b60200196919550909350505050565b6000806000808486036080811215612852578283fd5b853567ffffffffffffffff80821115612869578485fd5b81880189601f82011261287a578586fd5b803592508183111561288a578586fd5b89602060608502830101111561289e578586fd5b6020019650909450506040601f19820112156128b8578283fd5b506128c36040613961565b60208681013582526040870135908201529396929550929360600135925050565b600080602083850312156128f6578182fd5b823567ffffffffffffffff8082111561290d578384fd5b81850186601f82011261291e578485fd5b803592508183111561292e578485fd5b86602060808502830101111561282d578485fd5b600060208284031215612953578081fd5b8135611d7b816139ec565b60006020828403121561296f578081fd5b8151611d7b816139ec565b60006060828403121561298b578081fd5b6129956060613961565b82356129a0816139d4565b8152602083810135908201526040928301359281019290925250919050565b6000608082840312156129d0578081fd5b6129da6080613961565b6129e4848461276d565b81526129f3846020850161276d565b6020820152612a05846040850161276d565b6040820152606083013560608201528091505092915050565b60008060608385031215612a30578182fd5b612a3a8484612784565b9150604083013567ffffffffffffffff811115612a55578182fd5b80840185601f820112612a66578283fd5b80359150612a7b612a7683613988565b613961565b808382526020808301925080840189828388028701011115612a9b578687fd5b8694505b85851015612abd578035845260019490940193928101928101612a9f565b50959890975095505050505050565b60008060608385031215612ade578182fd5b612ae88484612784565b91506040830135612af8816139ec565b809150509250929050565b600060408284031215612b14578081fd5b612b1e6040613961565b8235612b29816139d4565b81526020928301359281019290925250919050565b600060408284031215612b4f578081fd5b612b596040613961565b8235612b29816139ec565b600060208284031215612b75578081fd5b5051919050565b60008060408385031215612b8e578182fd5b82359150612b9f846020850161276d565b90509250929050565b600080600080600060a08688031215612bbf578283fd5b612bc9878761279b565b9450602086015193506040860151925060608601519150612bed876080880161279b565b90509295509295909350565b600060208284031215612c0a578081fd5b815160ff81168114611d7b578182fd5b6001600160a01b03169052565b602081016001600160a01b03612c3d828461276d565b16835280356020840152505050565b60609190911b6bffffffffffffffffffffffff1916815260140190565b918252602082015260400190565b60008251612c898184602087016139a8565b9190910192915050565b90565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03831681526060810161195e6020830184612c27565b6001600160a01b038416815260808101612d226020830185612c27565b8215156060830152949350505050565b6001600160a01b03929092168252602082015260400190565b6020808252825182820181905260009190848201906040850190845b81811015612d8c5783516001600160a01b031683529284019291840191600101612d67565b50909695505050505050565b602080825282518282018190526000919060409081850190868401855b82811015612e0a578151612dca858251612c1a565b80870151858801528581015186860152606080820151908601526080808201519086015260a0908101519085015260c09093019290850190600101612db5565b5091979650505050505050565b6020808252818101839052600090604080840186845b87811015612e6c578482016001600160a01b03612e4a828561276d565b1684523585840152818401358484015260609283019290910190600101612e2d565b5090979650505050505050565b602080825282518282018190526000919060409081850190868401855b82811015612e0a57815180516001600160a01b0316855286810151878601528501518585015260609093019290850190600101612e96565b6020808252818101839052600090604080840186845b87811015612e6c578482016001600160a01b0380612f02838661276d565b1685528135612f10816139d4565b811685880152838601359150612f25826139d4565b16838501526060828101359084015260809283019290910190600101612ee4565b602080825282518282018190526000919060409081850190868401855b82811015612e0a57815180516001600160a01b03168552860151868501529284019290850190600101612f63565b9115158252602082015260400190565b6020810160038310612faf57fe5b91905290565b6000602082528251806020840152612fd48160408501602087016139a8565b601f01601f19169190910160400192915050565b60208082526015908201527f43555252454e545f53544147455f494e56414c49440000000000000000000000604082015260600190565b60208082526022908201527f456e756d657261626c655365743a20696e646578206f7574206f6620626f756e60408201527f6473000000000000000000000000000000000000000000000000000000000000606082015260800190565b60208082526013908201527f52415445535f4e4f545f5055424c495348454400000000000000000000000000604082015260600190565b6020808252600f908201527f4445504f534954535f4c4f434b45440000000000000000000000000000000000604082015260600190565b60208082526011908201527f494e56414c49445f4d53475f56414c5545000000000000000000000000000000604082015260600190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201527f6464726573730000000000000000000000000000000000000000000000000000606082015260800190565b6020808252601b908201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604082015260600190565b60208082526016908201527f5749544844524157535f4e4f545f414343455054454400000000000000000000604082015260600190565b60208082526011908201527f5749544844524157535f45585049524544000000000000000000000000000000604082015260600190565b6020808252600d908201527f494e56414c49445f544f4b454e00000000000000000000000000000000000000604082015260600190565b60208082526015908201527f4445504f534954535f4e4f545f41434345505445440000000000000000000000604082015260600190565b60208082526008908201527f4144445f4641494c000000000000000000000000000000000000000000000000604082015260600190565b6020808252601e908201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604082015260600190565b6020808252603a908201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260408201527f6563697069656e74206d61792068617665207265766572746564000000000000606082015260800190565b60208082526012908201527f4d41585f4c494d49545f45584345454445440000000000000000000000000000604082015260600190565b6020808252601d908201527f416464726573733a20696e73756666696369656e742062616c616e6365000000604082015260600190565b60208082526026908201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60408201527f722063616c6c0000000000000000000000000000000000000000000000000000606082015260800190565b60208082526011908201527f494e56414c49445f4e554d455241544f52000000000000000000000000000000604082015260600190565b60208082526007908201527f4e4f5f4441544100000000000000000000000000000000000000000000000000604082015260600190565b6020808252601a908201527f536166654d6174683a206469766973696f6e206279207a65726f000000000000604082015260600190565b6020808252818101527f53616665436173743a2076616c7565206d75737420626520706f736974697665604082015260600190565b60208082526006908201527f4e4f5f4554480000000000000000000000000000000000000000000000000000604082015260600190565b60208082526011908201527f52415445535f414c52454144595f534554000000000000000000000000000000604082015260600190565b6020808252600f908201527f4e4f5448494e475f544f5f4d4f56450000000000000000000000000000000000604082015260600190565b60208082526021908201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f60408201527f7700000000000000000000000000000000000000000000000000000000000000606082015260800190565b60208082526011908201527f544f4b454e5f554e535550504f52544544000000000000000000000000000000604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526010908201527f4e4f545f53595354454d5f46494e414c00000000000000000000000000000000604082015260600190565b6020808252600c908201527f4d495353494e475f524154450000000000000000000000000000000000000000604082015260600190565b60208082526013908201527f494e56414c49445f44454e4f4d494e41544f5200000000000000000000000000604082015260600190565b60208082526010908201527f524154455f414c52454144595f53455400000000000000000000000000000000604082015260600190565b60208082526010908201527f494e56414c49445f4455524154494f4e00000000000000000000000000000000604082015260600190565b6020808252601d908201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604082015260600190565b60208082526011908201527f554e535550504f525445445f544f4b454e000000000000000000000000000000604082015260600190565b6020808252602a908201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60408201527f6f74207375636365656400000000000000000000000000000000000000000000606082015260800190565b60208082526015908201527f53494e474c455f41535345545f4445504f534954530000000000000000000000604082015260600190565b6020808252600e908201527f494e56414c49445f414d4f554e54000000000000000000000000000000000000604082015260600190565b60208082526012908201527f4f4e4c595f5452414e534645525f4f4e43450000000000000000000000000000604082015260600190565b6020808252600d908201527f50524f4f465f494e56414c494400000000000000000000000000000000000000604082015260600190565b8151151581526020918201519181019190915260400190565b90815260200190565b9283526020830191909152604082015260600190565b60405181810167ffffffffffffffff8111828210171561398057600080fd5b604052919050565b600067ffffffffffffffff82111561399e578081fd5b5060209081020190565b60005b838110156139c35781810151838201526020016139ab565b83811115611e2e5750506000910152565b6001600160a01b03811681146139e957600080fd5b50565b80151581146139e957600080fdfea264697066735822122042f5a098aa8f777cfaf405a00447c56bf641f4488a065ee1a03bae677736a53464736f6c634300060b0033";

export class DefiRound__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _WETH: string,
    _treasury: string,
    _maxTotalValue: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<DefiRound> {
    return super.deploy(
      _WETH,
      _treasury,
      _maxTotalValue,
      overrides || {}
    ) as Promise<DefiRound>;
  }
  getDeployTransaction(
    _WETH: string,
    _treasury: string,
    _maxTotalValue: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _WETH,
      _treasury,
      _maxTotalValue,
      overrides || {}
    );
  }
  attach(address: string): DefiRound {
    return super.attach(address) as DefiRound;
  }
  connect(signer: Signer): DefiRound__factory {
    return super.connect(signer) as DefiRound__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DefiRoundInterface {
    return new utils.Interface(_abi) as DefiRoundInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DefiRound {
    return new Contract(address, _abi, signerOrProvider) as DefiRound;
  }
}
