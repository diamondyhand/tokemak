/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { OnChainVoteL1, OnChainVoteL1Interface } from "../OnChainVoteL1";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "fxStateSender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "destinationOnL2",
        type: "address",
      },
    ],
    name: "DestinationsSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "eventSendSet",
        type: "bool",
      },
    ],
    name: "EventSendSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [],
    name: "_eventSend",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "destinations",
    outputs: [
      {
        internalType: "contract IFxStateSender",
        name: "fxStateSender",
        type: "address",
      },
      {
        internalType: "address",
        name: "destinationOnL2",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_fxStateSender",
        type: "address",
      },
      {
        internalType: "address",
        name: "_destinationOnL2",
        type: "address",
      },
    ],
    name: "setDestinations",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_eventSendSet",
        type: "bool",
      },
    ],
    name: "setEventSend",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "account",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "voteSessionKey",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "chainId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalVotes",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "bytes32",
                name: "reactorKey",
                type: "bytes32",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
            ],
            internalType: "struct UserVoteAllocationItem[]",
            name: "allocations",
            type: "tuple[]",
          },
        ],
        internalType: "struct UserVotePayload",
        name: "userVotePayload",
        type: "tuple",
      },
    ],
    name: "vote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506116e3806100206000396000f3fe608060405234801561001057600080fd5b50600436106100d45760003560e01c80638129fc1c116100815780638da5cb5b1161005b5780638da5cb5b1461015d578063e912b5ee14610172578063f2fde38b14610185576100d4565b80638129fc1c146101375780638456cb591461013f5780638d17b38314610147576100d4565b8063715018a6116100b2578063715018a6146101145780637d6eae721461011c57806380e702da1461012f576100d4565b80631090c44f146100d95780633f4ba83a146100ee5780635c975abb146100f6575b600080fd5b6100ec6100e73660046112f4565b610198565b005b6100ec610294565b6100fe610346565b60405161010b919061148e565b60405180910390f35b6100ec61034f565b6100ec61012a3660046112a2565b610466565b6100fe61063b565b6100ec610644565b6100ec610768565b61014f610818565b60405161010b929190611430565b61016561083b565b60405161010b919061140f565b6100ec6101803660046112d4565b610857565b6100ec610193366004611281565b6109b5565b6101a0610346565b1561020c57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f5061757361626c653a2070617573656400000000000000000000000000000000604482015290519081900360640190fd5b805173ffffffffffffffffffffffffffffffffffffffff163314610265576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025c90611557565b60405180910390fd5b7f566f7465000000000000000000000000000000000000000000000000000000006102908183610b57565b5050565b61029c610d11565b73ffffffffffffffffffffffffffffffffffffffff166102ba61083b565b73ffffffffffffffffffffffffffffffffffffffff161461033c57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b610344610d15565b565b60655460ff1690565b610357610d11565b73ffffffffffffffffffffffffffffffffffffffff1661037561083b565b73ffffffffffffffffffffffffffffffffffffffff16146103f757604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b60335460405160009173ffffffffffffffffffffffffffffffffffffffff16907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3603380547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055565b61046e610d11565b73ffffffffffffffffffffffffffffffffffffffff1661048c61083b565b73ffffffffffffffffffffffffffffffffffffffff161461050e57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b73ffffffffffffffffffffffffffffffffffffffff821661055b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025c906114b2565b73ffffffffffffffffffffffffffffffffffffffff81166105a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025c906114b2565b6098805473ffffffffffffffffffffffffffffffffffffffff8085167fffffffffffffffffffffffff00000000000000000000000000000000000000009283161790925560998054928416929091169190911790556040517fdd38196ae61206d6b7c944929ca054465eec5bbec09f0d942bd3f5569601e4e59061062f9084908490611430565b60405180910390a15050565b60975460ff1681565b600054610100900460ff168061065d575061065d610e03565b8061066b575060005460ff16155b6106c0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180611680602e913960400191505060405180910390fd5b600054610100900460ff1615801561072657600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff909116610100171660011790555b61072e610e14565b610736610fa4565b801561076557600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff1690555b50565b610770610d11565b73ffffffffffffffffffffffffffffffffffffffff1661078e61083b565b73ffffffffffffffffffffffffffffffffffffffff161461081057604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6103446110df565b60985460995473ffffffffffffffffffffffffffffffffffffffff918216911682565b60335473ffffffffffffffffffffffffffffffffffffffff1690565b61085f610d11565b73ffffffffffffffffffffffffffffffffffffffff1661087d61083b565b73ffffffffffffffffffffffffffffffffffffffff16146108ff57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b60995473ffffffffffffffffffffffffffffffffffffffff1661094e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025c906114e9565b609780547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00168215151790556040517fe7123337c95757f19d69c6dcdd015734e22a7750c921506a2d02f487678e8aea906109aa90839061148e565b60405180910390a150565b6109bd610d11565b73ffffffffffffffffffffffffffffffffffffffff166109db61083b565b73ffffffffffffffffffffffffffffffffffffffff1614610a5d57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b73ffffffffffffffffffffffffffffffffffffffff8116610ac9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602681526020018061165a6026913960400191505060405180910390fd5b60335460405173ffffffffffffffffffffffffffffffffffffffff8084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3603380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60975460ff16156102905760985473ffffffffffffffffffffffffffffffffffffffff16610bb1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025c90611520565b60995473ffffffffffffffffffffffffffffffffffffffff16610c00576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025c90611520565b60008282604051602001610c14919061158e565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815290829052610c509291602001611499565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152908290526098546099547fb472047700000000000000000000000000000000000000000000000000000000845291935073ffffffffffffffffffffffffffffffffffffffff9081169263b472047792610cda9216908590600401611457565b600060405180830381600087803b158015610cf457600080fd5b505af1158015610d08573d6000803e3d6000fd5b50505050505050565b3390565b610d1d610346565b610d8857604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f5061757361626c653a206e6f7420706175736564000000000000000000000000604482015290519081900360640190fd5b606580547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa610dd9610d11565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190a1565b6000610e0e306111a7565b15905090565b600054610100900460ff1680610e2d5750610e2d610e03565b80610e3b575060005460ff16155b610e90576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180611680602e913960400191505060405180910390fd5b600054610100900460ff16158015610ef657600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff909116610100171660011790555b6000610f00610d11565b603380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff8316908117909155604051919250906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350801561076557600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff16905550565b600054610100900460ff1680610fbd5750610fbd610e03565b80610fcb575060005460ff16155b611020576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180611680602e913960400191505060405180910390fd5b600054610100900460ff1615801561108657600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff909116610100171660011790555b606580547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055801561076557600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff16905550565b6110e7610346565b1561115357604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f5061757361626c653a2070617573656400000000000000000000000000000000604482015290519081900360640190fd5b606580547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610dd9610d11565b803b15155b919050565b803573ffffffffffffffffffffffffffffffffffffffff811681146111ac57600080fd5b600082601f8301126111e5578081fd5b8135602067ffffffffffffffff808311156111fc57fe5b6112098283850201611635565b838152828101908684016040808702890186018a1015611227578788fd5b875b878110156112725781838c03121561123f578889fd5b8151828101818110888211171561125257fe5b835283358152878401358882015285529386019391810191600101611229565b50919998505050505050505050565b600060208284031215611292578081fd5b61129b826111b1565b9392505050565b600080604083850312156112b4578081fd5b6112bd836111b1565b91506112cb602084016111b1565b90509250929050565b6000602082840312156112e5578081fd5b8135801515811461129b578182fd5b600060208284031215611305578081fd5b813567ffffffffffffffff8082111561131c578283fd5b9083019060c0828603121561132f578283fd5b60405160c08101818110838211171561134457fe5b604052611350836111b1565b81526020830135602082015260408301356040820152606083013560608201526080830135608082015260a08301358281111561138b578485fd5b611397878286016111d5565b60a08301525095945050505050565b60008151808452815b818110156113cb576020818501810151868301820152016113af565b818111156113dc5782602083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b73ffffffffffffffffffffffffffffffffffffffff92831681529116602082015260400190565b600073ffffffffffffffffffffffffffffffffffffffff841682526040602083015261148660408301846113a6565b949350505050565b901515815260200190565b60008382526040602083015261148660408301846113a6565b6020808252600f908201527f494e56414c49445f414444524553530000000000000000000000000000000000604082015260600190565b60208082526014908201527f44455354494e4154494f4e535f4e4f545f534554000000000000000000000000604082015260600190565b6020808252600f908201527f414444524553535f4e4f545f5345540000000000000000000000000000000000604082015260600190565b6020808252600f908201527f494e56414c49445f4143434f554e540000000000000000000000000000000000604082015260600190565b6000602080835260e0830173ffffffffffffffffffffffffffffffffffffffff85511682850152818501516040818187015280870151606087015260608701516080870152608087015160a087015260a0870151915060c0808701528282518085526101008801915085840194508693505b808410156116295784518051835286015186830152938501936001939093019290820190611600565b50979650505050505050565b60405181810167ffffffffffffffff8111828210171561165157fe5b60405291905056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564a26469706673582212204dfce87abce05b570a96f3e395f3676aa71b55e4941b194150763e0661a7400764736f6c63430007060033";

export class OnChainVoteL1__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<OnChainVoteL1> {
    return super.deploy(overrides || {}) as Promise<OnChainVoteL1>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): OnChainVoteL1 {
    return super.attach(address) as OnChainVoteL1;
  }
  connect(signer: Signer): OnChainVoteL1__factory {
    return super.connect(signer) as OnChainVoteL1__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OnChainVoteL1Interface {
    return new utils.Interface(_abi) as OnChainVoteL1Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OnChainVoteL1 {
    return new Contract(address, _abi, signerOrProvider) as OnChainVoteL1;
  }
}
