/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  BalancerController,
  BalancerControllerInterface,
} from "../BalancerController";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "manager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_accessControl",
        type: "address",
      },
      {
        internalType: "address",
        name: "_addressRegistry",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ADD_LIQUIDITY_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MISC_OPERATION_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "REMOVE_LIQUIDITY_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "accessControl",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "addressRegistry",
    outputs: [
      {
        internalType: "contract IAddressRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "poolAddress",
        type: "address",
      },
      {
        internalType: "contract IERC20[]",
        name: "tokens",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "deploy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "manager",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "poolAddress",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6101406040526040516200001390620001ae565b60405190819003812060e0526200002a9062000185565b604051908190038120610100526200004290620001cc565b604051908190039020610120523480156200005c57600080fd5b5060405162001931380380620019318339810160408190526200007f9162000132565b8282826001600160a01b038316620000b45760405162461bcd60e51b8152600401620000ab90620001f5565b60405180910390fd5b6001600160a01b038216620000dd5760405162461bcd60e51b8152600401620000ab90620001f5565b6001600160a01b038116620001065760405162461bcd60e51b8152600401620000ab90620001f5565b6001600160601b0319606093841b811660805291831b821660a05290911b1660c0525062000237915050565b60008060006060848603121562000147578283fd5b835162000154816200021e565b602085015190935062000167816200021e565b60408501519092506200017a816200021e565b809150509250925092565b7f52454d4f56455f4c49515549444954595f524f4c450000000000000000000000815260150190565b714144445f4c49515549444954595f524f4c4560701b815260120190565b7f4d4953435f4f5045524154494f4e5f524f4c4500000000000000000000000000815260130190565b6020808252600f908201526e494e56414c49445f4144445245535360881b604082015260600190565b6001600160a01b03811681146200023457600080fd5b50565b60805160601c60a05160601c60c05160601c60e0516101005161012051611684620002ad6000398061059f5250806102095280610a0c52508061010a528061064d52508061072c5280610a3052508061012e52806101dc5280610620525080610152528061017f52806105cc52506116846000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c806361bea27f1161005b57806361bea27f146100dd57806378215d13146100e55780637e841d54146100f8578063f3ad65f41461010057610088565b80630f967dd61461008d57806313007d55146100ab578063481c6a75146100c05780634bb78b14146100c8575b600080fd5b610095610108565b6040516100a29190611251565b60405180910390f35b6100b361012c565b6040516100a2919061120a565b6100b3610150565b6100db6100d6366004611007565b610174565b005b61009561059d565b6100db6100f3366004610f5e565b6105c1565b610095610a0a565b6100b3610a2e565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146101c55760405162461bcd60e51b81526004016101bc906113dd565b60405180910390fd5b604051632474521560e21b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906391d1485490610233907f000000000000000000000000000000000000000000000000000000000000000090339060040161125a565b60206040518083038186803b15801561024b57600080fd5b505afa15801561025f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061028391906110fb565b61029f5760405162461bcd60e51b81526004016101bc906113a6565b600060606102af8385018561114f565b9150915060008590506060816001600160a01b031663be3bbd2e6040518163ffffffff1660e01b815260040160006040518083038186803b1580156102f357600080fd5b505afa158015610307573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261032f919081019061105a565b90506060815167ffffffffffffffff8111801561034b57600080fd5b50604051908082528060200260200182016040528015610375578160200160208202803683370190505b50905060005b82518110156104325782818151811061039057fe5b60200260200101516001600160a01b03166370a08231306040518263ffffffff1660e01b81526004016103c3919061120a565b60206040518083038186803b1580156103db57600080fd5b505afa1580156103ef573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104139190611137565b82828151811061041f57fe5b602090810291909101015260010161037b565b5061043e888987610a52565b6040517fb02f0b730000000000000000000000000000000000000000000000000000000081526001600160a01b0384169063b02f0b7390610485908890889060040161154d565b600060405180830381600087803b15801561049f57600080fd5b505af11580156104b3573d6000803e3d6000fd5b506000925050505b82518110156105925760008382815181106104d257fe5b60200260200101516001600160a01b03166370a08231306040518263ffffffff1660e01b8152600401610505919061120a565b60206040518083038186803b15801561051d57600080fd5b505afa158015610531573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105559190611137565b905082828151811061056357fe5b602002602001015181116105895760405162461bcd60e51b81526004016101bc90611482565b506001016104bb565b505050505050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146106095760405162461bcd60e51b81526004016101bc906113dd565b604051632474521560e21b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906391d1485490610677907f000000000000000000000000000000000000000000000000000000000000000090339060040161125a565b60206040518083038186803b15801561068f57600080fd5b505afa1580156106a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106c791906110fb565b6106e35760405162461bcd60e51b81526004016101bc9061136f565b8483146107025760405162461bcd60e51b81526004016101bc90611516565b8461071f5760405162461bcd60e51b81526004016101bc90611414565b60005b8581101561084a577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663eb6b264088888481811061076557fe5b905060200201602081019061077a919061111b565b60006040518363ffffffff1660e01b8152600401610799929190611238565b60206040518083038186803b1580156107b157600080fd5b505afa1580156107c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107e991906110fb565b6108055760405162461bcd60e51b81526004016101bc906112db565b61084287878381811061081457fe5b9050602002016020810190610829919061111b565b8987878581811061083657fe5b90506020020135610a52565b600101610722565b506040516370a0823160e01b815287906000906001600160a01b038316906370a082319061087c90309060040161120a565b60206040518083038186803b15801561089457600080fd5b505afa1580156108a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108cc9190611137565b9050600060606108de8587018761114f565b6040517f4f69c0d400000000000000000000000000000000000000000000000000000000815291935091506001600160a01b03851690634f69c0d49061092a908590859060040161154d565b600060405180830381600087803b15801561094457600080fd5b505af1158015610958573d6000803e3d6000fd5b50506040516370a0823160e01b8152600092506001600160a01b03871691506370a082319061098b90309060040161120a565b60206040518083038186803b1580156109a357600080fd5b505afa1580156109b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109db9190611137565b90508381116109fc5760405162461bcd60e51b81526004016101bc90611482565b505050505050505050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b604051636eb1769f60e11b81526000906001600160a01b0385169063dd62ed3e90610a83903090879060040161121e565b60206040518083038186803b158015610a9b57600080fd5b505afa158015610aaf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ad39190611137565b90508015610af557610af56001600160a01b038516848363ffffffff610b1516565b610b0f6001600160a01b038516848463ffffffff610c4416565b50505050565b6000610bbf8260405180606001604052806029815260200161162660299139604051636eb1769f60e11b81526001600160a01b0388169063dd62ed3e90610b629030908a9060040161121e565b60206040518083038186803b158015610b7a57600080fd5b505afa158015610b8e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bb29190611137565b919063ffffffff610cd416565b9050610b0f8463095ea7b360e01b8584604051602401610be0929190611238565b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152610d05565b6000610bbf82856001600160a01b031663dd62ed3e30876040518363ffffffff1660e01b8152600401610c7892919061121e565b60206040518083038186803b158015610c9057600080fd5b505afa158015610ca4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cc89190611137565b9063ffffffff610d9916565b60008184841115610cf85760405162461bcd60e51b81526004016101bc9190611271565b50508183035b9392505050565b6060610d5a826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610dbe9092919063ffffffff16565b805190915015610d945780806020019051810190610d7891906110fb565b610d945760405162461bcd60e51b81526004016101bc906114b9565b505050565b600082820183811015610cfe5760405162461bcd60e51b81526004016101bc906112a4565b6060610dcd8484600085610dd5565b949350505050565b606082471015610df75760405162461bcd60e51b81526004016101bc90611312565b610e0085610e96565b610e1c5760405162461bcd60e51b81526004016101bc9061144b565b60006060866001600160a01b03168587604051610e3991906111ee565b60006040518083038185875af1925050503d8060008114610e76576040519150601f19603f3d011682016040523d82523d6000602084013e610e7b565b606091505b5091509150610e8b828286610e9c565b979650505050505050565b3b151590565b60608315610eab575081610cfe565b825115610ebb5782518084602001fd5b8160405162461bcd60e51b81526004016101bc9190611271565b60008083601f840112610ee6578081fd5b50813567ffffffffffffffff811115610efd578182fd5b6020830191508360208083028501011115610f1757600080fd5b9250929050565b60008083601f840112610f2f578182fd5b50813567ffffffffffffffff811115610f46578182fd5b602083019150836020828501011115610f1757600080fd5b60008060008060008060006080888a031215610f78578283fd5b8735610f838161160d565b9650602088013567ffffffffffffffff80821115610f9f578485fd5b610fab8b838c01610ed5565b909850965060408a0135915080821115610fc3578485fd5b610fcf8b838c01610ed5565b909650945060608a0135915080821115610fe7578384fd5b50610ff48a828b01610f1e565b989b979a50959850939692959293505050565b60008060006040848603121561101b578283fd5b83356110268161160d565b9250602084013567ffffffffffffffff811115611041578283fd5b61104d86828701610f1e565b9497909650939450505050565b6000602080838503121561106c578182fd5b825167ffffffffffffffff811115611082578283fd5b80840185601f820112611093578384fd5b805191506110a86110a3836115c1565b61159a565b82815283810190828501858502840186018910156110c4578687fd5b8693505b848410156110ef5780516110db8161160d565b8352600193909301929185019185016110c8565b50979650505050505050565b60006020828403121561110c578081fd5b81518015158114610cfe578182fd5b60006020828403121561112c578081fd5b8135610cfe8161160d565b600060208284031215611148578081fd5b5051919050565b60008060408385031215611161578182fd5b8235915060208084013567ffffffffffffffff81111561117f578283fd5b80850186601f820112611190578384fd5b803591506111a06110a3836115c1565b82815283810190828501858502840186018a10156111bc578687fd5b8693505b848410156111de5780358352600193909301929185019185016111c0565b5080955050505050509250929050565b600082516112008184602087016115e1565b9190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b03929092168252602082015260400190565b90815260200190565b9182526001600160a01b0316602082015260400190565b60006020825282518060208401526112908160408501602087016115e1565b601f01601f19169190910160400192915050565b6020808252601b908201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604082015260600190565b6020808252600d908201527f494e56414c49445f544f4b454e00000000000000000000000000000000000000604082015260600190565b60208082526026908201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60408201527f722063616c6c0000000000000000000000000000000000000000000000000000606082015260800190565b60208082526016908201527f4e4f545f4144445f4c49515549444954595f524f4c4500000000000000000000604082015260600190565b60208082526019908201527f4e4f545f52454d4f56455f4c49515549444954595f524f4c4500000000000000604082015260600190565b60208082526013908201527f4e4f545f4d414e414745525f4144445245535300000000000000000000000000604082015260600190565b6020808252601b908201527f544f4b454e535f414d4f554e54535f4e4f545f50524f56494445440000000000604082015260600190565b6020808252601d908201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604082015260600190565b6020808252600d908201527f4d5553545f494e43524541534500000000000000000000000000000000000000604082015260600190565b6020808252602a908201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60408201527f6f74207375636365656400000000000000000000000000000000000000000000606082015260800190565b6020808252601c908201527f544f4b454e5f414d4f554e54535f434f554e545f4d49534d4154434800000000604082015260600190565b60006040820184835260206040818501528185518084526060860191508287019350845b8181101561158d57845183529383019391830191600101611571565b5090979650505050505050565b60405181810167ffffffffffffffff811182821017156115b957600080fd5b604052919050565b600067ffffffffffffffff8211156115d7578081fd5b5060209081020190565b60005b838110156115fc5781810151838201526020016115e4565b83811115610b0f5750506000910152565b6001600160a01b038116811461162257600080fd5b5056fe5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa264697066735822122048d053ce2924ef39089febd22eec0b7827711db19333210a46d0f931dc32375664736f6c634300060b0033";

export class BalancerController__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    manager: string,
    _accessControl: string,
    _addressRegistry: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BalancerController> {
    return super.deploy(
      manager,
      _accessControl,
      _addressRegistry,
      overrides || {}
    ) as Promise<BalancerController>;
  }
  getDeployTransaction(
    manager: string,
    _accessControl: string,
    _addressRegistry: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      manager,
      _accessControl,
      _addressRegistry,
      overrides || {}
    );
  }
  attach(address: string): BalancerController {
    return super.attach(address) as BalancerController;
  }
  connect(signer: Signer): BalancerController__factory {
    return super.connect(signer) as BalancerController__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BalancerControllerInterface {
    return new utils.Interface(_abi) as BalancerControllerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BalancerController {
    return new Contract(address, _abi, signerOrProvider) as BalancerController;
  }
}
