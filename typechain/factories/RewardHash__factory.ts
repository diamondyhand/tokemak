/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { RewardHash, RewardHashInterface } from "../RewardHash";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "cycleIndex",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "latestClaimableHash",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "cycleHash",
        type: "string",
      },
    ],
    name: "CycleHashAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "cycleHashes",
    outputs: [
      {
        internalType: "string",
        name: "latestClaimable",
        type: "string",
      },
      {
        internalType: "string",
        name: "cycle",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "latestCycleIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "latestClaimableIpfsHash",
        type: "string",
      },
      {
        internalType: "string",
        name: "cycleIpfsHash",
        type: "string",
      },
    ],
    name: "setCycleHashes",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060006100246001600160e01b0361007316565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350610077565b3390565b61090d806100866000396000f3fe608060405234801561001057600080fd5b50600436106100725760003560e01c8063e654e4f511610050578063e654e4f5146100b4578063f2fde38b146100c7578063fb326dd3146100da57610072565b8063715018a6146100775780638da5cb5b14610081578063af4b2e211461009f575b600080fd5b61007f6100fb565b005b61008961019a565b6040516100969190610753565b60405180910390f35b6100a76101aa565b6040516100969190610895565b61007f6100c2366004610667565b6101b0565b61007f6100d5366004610621565b610337565b6100ed6100e836600461064f565b610404565b604051610096929190610767565b61010361053e565b6001600160a01b031661011461019a565b6001600160a01b0316146101435760405162461bcd60e51b815260040161013a90610829565b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a36000805473ffffffffffffffffffffffffffffffffffffffff19169055565b6000546001600160a01b03165b90565b60025481565b6101b861053e565b6001600160a01b03166101c961019a565b6001600160a01b0316146101ef5760405162461bcd60e51b815260040161013a90610829565b8261020c5760405162461bcd60e51b815260040161013a9061085e565b806102295760405162461bcd60e51b815260040161013a906107f2565b6040805160606020601f87018190040282018101835291810185815290918291908790879081908501838280828437600092019190915250505090825250604080516020601f8601819004810282018101909252848152918101919085908590819084018382808284376000920182905250939094525050878152600160209081526040909120835180519193506102c5928492910190610542565b5060208281015180516102de9260018501920190610542565b5090505060025485106102f15760028590555b7f51ef2a34d6e0c28564f5123563ad6e81123895cb5125d334d75563b49ce76303858585858560405161032895949392919061089e565b60405180910390a15050505050565b61033f61053e565b6001600160a01b031661035061019a565b6001600160a01b0316146103765760405162461bcd60e51b815260040161013a90610829565b6001600160a01b03811661039c5760405162461bcd60e51b815260040161013a90610795565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b60016020818152600092835260409283902080548451600294821615610100026000190190911693909304601f81018390048302840183019094528383529283918301828280156104965780601f1061046b57610100808354040283529160200191610496565b820191906000526020600020905b81548152906001019060200180831161047957829003601f168201915b505050505090806001018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156105345780601f1061050957610100808354040283529160200191610534565b820191906000526020600020905b81548152906001019060200180831161051757829003601f168201915b5050505050905082565b3390565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061058357805160ff19168380011785556105b0565b828001600101855582156105b0579182015b828111156105b0578251825591602001919060010190610595565b506105bc9291506105c0565b5090565b6101a791905b808211156105bc57600081556001016105c6565b60008083601f8401126105eb578182fd5b50813567ffffffffffffffff811115610602578182fd5b60208301915083602082850101111561061a57600080fd5b9250929050565b600060208284031215610632578081fd5b81356001600160a01b0381168114610648578182fd5b9392505050565b600060208284031215610660578081fd5b5035919050565b60008060008060006060868803121561067e578081fd5b85359450602086013567ffffffffffffffff8082111561069c578283fd5b6106a889838a016105da565b909650945060408801359150808211156106c0578283fd5b506106cd888289016105da565b969995985093965092949392505050565b60008284528282602086013780602084860101526020601f19601f85011685010190509392505050565b60008151808452815b8181101561072d57602081850181015186830182015201610711565b8181111561073e5782602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b0391909116815260200190565b60006040825261077a6040830185610708565b828103602084015261078c8185610708565b95945050505050565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201527f6464726573730000000000000000000000000000000000000000000000000000606082015260800190565b60208082526015908201527f496e76616c6964206379636c6549706673486173680000000000000000000000604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601f908201527f496e76616c6964206c6174657374436c61696d61626c65497066734861736800604082015260600190565b90815260200190565b6000868252606060208301526108b86060830186886106de565b82810360408401526108cb8185876106de565b9897505050505050505056fea26469706673582212209dd88f33a269eab8f425d4c1bc562d1f22c991845eab010925a4e604b8873a9a64736f6c634300060b0033";

export class RewardHash__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<RewardHash> {
    return super.deploy(overrides || {}) as Promise<RewardHash>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): RewardHash {
    return super.attach(address) as RewardHash;
  }
  connect(signer: Signer): RewardHash__factory {
    return super.connect(signer) as RewardHash__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RewardHashInterface {
    return new utils.Interface(_abi) as RewardHashInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RewardHash {
    return new Contract(address, _abi, signerOrProvider) as RewardHash;
  }
}
