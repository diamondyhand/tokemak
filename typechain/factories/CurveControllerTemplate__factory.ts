/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  CurveControllerTemplate,
  CurveControllerTemplateInterface,
} from "../CurveControllerTemplate";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_manager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_accessControl",
        type: "address",
      },
      {
        internalType: "address",
        name: "_addressRegistry",
        type: "address",
      },
      {
        internalType: "contract IAddressProvider",
        name: "_curveAddressProvider",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ADD_LIQUIDITY_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MISC_OPERATION_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "N_COINS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "REMOVE_LIQUIDITY_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "accessControl",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "addressProvider",
    outputs: [
      {
        internalType: "contract IAddressProvider",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "addressRegistry",
    outputs: [
      {
        internalType: "contract IAddressRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "poolAddress",
        type: "address",
      },
      {
        internalType: "uint256[2]",
        name: "amounts",
        type: "uint256[2]",
      },
      {
        internalType: "uint256",
        name: "minMintAmount",
        type: "uint256",
      },
    ],
    name: "deploy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "manager",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "poolAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256[2]",
        name: "minAmounts",
        type: "uint256[2]",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "poolAddress",
        type: "address",
      },
      {
        internalType: "uint256[2]",
        name: "amounts",
        type: "uint256[2]",
      },
      {
        internalType: "uint256",
        name: "maxBurnAmount",
        type: "uint256",
      },
    ],
    name: "withdrawImbalance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "poolAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
      {
        internalType: "int128",
        name: "i",
        type: "int128",
      },
      {
        internalType: "uint256",
        name: "minAmount",
        type: "uint256",
      },
    ],
    name: "withdrawOneCoin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x61016060408190527fad02fbc13153ebd0c0ef004ff61ba31d9ce93d7998e6fc3a4a4a667ac0ae2a1660e0527f99a732c1592dacad61c17aa1d8c4a304ed8aa6966133090e2df7f7c3ec3c66f7610100527f4d4953435f4f5045524154494f4e5f524f4c450000000000000000000000000090527fb31eaee23a579dabb2a4effb45a79031addeff3990e6fc9284cc2ad257c588a1610120523480156100a457600080fd5b50604051620024db380380620024db833981810160405260808110156100c957600080fd5b50805160208201516040830151606090930151919290918383836001600160a01b038316610130576040805162461bcd60e51b815260206004820152600f60248201526e494e56414c49445f4144445245535360881b604482015290519081900360640190fd5b6001600160a01b03821661017d576040805162461bcd60e51b815260206004820152600f60248201526e494e56414c49445f4144445245535360881b604482015290519081900360640190fd5b6001600160a01b0381166101ca576040805162461bcd60e51b815260206004820152600f60248201526e494e56414c49445f4144445245535360881b604482015290519081900360640190fd5b6001600160601b0319606093841b811660805291831b821660a05290911b1660c0526001600160a01b038116610247576040805162461bcd60e51b815260206004820152601e60248201527f494e56414c49445f43555256455f414444524553535f50524f56494445520000604482015290519081900360640190fd5b6001600160601b031960609190911b166101405250505060805160601c60a05160601c60c05160601c60e05161010051610120516101405160601c6121d262000309600039806102c252806118e25250806106ae52508061038b52806106d25280610da452806112d8525080610275528061077752508061095c52806115f05280611a1052508061029952806103c152806107ad5280610dda528061130e5250806102e6528061031352806106ff5280610d2c528061126052506121d26000f3fe608060405234801561001057600080fd5b50600436106100d45760003560e01c806361bea27f11610081578063cb1fe3751161005b578063cb1fe375146101d0578063cc58349e1461020b578063f3ad65f41461026b576100d4565b806361bea27f1461018f5780637e841d5414610197578063bed69e331461019f576100d4565b80632954018c116100b25780632954018c1461011f578063481c6a75146101275780635d868bff1461012f576100d4565b80630f967dd6146100d957806313007d55146100f35780632935775014610117575b600080fd5b6100e1610273565b60408051918252519081900360200190f35b6100fb610297565b604080516001600160a01b039092168252519081900360200190f35b6100e16102bb565b6100fb6102c0565b6100fb6102e4565b61018d6004803603608081101561014557600080fd5b6040805180820182526001600160a01b038435169392830192916060830191906020840190600290839083908082843760009201919091525091945050903591506103089050565b005b6100e16106ac565b6100e16106d0565b61018d600480360360808110156101b557600080fd5b506001600160a01b03813516906020810190606001356106f4565b61018d600480360360808110156101e657600080fd5b506001600160a01b03813516906020810135906040810135600f0b9060600135610d21565b61018d6004803603608081101561022157600080fd5b6040805180820182526001600160a01b0384351693602081013593810192909160808301918084019060029083908390808284376000920191909152509194506112559350505050565b6100fb6115ee565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b600281565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461037b576040805162461bcd60e51b81526020600482015260136024820152724e4f545f4d414e414745525f4144445245535360681b604482015290519081900360640190fd5b60408051632474521560e21b81527f0000000000000000000000000000000000000000000000000000000000000000600482015233602482015290516001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016916391d14854916044808301926020929190829003018186803b15801561040757600080fd5b505afa15801561041b573d6000803e3d6000fd5b505050506040513d602081101561043157600080fd5b5051610484576040805162461bcd60e51b815260206004820152601960248201527f4e4f545f52454d4f56455f4c49515549444954595f524f4c4500000000000000604482015290519081900360640190fd5b60006104908483611612565b604080516370a0823160e01b815230600482015290519192506000916001600160a01b038416916370a08231916024808301926020929190829003018186803b1580156104dc57600080fd5b505afa1580156104f0573d6000803e3d6000fd5b505050506040513d602081101561050657600080fd5b50519050610512612105565b61051b8661164b565b9050856001600160a01b031663e310327386866040518363ffffffff1660e01b81526004018083600260200280838360005b8381101561056557818101518382015260200161054d565b5050505090500182815260200192505050600060405180830381600087803b15801561059057600080fd5b505af11580156105a4573d6000803e3d6000fd5b5050604080516370a0823160e01b81523060048201529051600093506001600160a01b03871692506370a0823191602480820192602092909190829003018186803b1580156105f257600080fd5b505afa158015610606573d6000803e3d6000fd5b505050506040513d602081101561061c57600080fd5b50519050610628612105565b6106318861164b565b905061063e83828961176f565b8561064f858463ffffffff61182416565b11156106a2576040805162461bcd60e51b815260206004820152601060248201527f4c505f434f53545f544f4f5f4849474800000000000000000000000000000000604482015290519081900360640190fd5b5050505050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610767576040805162461bcd60e51b81526020600482015260136024820152724e4f545f4d414e414745525f4144445245535360681b604482015290519081900360640190fd5b60408051632474521560e21b81527f0000000000000000000000000000000000000000000000000000000000000000600482015233602482015290516001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016916391d14854916044808301926020929190829003018186803b1580156107f357600080fd5b505afa158015610807573d6000803e3d6000fd5b505050506040513d602081101561081d57600080fd5b5051610870576040805162461bcd60e51b815260206004820152601660248201527f4e4f545f4144445f4c49515549444954595f524f4c4500000000000000000000604482015290519081900360640190fd5b600061087b84611881565b9050600260005b81811015610b2557600085826002811061089857fe5b60200201351115610b1d576000866001600160a01b031663c6610657836040518263ffffffff1660e01b815260040180828152602001915050602060405180830381600087803b1580156108eb57600080fd5b505af11580156108ff573d6000803e3d6000fd5b505050506040513d602081101561091557600080fd5b5051604080517feb6b26400000000000000000000000000000000000000000000000000000000081526001600160a01b0380841660048301526000602483015291519293507f00000000000000000000000000000000000000000000000000000000000000009091169163eb6b264091604480820192602092909190829003018186803b1580156109a557600080fd5b505afa1580156109b9573d6000803e3d6000fd5b505050506040513d60208110156109cf57600080fd5b5051610a22576040805162461bcd60e51b815260206004820152600c60248201527f494e56414c49445f434f494e0000000000000000000000000000000000000000604482015290519081900360640190fd5b604080516370a0823160e01b815230600482015290516000916001600160a01b038416916370a0823191602480820192602092909190829003018186803b158015610a6c57600080fd5b505afa158015610a80573d6000803e3d6000fd5b505050506040513d6020811015610a9657600080fd5b50519050868360028110610aa657fe5b6020020135811015610aff576040805162461bcd60e51b815260206004820152601460248201527f494e53554646494349454e545f42414c414e4345000000000000000000000000604482015290519081900360640190fd5b610b1a8289898660028110610b1057fe5b6020020135611b0a565b50505b600101610882565b50604080516370a0823160e01b815230600482015290516000916001600160a01b038516916370a0823191602480820192602092909190829003018186803b158015610b7057600080fd5b505afa158015610b84573d6000803e3d6000fd5b505050506040513d6020811015610b9a57600080fd5b5051604080517f0b4c7e4d0000000000000000000000000000000000000000000000000000000081529192506001600160a01b03881691630b4c7e4d91889188916004909101908190849080828437600081840152601f19601f82011690508083019250505082815260200192505050600060405180830381600087803b158015610c2457600080fd5b505af1158015610c38573d6000803e3d6000fd5b5050604080516370a0823160e01b81523060048201529051600093506001600160a01b03871692506370a0823191602480820192602092909190829003018186803b158015610c8657600080fd5b505afa158015610c9a573d6000803e3d6000fd5b505050506040513d6020811015610cb057600080fd5b5051905084610cc5828463ffffffff61182416565b1015610d18576040805162461bcd60e51b815260206004820152600e60248201527f4c505f414d545f544f4f5f4c4f57000000000000000000000000000000000000604482015290519081900360640190fd5b50505050505050565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610d94576040805162461bcd60e51b81526020600482015260136024820152724e4f545f4d414e414745525f4144445245535360681b604482015290519081900360640190fd5b60408051632474521560e21b81527f0000000000000000000000000000000000000000000000000000000000000000600482015233602482015290516001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016916391d14854916044808301926020929190829003018186803b158015610e2057600080fd5b505afa158015610e34573d6000803e3d6000fd5b505050506040513d6020811015610e4a57600080fd5b5051610e9d576040805162461bcd60e51b815260206004820152601960248201527f4e4f545f52454d4f56455f4c49515549444954595f524f4c4500000000000000604482015290519081900360640190fd5b6000610ea98585611612565b90506000856001600160a01b031663c661065785600f0b6040518263ffffffff1660e01b815260040180828152602001915050602060405180830381600087803b158015610ef657600080fd5b505af1158015610f0a573d6000803e3d6000fd5b505050506040513d6020811015610f2057600080fd5b5051604080516370a0823160e01b815230600482015290519192506000916001600160a01b038516916370a08231916024808301926020929190829003018186803b158015610f6e57600080fd5b505afa158015610f82573d6000803e3d6000fd5b505050506040513d6020811015610f9857600080fd5b5051604080516370a0823160e01b815230600482015290519192506000916001600160a01b038516916370a08231916024808301926020929190829003018186803b158015610fe657600080fd5b505afa158015610ffa573d6000803e3d6000fd5b505050506040513d602081101561101057600080fd5b5051604080517f1a4d01d2000000000000000000000000000000000000000000000000000000008152600481018a9052600f89810b900b60248201526044810188905290519192506001600160a01b038a1691631a4d01d29160648082019260009290919082900301818387803b15801561108a57600080fd5b505af115801561109e573d6000803e3d6000fd5b5050604080516370a0823160e01b81523060048201529051600093506001600160a01b03881692506370a0823191602480820192602092909190829003018186803b1580156110ec57600080fd5b505afa158015611100573d6000803e3d6000fd5b505050506040513d602081101561111657600080fd5b5051604080516370a0823160e01b815230600482015290519192506000916001600160a01b038716916370a08231916024808301926020929190829003018186803b15801561116457600080fd5b505afa158015611178573d6000803e3d6000fd5b505050506040513d602081101561118e57600080fd5b505190508083106111e6576040805162461bcd60e51b815260206004820152601560248201527f42414c414e43455f4d5553545f494e4352454153450000000000000000000000604482015290519081900360640190fd5b816111f7858b63ffffffff61182416565b14611249576040805162461bcd60e51b815260206004820152601560248201527f4c505f544f4b454e5f414d545f4d49534d415443480000000000000000000000604482015290519081900360640190fd5b50505050505050505050565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146112c8576040805162461bcd60e51b81526020600482015260136024820152724e4f545f4d414e414745525f4144445245535360681b604482015290519081900360640190fd5b60408051632474521560e21b81527f0000000000000000000000000000000000000000000000000000000000000000600482015233602482015290516001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016916391d14854916044808301926020929190829003018186803b15801561135457600080fd5b505afa158015611368573d6000803e3d6000fd5b505050506040513d602081101561137e57600080fd5b50516113d1576040805162461bcd60e51b815260206004820152601960248201527f4e4f545f52454d4f56455f4c49515549444954595f524f4c4500000000000000604482015290519081900360640190fd5b60006113dd8484611612565b604080516370a0823160e01b815230600482015290519192506000916001600160a01b038416916370a08231916024808301926020929190829003018186803b15801561142957600080fd5b505afa15801561143d573d6000803e3d6000fd5b505050506040513d602081101561145357600080fd5b5051905061145f612105565b6114688661164b565b9050856001600160a01b0316635b36389c86866040518363ffffffff1660e01b81526004018083815260200182600260200280838360005b838110156114b85781810151838201526020016114a0565b5050505090500192505050600060405180830381600087803b1580156114dd57600080fd5b505af11580156114f1573d6000803e3d6000fd5b5050604080516370a0823160e01b81523060048201529051600093506001600160a01b03871692506370a0823191602480820192602092909190829003018186803b15801561153f57600080fd5b505afa158015611553573d6000803e3d6000fd5b505050506040513d602081101561156957600080fd5b50519050611575612105565b61157e8861164b565b905061158b83828861176f565b8161159c858963ffffffff61182416565b146106a2576040805162461bcd60e51b815260206004820152601560248201527f4c505f544f4b454e5f414d545f4d49534d415443480000000000000000000000604482015290519081900360640190fd5b7f000000000000000000000000000000000000000000000000000000000000000081565b60008061161e84611881565b9050836001600160a01b0316816001600160a01b03161461164457611644818585611b0a565b9392505050565b611653612105565b60005b6002811015611769576000836001600160a01b031663c6610657836040518263ffffffff1660e01b815260040180828152602001915050602060405180830381600087803b1580156116a757600080fd5b505af11580156116bb573d6000803e3d6000fd5b505050506040513d60208110156116d157600080fd5b5051604080516370a0823160e01b815230600482015290519192506000916001600160a01b038416916370a08231916024808301926020929190829003018186803b15801561171f57600080fd5b505afa158015611733573d6000803e3d6000fd5b505050506040513d602081101561174957600080fd5b505190508084846002811061175a57fe5b60200201525050600101611656565b50919050565b60005b600281101561181e57600082826002811061178957fe5b60200201519050806117c28684600281106117a057fe5b60200201518685600281106117b157fe5b60200201519063ffffffff61182416565b1015611815576040805162461bcd60e51b815260206004820152601660248201527f494e56414c49445f42414c414e43455f4348414e474500000000000000000000604482015290519081900360640190fd5b50600101611772565b50505050565b60008282111561187b576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b60006001600160a01b0382166118de576040805162461bcd60e51b815260206004820152601460248201527f494e56414c49445f504f4f4c5f41444452455353000000000000000000000000604482015290519081900360640190fd5b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a262904b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561193957600080fd5b505afa15801561194d573d6000803e3d6000fd5b505050506040513d602081101561196357600080fd5b5051604080517f379510490000000000000000000000000000000000000000000000000000000081526001600160a01b03868116600483015291519293506000929184169163379510499160248082019260209290919082900301818787803b1580156119cf57600080fd5b505af11580156119e3573d6000803e3d6000fd5b505050506040513d60208110156119f957600080fd5b505190506001600160a01b038116611a0e5750825b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663eb6b26408260006040518363ffffffff1660e01b815260040180836001600160a01b03166001600160a01b031681526020018281526020019250505060206040518083038186803b158015611a8d57600080fd5b505afa158015611aa1573d6000803e3d6000fd5b505050506040513d6020811015611ab757600080fd5b5051611644576040805162461bcd60e51b815260206004820152601060248201527f494e56414c49445f4c505f544f4b454e00000000000000000000000000000000604482015290519081900360640190fd5b60408051636eb1769f60e11b81523060048201526001600160a01b038481166024830152915160009286169163dd62ed3e916044808301926020929190829003018186803b158015611b5b57600080fd5b505afa158015611b6f573d6000803e3d6000fd5b505050506040513d6020811015611b8557600080fd5b505190508015611ba957611ba96001600160a01b038516848363ffffffff611bc316565b61181e6001600160a01b038516848463ffffffff611cee16565b6000611c6b826040518060600160405280602981526020016121246029913960408051636eb1769f60e11b81523060048201526001600160a01b03888116602483015291519189169163dd62ed3e91604480820192602092909190829003018186803b158015611c3257600080fd5b505afa158015611c46573d6000803e3d6000fd5b505050506040513d6020811015611c5c57600080fd5b5051919063ffffffff611d7f16565b604080516001600160a01b038616602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f095ea7b30000000000000000000000000000000000000000000000000000000017905290915061181e908590611e16565b60408051636eb1769f60e11b81523060048201526001600160a01b0384811660248301529151600092611c6b9285929188169163dd62ed3e91604480820192602092909190829003018186803b158015611d4757600080fd5b505afa158015611d5b573d6000803e3d6000fd5b505050506040513d6020811015611d7157600080fd5b50519063ffffffff611ecc16565b60008184841115611e0e5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611dd3578181015183820152602001611dbb565b50505050905090810190601f168015611e005780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6060611e6b826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611f269092919063ffffffff16565b805190915015611ec757808060200190516020811015611e8a57600080fd5b5051611ec75760405162461bcd60e51b815260040180806020018281038252602a815260200180612173602a913960400191505060405180910390fd5b505050565b600082820183811015611644576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b6060611f358484600085611f3d565b949350505050565b606082471015611f7e5760405162461bcd60e51b815260040180806020018281038252602681526020018061214d6026913960400191505060405180910390fd5b611f8785612099565b611fd8576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b60006060866001600160a01b031685876040518082805190602001908083835b602083106120175780518252601f199092019160209182019101611ff8565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114612079576040519150601f19603f3d011682016040523d82523d6000602084013e61207e565b606091505b509150915061208e82828661209f565b979650505050505050565b3b151590565b606083156120ae575081611644565b8251156120be5782518084602001fd5b60405162461bcd60e51b8152602060048201818152845160248401528451859391928392604401919085019080838360008315611dd3578181015183820152602001611dbb565b6040518060400160405280600290602082028036833750919291505056fe5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a2646970667358221220967ae85635bb6c6757cebc85f3bcbd4b45b100084cc98595a7fffbff749945cc64736f6c634300060b0033";

export class CurveControllerTemplate__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _manager: string,
    _accessControl: string,
    _addressRegistry: string,
    _curveAddressProvider: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CurveControllerTemplate> {
    return super.deploy(
      _manager,
      _accessControl,
      _addressRegistry,
      _curveAddressProvider,
      overrides || {}
    ) as Promise<CurveControllerTemplate>;
  }
  getDeployTransaction(
    _manager: string,
    _accessControl: string,
    _addressRegistry: string,
    _curveAddressProvider: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _manager,
      _accessControl,
      _addressRegistry,
      _curveAddressProvider,
      overrides || {}
    );
  }
  attach(address: string): CurveControllerTemplate {
    return super.attach(address) as CurveControllerTemplate;
  }
  connect(signer: Signer): CurveControllerTemplate__factory {
    return super.connect(signer) as CurveControllerTemplate__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CurveControllerTemplateInterface {
    return new utils.Interface(_abi) as CurveControllerTemplateInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CurveControllerTemplate {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as CurveControllerTemplate;
  }
}
